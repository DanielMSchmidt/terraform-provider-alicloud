---
subcategory: "Auto Scaling"
layout: "alicloud"
page_title: "Alicloud: alicloud_ess_scaling_groups"
sidebar_current: "docs-alicloud_ess_scaling_groups"
description: |-
    Provides a list of scaling groups available to the user.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud_ess_scaling_groups

This data source provides available scaling group resources. 

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const dataAlicloudEssScalingGroupsScalinggroupsDs =
      new alicloud.dataAlicloudEssScalingGroups.DataAlicloudEssScalingGroups(
        this,
        "scalinggroups_ds",
        {
          ids: ["scaling_group_id1", "scaling_group_id2"],
          nameRegex: "scaling_group_name",
        }
      );
    new cdktf.TerraformOutput(this, "first_scaling_group", {
      value: cdktf.propertyAccess(
        dataAlicloudEssScalingGroupsScalinggroupsDs.groups,
        ["0", "id"]
      ),
    });
  }
}

```

## Argument Reference

The following arguments are supported:

* `nameRegex` - (Optional) A regex string to filter resulting scaling groups by name.
* `ids` - (Optional) A list of scaling group IDs.
* `outputFile` - (Optional) File name where to save data source results (after running `terraform plan`).

## Attributes Reference

The following attributes are exported in addition to the arguments listed above:

* `ids` - A list of scaling group ids.
* `names` - A list of scaling group names.
* `groups` - A list of scaling groups. Each element contains the following attributes:
  * `id` - ID of the scaling group.
  * `name` - Name of the scaling group.
  * `activeScalingConfiguration` -Active scaling configuration for scaling group.
  * `launchTemplateId` - Active launch template ID for scaling group.
  * `launchTemplateVersion` - Version of active launch template.
  * `regionId` - Region ID the scaling group belongs to.
  * `minSize` - The minimum number of ECS instances.
  * `maxSize` - The maximum number of ECS instances.
  * `cooldownTime` - Default cooldown time of scaling group.
  * `removalPolicies` - Removal policy used to select the ECS instance to remove from the scaling group.
  * `loadBalancerIds` - Slb instances id which the ECS instance attached to.
  * `dbInstanceIds` - Db instances id which the ECS instance attached to.
  * `vswitchIds` - Vswitches id in which the ECS instance launched.
  * `lifecycleState` - Lifecycle state of scaling group.
  * `vpcId` - The ID of the VPC to which the scaling group belongs.
  * `vswitchId` - The ID of the vSwitch to which the scaling group belongs.
  * `healthCheckType` - The health check method of the scaling group.
  * `suspendedProcesses` - The Process in suspension.
  * `groupDeletionProtection` - Whether the scaling group deletion protection is enabled.
  * `modificationTime` - The modification time.
  * `totalCapacity` - Number of instances in scaling group.
  * `totalInstanceCount` - The number of all ECS instances in the scaling group.
  * `activeCapacity` - Number of active instances in scaling group.
  * `pendingCapacity` - Number of pending instances in scaling group.
  * `removingCapacity` - Number of removing instances in scaling group.
  * `creationTime` - Creation time of scaling group.
  * `tags` - A mapping of tags to assign to the resource.
  
  

<!-- cache-key: cdktf-0.17.0-pre.15 input-5d28446a03c9143ffe773838e5ae001c264e55a10cfb1f5a87102e62dca95862 -->