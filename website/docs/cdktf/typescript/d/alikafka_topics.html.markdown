---
subcategory: "AliKafka"
layout: "alicloud"
page_title: "Alicloud: alicloud_alikafka_topics"
sidebar_current: "docs-alicloud-datasource-alikafka-topics"
description: |-
    Provides a list of alikafka topics available to the user.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_alikafka\_topics

This data source provides a list of ALIKAFKA Topics in an Alibaba Cloud account according to the specified filters.

-> **NOTE:** Available in 1.56.0+

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const dataAlicloudAlikafkaTopicsTopicsDs =
      new alicloud.dataAlicloudAlikafkaTopics.DataAlicloudAlikafkaTopics(
        this,
        "topics_ds",
        {
          instanceId: "xxx",
          nameRegex: "alikafkaTopicName",
          outputFile: "topics.txt",
        }
      );
    new cdktf.TerraformOutput(this, "first_topic_name", {
      value: cdktf.propertyAccess(dataAlicloudAlikafkaTopicsTopicsDs.topics, [
        "0",
        "topic",
      ]),
    });
  }
}

```

## Argument Reference

The following arguments are supported:

* `ids` - (Optional, ForceNew, Computed)  A list of ALIKAFKA Topics IDs, It is formatted to `<instance_id>:<topic>`.
* `instanceId` - (Required) ID of the instance.
* `nameRegex` - (Optional) A regex string to filter results by the topic name.
* `topic` - (Optional) A topic to filter results by the topic name.  
* `outputFile` - (Optional) File name where to save data source results (after running `terraform plan`).

## Attributes Reference

The following attributes are exported in addition to the arguments listed above:

* `names` - A list of topic names.
* `topics` - A list of topics. Each element contains the following attributes:
  * `id` - The ID of the topic, It is formatted to `<instance_id>:<topic>`.
  * `topic` - The name of the topic.
  * `createTime` - Time of creation.
  * `localTopic` - whether the current topic is kafka local topic or not.
  * `compactTopic` - whether the current topic is kafka compact topic or not.
  * `partitionNum` - Partition number of the topic.
  * `remark` - Remark of the topic.
  * `status` - The current status code of the topic. There are three values to describe the topic status: 0 stands for the topic is in service, 1 stands for freezing and 2 stands for pause. 
  * `statusName` - The status_name of the topic.
  * `instanceId` - The instance_id of the instance.
  * `tags` - A mapping of tags to assign to the topic.
<!-- cache-key: cdktf-0.17.0-pre.15 input-dd5cabda99e84146ada2a6f383eb1280ff380fc955d4e12f779a7fcd0840551f -->