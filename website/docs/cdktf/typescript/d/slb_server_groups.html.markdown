---
subcategory: "Classic Load Balancer (SLB)"
layout: "alicloud"
page_title: "Alicloud: alicloud_slb_server_groups"
sidebar_current: "docs-alicloud-datasource-slb-server_groups"
description: |-
    Provides a list of VServer groups related to a server load balancer to the user.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_slb_server_groups

This data source provides the VServer groups related to a server load balancer.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    /*Terraform Variables are not always the best fit for getting inputs in the context of Terraform CDK.
    You can read more about this at https://cdk.tf/variables*/
    const name = new cdktf.TerraformVariable(this, "name", {
      default: "slbservergroups",
    });
    const alicloudVpcDefault = new alicloud.vpc.Vpc(this, "default", {
      cidrBlock: "172.16.0.0/16",
      vpcName: name.stringValue,
    });
    const dataAlicloudZonesDefault =
      new alicloud.dataAlicloudZones.DataAlicloudZones(this, "default_2", {
        availableDiskCategory: "cloud_efficiency",
        availableResourceCreation: "VSwitch",
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAlicloudZonesDefault.overrideLogicalId("default");
    const alicloudVswitchDefault = new alicloud.vswitch.Vswitch(
      this,
      "default_3",
      {
        cidrBlock: "172.16.0.0/16",
        vpcId: cdktf.Token.asString(alicloudVpcDefault.id),
        vswitchName: name.stringValue,
        zoneId: cdktf.Token.asString(
          cdktf.propertyAccess(dataAlicloudZonesDefault.zones, ["0", "id"])
        ),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudVswitchDefault.overrideLogicalId("default");
    const alicloudSlbLoadBalancerDefault =
      new alicloud.slbLoadBalancer.SlbLoadBalancer(this, "default_4", {
        loadBalancerName: name.stringValue,
        vswitchId: cdktf.Token.asString(alicloudVswitchDefault.id),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudSlbLoadBalancerDefault.overrideLogicalId("default");
    const alicloudSlbServerGroupDefault =
      new alicloud.slbServerGroup.SlbServerGroup(this, "default_5", {
        loadBalancerId: cdktf.Token.asString(alicloudSlbLoadBalancerDefault.id),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudSlbServerGroupDefault.overrideLogicalId("default");
    const dataAlicloudSlbServerGroupsSampleDs =
      new alicloud.dataAlicloudSlbServerGroups.DataAlicloudSlbServerGroups(
        this,
        "sample_ds",
        {
          loadBalancerId: cdktf.Token.asString(
            alicloudSlbLoadBalancerDefault.id
          ),
        }
      );
    new cdktf.TerraformOutput(this, "first_slb_server_group_id", {
      value: cdktf.propertyAccess(
        dataAlicloudSlbServerGroupsSampleDs.slbServerGroups,
        ["0", "id"]
      ),
    });
  }
}

```

## Argument Reference

The following arguments are supported:

* `loadBalancerId` - ID of the SLB.
* `ids` - (Optional) A list of VServer group IDs to filter results.
* `nameRegex` - (Optional) A regex string to filter results by VServer group name.
* `outputFile` - (Optional) File name where to save data source results (after running `terraform plan`).

## Attributes Reference

The following attributes are exported in addition to the arguments listed above:

* `ids` - A list of SLB VServer groups IDs.
* `names` - A list of SLB VServer groups names.
* `slbServerGroups` - A list of SLB VServer groups. Each element contains the following attributes:
  * `id` - VServer group ID.
  * `name` - VServer group name.
  * `servers` - ECS instances associated to the group. Each element contains the following attributes:
    * `instanceId` - ID of the attached ECS instance.
    * `weight` - Weight associated to the ECS instance.

<!-- cache-key: cdktf-0.17.0-pre.15 input-682cd820cf592e96b58b49183481e0c81886d844f599fbbc0161f060b049bb11 -->