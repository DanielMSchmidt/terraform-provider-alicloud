---
subcategory: "Database Gateway"
layout: "alicloud"
page_title: "Alicloud: alicloud_database_gateway_gateways"
sidebar_current: "docs-alicloud-datasource-database-gateway-gateways"
description: |-
  Provides a list of Database Gateway Gateways to the user.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_database\_gateway\_gateways

This data source provides the Database Gateway Gateways of the current Alibaba Cloud user.

-> **NOTE:** Available in v1.135.0+.

## Example Usage

Basic Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const dataAlicloudDatabaseGatewayGatewaysIds =
      new alicloud.dataAlicloudDatabaseGatewayGateways.DataAlicloudDatabaseGatewayGateways(
        this,
        "ids",
        {
          ids: ["example_id"],
        }
      );
    const dataAlicloudDatabaseGatewayGatewaysNameRegex =
      new alicloud.dataAlicloudDatabaseGatewayGateways.DataAlicloudDatabaseGatewayGateways(
        this,
        "nameRegex",
        {
          nameRegex: "^my-Gateway",
        }
      );
    new cdktf.TerraformOutput(this, "database_gateway_gateway_id_1", {
      value: cdktf.propertyAccess(
        dataAlicloudDatabaseGatewayGatewaysIds.gateways,
        ["0", "id"]
      ),
    });
    new cdktf.TerraformOutput(this, "database_gateway_gateway_id_2", {
      value: cdktf.propertyAccess(
        dataAlicloudDatabaseGatewayGatewaysNameRegex.gateways,
        ["0", "id"]
      ),
    });
  }
}

```

## Argument Reference

The following arguments are supported:

* `enableDetails` - (Optional) Default to `false`. Set it to `true` can output more details about resource attributes.
* `ids` - (Optional, ForceNew, Computed)  A list of Gateway IDs.
* `nameRegex` - (Optional, ForceNew) A regex string to filter results by Gateway name.
* `outputFile` - (Optional) File name where to save data source results (after running `terraform plan`).
* `searchKey` - (Optional, ForceNew) The search key.
* `status` - (Optional, ForceNew) The status of gateway. Valid values: `exception`, `new`, `running`, `stopped`.

## Argument Reference

The following attributes are exported in addition to the arguments listed above:

* `names` - A list of Gateway names.
* `gateways` - A list of Database Gateway Gateways. Each element contains the following attributes:
    * `createTime` - The creation time of Gateway.
    * `gatewayDesc` - The description of Gateway.
    * `gatewayInstance` - Gateway instance List.
        * `currentVersion` - The version of Gateway instance.
        * `localIp` -  The Local IP ADDRESS of Gateway instance.
        * `outputIp` - The host of Gateway instance.
        * `connectEndpointType` - The connection type of Gateway instance.
        * `currentDaemonVersion` - The process of version number of Gateway instance.
        * `endPoint` - The endpoint address of Gateway instance.
        * `gatewayInstanceId` - The id of Gateway instance.
        * `gatewayInstanceStatus` - The status of Gateway instance. Valid values: `exception`, `new`, `running`, `stopped`.
        * `lastUpdateTime` - The last Updated time stamp of Gateway instance.
        * `message` - The prompt information of Gateway instance.
    * `gatewayName` - The name of the Gateway.
    * `hosts` - A host of information.
    * `id` - The ID of Gateway.
    * `modifiedTime` - The Modify time of Gateway.
    * `parentId` - The parent node Id of Gateway.
    * `status` - The status of gateway. Valid values: `exception`, `new`, `running`, `stopped`.
    * `userId` - The user's id.

<!-- cache-key: cdktf-0.17.0-pre.15 input-f5d22bbb9dfce2916540d32b2d690a52da2b1b5c8b8321462547ef033e7f7584 -->