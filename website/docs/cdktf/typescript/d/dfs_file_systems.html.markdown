---
subcategory: "Apsara File Storage for HDFS (DFS)"
layout: "alicloud"
page_title: "Alicloud: alicloud_dfs_file_systems"
sidebar_current: "docs-alicloud-datasource-dfs-file-systems"
description: |-
  Provides a list of Dfs File Systems to the user.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_dfs\_file\_systems

This data source provides the Dfs File Systems of the current Alibaba Cloud user.

-> **NOTE:** Available in v1.140.0+.

## Example Usage

Basic Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const dataAlicloudDfsFileSystemsIds =
      new alicloud.dataAlicloudDfsFileSystems.DataAlicloudDfsFileSystems(
        this,
        "ids",
        {
          ids: ["example_id"],
        }
      );
    const dataAlicloudDfsFileSystemsNameRegex =
      new alicloud.dataAlicloudDfsFileSystems.DataAlicloudDfsFileSystems(
        this,
        "nameRegex",
        {
          nameRegex: "^my-FileSystem",
        }
      );
    new cdktf.TerraformOutput(this, "dfs_file_system_id_1", {
      value: cdktf.propertyAccess(dataAlicloudDfsFileSystemsIds.systems, [
        "0",
        "id",
      ]),
    });
    new cdktf.TerraformOutput(this, "dfs_file_system_id_2", {
      value: cdktf.propertyAccess(dataAlicloudDfsFileSystemsNameRegex.systems, [
        "0",
        "id",
      ]),
    });
  }
}

```

## Argument Reference

The following arguments are supported:

* `ids` - (Optional, ForceNew, Computed)  A list of File System IDs.
* `nameRegex` - (Optional, ForceNew) A regex string to filter results by File System name.
* `outputFile` - (Optional) File name where to save data source results (after running `terraform plan`).

## Argument Reference

The following attributes are exported in addition to the arguments listed above:

* `names` - A list of File System names.
* `systems` - A list of Dfs File Systems. Each element contains the following attributes:
	* `createTime` - The creation time of the File system.
	* `description` - The description of the File system.
	* `fileSystemId` - The ID of the File System.
	* `fileSystemName` - The name of the File system.
	* `id` - The ID of the File System.
	* `mountPointCount` - The number of Mount points.
	* `numberOfDirectories` - The number of directories.
	* `numberOfFiles` - The number of files.
	* `protocolType` - The protocol type. Valid values: `hdfs`.
	* `provisionedThroughputInMiBps` - The preset throughput of the File system. Valid values: `1` to `1024`, Unit: MB/s.
	* `spaceCapacity` - The capacity budget of the File system.
	* `storagePackageId` - Storage package Id.
	* `storageType` - The storage specifications of the File system. Valid values: `performance`, `standard`.
	* `throughputMode` - The throughput mode of the File system. Valid values: `provisioned`, `standard`.
	* `usedSpaceSize` - The used space of the File system.
	* `zoneId` - The zone ID of the File system.

<!-- cache-key: cdktf-0.17.0-pre.15 input-9dcb20607139caa9f7ae719eed8cb91c0fa70ed3a8e2cd658531fb8b31f8c251 -->