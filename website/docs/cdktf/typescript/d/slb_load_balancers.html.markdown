---
subcategory: "Classic Load Balancer (SLB)"
layout: "alicloud"
page_title: "Alicloud: alicloud_slbs_load_balancers"
sidebar_current: "docs-alicloud-datasource-slb-load-balancers"
description: |-
    Provides a list of server load balancers to the user.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_slb\_load\_balancers

This data source provides the server load balancers of the current Alibaba Cloud user.

-> **NOTE:** Available in 1.123.1+

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const dataAlicloudSlbLoadBalancersExample =
      new alicloud.dataAlicloudSlbLoadBalancers.DataAlicloudSlbLoadBalancers(
        this,
        "example",
        {
          nameRegex: "sample_slb",
          tags: {
            tagKey1: "tagValue1",
            tagKey2: "tagValue2",
          },
        }
      );
    new cdktf.TerraformOutput(this, "first_slb_id", {
      value: cdktf.propertyAccess(
        dataAlicloudSlbLoadBalancersExample.balancers,
        ["0", "id"]
      ),
    });
  }
}

```

## Argument Reference

The following arguments are supported:

* `ids` - (Optional) A list of SLBs IDs.
* `nameRegex` - (Optional) A regex string to filter results by SLB name.
* `networkType` - (Optional) Network type of the SLBs. Valid values: `vpc` and `classic`.
* `vpcId` - (Optional) ID of the VPC linked to the SLBs.
* `vswitchId` - (Optional) ID of the VSwitch linked to the SLBs.
* `address` - (Optional) Service address of the SLBs.
* `tags` - (Optional) A map of tags assigned to the SLB instances. The `tags` can have a maximum of 5 tag. It must be in the format:
* `outputFile` - (Optional) File name where to save data source results (after running `terraform plan`).
* `resourceGroupId` - (Optional, ForceNew) The Id of resource group which SLB belongs.
* `addressIpVersion` - (Optional, ForceNew) The address ip version. Valid values `ipv4` and `ipv6`.
* `addressType` - (Optional, ForceNew) The address type of the SLB. Valid values `internet` and `intranet`.
* `internetChargeType` - (Optional, ForceNew) The internet charge type. Valid values `payByBandwidth` and `payByTraffic`.
* `loadBalancerName` - (Optional, ForceNew) The name of the SLB.
* `paymentType` - (Optional, ForceNew) The payment type of SLB. Valid values `payAsYouGo` and `subscription`.
* `serverId` - (Optional, ForceNew) The server ID.
* `serverIntranetAddress` - (Optional, ForceNew) The server intranet address.
* `masterZoneId` - (Optional, ForceNew) The master zone id of the SLB.
* `slaveZoneId` - (Optional, ForceNew) The slave zone id of the SLB.

## Attributes Reference

The following attributes are exported in addition to the arguments listed above:

* `ids` - A list of slb IDs.
* `names` - A list of slb names.
* `balancers` - A list of SLBs. Each element contains the following attributes:
    * `id` - ID of the SLB.
    * `address` - The IP address that the SLB instance uses to provide services.
    * `addressIpVersion` - The address ip version.
    * `addressType` - The address type.
    * `autoReleaseTime` - The auto release time.
    * `backendServers` - The backend servers of the SLB.
        * `description` - The description of servers.
        * `serverId` - The ID of the Elastic Compute Service (ECS) instance that is specified as a backend server of the CLB instance.
        * `type` - The type of servers.
        * `weight` - The weight of servers.
    * `bandwidth` - The bandwidth of the SLB.
    * `createTimeStamp` - The create time stamp of the SLB.
    * `deleteProtection` - Whether the SLB should delete protection.
    * `endTime` - The end time of the SLB.
    * `endTimeStamp` - The end time stamp of the SLB.
    * `internetChargeType` - The billing method of the Internet-facing SLB instance.
    * `listenerPortsAndProtocal` - The listener ports and protocal of the SLB.
        * `listenerPort` - The listener port.
        * `listenerProtocal` - The listener protoal.
    * `listenerPortsAndProtocol` - The listener ports and protocol of the SLB.
        * `description` - The description of protocol.
        * `forwardPort` - The forward port.
        * `listenerForward` - The listener forward.
        * `listenerPort` - The listener port.
        * `listenerProtocol` - The listener protocol.
    * `loadBalancerId` - Thd ID of the SLB.
    * `loadBalancerName` - The name of the SLB.
    * `masterZoneId` - Master availability zone of the SLBs.
    * `modificationProtectionReason` - The reason of modification protection.
    * `modificationProtectionStatus` - The status of modification protection.
    * `networkType` -  Network type of the SLB. Possible values: `vpc` and `classic`.
    * `regionIdAlias` - Region ID the SLB belongs to.
    * `renewalCycUnit` - The renewal cyc unit of the SLB.
    * `renewalDuration` - The renewal duration of the SLB.
    * `renewalStatus` - The renewal status of the SLB.
    * `resourceGroupId` - The ID of the resource group.
    * `slaveZoneId` - Slave availability zone of the SLBs.
    * `loadBalancerSpec` - The specification of the SLB.
    * `status` - SLB current status. Possible values: `inactive`, `active` and `locked`.
    * `tags` - The tags of the SLB.
    * `vswitchId` - ID of the VSwitch the SLB belongs to.
    * `vpcId` - ID of the VPC the SLB belongs to.

<!-- cache-key: cdktf-0.17.0-pre.15 input-e6188c36cca2674f1675e88662a867fe1f33044bb138ecaf7dc43809afc21314 -->