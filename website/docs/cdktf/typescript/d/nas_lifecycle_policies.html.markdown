---
subcategory: "Network Attached Storage (NAS)"
layout: "alicloud"
page_title: "Alicloud: alicloud_nas_lifecycle_policies"
sidebar_current: "docs-alicloud-datasource-nas-lifecycle-policies"
description: |-
  Provides a list of Nas Lifecycle Policies to the user.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_nas\_lifecycle\_policies

This data source provides the Nas Lifecycle Policies of the current Alibaba Cloud user.

-> **NOTE:** Available in v1.153.0+.

## Example Usage

Basic Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const dataAlicloudNasLifecyclePoliciesIds =
      new alicloud.dataAlicloudNasLifecyclePolicies.DataAlicloudNasLifecyclePolicies(
        this,
        "ids",
        {
          fileSystemId: "example_value",
          ids: ["my-LifecyclePolicy-1", "my-LifecyclePolicy-2"],
        }
      );
    const dataAlicloudNasLifecyclePoliciesNameRegex =
      new alicloud.dataAlicloudNasLifecyclePolicies.DataAlicloudNasLifecyclePolicies(
        this,
        "nameRegex",
        {
          fileSystemId: "example_value",
          nameRegex: "^my-LifecyclePolicy",
        }
      );
    new cdktf.TerraformOutput(this, "nas_lifecycle_policy_id_1", {
      value: cdktf.propertyAccess(
        dataAlicloudNasLifecyclePoliciesIds.policies,
        ["0", "id"]
      ),
    });
    new cdktf.TerraformOutput(this, "nas_lifecycle_policy_id_2", {
      value: cdktf.propertyAccess(
        dataAlicloudNasLifecyclePoliciesNameRegex.policies,
        ["0", "id"]
      ),
    });
  }
}

```

## Argument Reference

The following arguments are supported:

* `fileSystemId` - (Required, ForceNew) The ID of the file system.
* `ids` - (Optional, ForceNew, Computed)  A list of Lifecycle Policy IDs.
* `nameRegex` - (Optional, ForceNew) A regex string to filter results by Lifecycle Policy name.
* `outputFile` - (Optional) File name where to save data source results (after running `terraform plan`).

## Argument Reference

The following attributes are exported in addition to the arguments listed above:

* `names` - A list of Lifecycle Policy names.
* `policies` - A list of Nas Lifecycle Policies. Each element contains the following attributes:
	* `createTime` - The time when the lifecycle management policy was created.
	* `fileSystemId` - The ID of the file system.
	* `id` - The ID of the Lifecycle Policy. Its value is same as Queue Name.
	* `lifecyclePolicyName` - The name of the lifecycle management policy.
	* `lifecycleRuleName` - The rules in the lifecycle management policy.
	* `paths` - The list of absolute paths for multiple directories. In this case, you can associate a lifecycle management policy with each directory.
	* `storageType` - The storage type of the data that is dumped to the IA storage medium.
<!-- cache-key: cdktf-0.17.0-pre.15 input-1eee83ae232f449364ed9fbf04225d2b5bf5bd90a25e9a43bd6773644bddbc84 -->