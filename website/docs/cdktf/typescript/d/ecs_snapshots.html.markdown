---
subcategory: "ECS"
layout: "alicloud"
page_title: "Alicloud: alicloud_ecs_snapshots"
sidebar_current: "docs-alicloud-datasource-ecs-snapshots"
description: |-
  Provides a list of Ecs Snapshots to the user.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_ecs\_snapshots

This data source provides the Ecs Snapshots of the current Alibaba Cloud user.

-> **NOTE:** Available in v1.120.0+.

## Example Usage

Basic Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const dataAlicloudEcsSnapshotsExample =
      new alicloud.dataAlicloudEcsSnapshots.DataAlicloudEcsSnapshots(
        this,
        "example",
        {
          ids: ["s-bp1fvuxxxxxxxx"],
          nameRegex: "tf-test",
        }
      );
    new cdktf.TerraformOutput(this, "first_ecs_snapshot_id", {
      value: cdktf.propertyAccess(dataAlicloudEcsSnapshotsExample.snapshots, [
        "0",
        "id",
      ]),
    });
  }
}

```

## Argument Reference

The following arguments are supported:

* `category` - (Optional, ForceNew) The category of the snapshot. Valid Values: `flash` and `standard`.
* `dryRun` - (Optional, ForceNew) Specifies whether to check the validity of the request without actually making the request.
* `encrypted` - (Optional, ForceNew) Specifies whether the snapshot is encrypted.
* `ids` - (Optional, ForceNew, Computed)  A list of Snapshot IDs.
* `kmsKeyId` - (Optional, ForceNew) The kms key id.
* `nameRegex` - (Optional, ForceNew) A regex string to filter results by Snapshot name.
* `outputFile` - (Optional) File name where to save data source results (after running `terraform plan`).
* `resourceGroupId` - (Optional, ForceNew) The resource group id.
* `snapshotLinkId` - (Optional, ForceNew) The snapshot link id.
* `snapshotName` - (Optional, ForceNew) The name of the snapshot.
* `snapshotType` - (Optional, ForceNew) The type of the snapshot. Valid Values: `auto`, `user` and `all`. Default to: `all`.
* `sourceDiskType` - (Optional, ForceNew) The type of the disk for which the snapshot was created. Valid Values: `system`, `data`.
* `status` - (Optional, ForceNew) The status of the snapshot. Valid Values: `accomplished`, `failed`, `progressing` and `all`.
* `usage` - (Optional, ForceNew) A resource type that has a reference relationship. Valid Values: `image`, `disk`, `imageDisk` and `none`.
* `tags` - (Optional) A mapping of tags to assign to the snapshot.

## Argument Reference

The following attributes are exported in addition to the arguments listed above:

* `names` - A list of Snapshot names.
* `snapshots` - A list of Ecs Snapshots. Each element contains the following attributes:
	* `category` - The category of the snapshot.
	* `description` - The description of the snapshot.
	* `diskId` - The source disk id.
	* `encrypted` - Whether the snapshot is encrypted.
	* `id` - The ID of the Snapshot.
	* `instantAccess` - Whether snapshot speed availability is enabled.
	* `instantAccessRetentionDays` - Specifies the retention period of the instant access feature. After the retention period ends, the snapshot is automatically released.
	* `productCode` - The product number inherited from the mirror market.
	* `progress` - Snapshot creation progress, in percentage.
	* `remainTime` - Remaining completion time for the snapshot being created.
	* `resourceGroupId` - The resource group id.
	* `retentionDays` - Automatic snapshot retention days.
	* `snapshotId` - The snapshot id.
	* `snapshotName` - Snapshot Display Name.
	* `snapshotType` - Snapshot creation type.
	* `snapshotSn` - The serial number of the snapshot.
	* `sourceDiskSize` - Source disk capacity.
	* `sourceDiskType` - Source disk attributes.
	* `sourceStorageType` - Original disk type.
	* `status` - The status of the snapshot.
	* `tags` - The tags.
		* `tagKey` - The tag key.
		* `tagValue` - The tag value.
	* `usage` - A resource type that has a reference relationship.

<!-- cache-key: cdktf-0.17.0-pre.15 input-a6dcc57e0ff0d00996323ff653af44b18b222229a566bdd02fc3de7f3d008ed5 -->