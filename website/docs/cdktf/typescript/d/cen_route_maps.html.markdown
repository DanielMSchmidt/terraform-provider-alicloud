---
subcategory: "Cloud Enterprise Network (CEN)"
layout: "alicloud"
page_title: "Alicloud: alicloud_cen_route_maps"
sidebar_current: "docs-alicloud-datasource-cen-route-maps"
description: |-
    Provides a list of CEN(Cloud Enterprise Network) Route Maps owned by an Alibaba Cloud account.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_cen\_route\_maps

This data source provides CEN Route Maps available to the user.

-> **NOTE:** Available in v1.87.0+.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const dataAlicloudCenRouteMapsThis =
      new alicloud.dataAlicloudCenRouteMaps.DataAlicloudCenRouteMaps(
        this,
        "this",
        {
          cenId: "cen-ihdlgo87ai********",
          cenRegionId: "cn-hangzhou",
          descriptionRegex: "datasource_test",
          ids: ["cen-ihdlgo87ai:cenrmap-bnh97kb3mn********"],
          status: "Active",
          transmitDirection: "RegionIn",
        }
      );
    new cdktf.TerraformOutput(this, "first_cen_route_map_id", {
      value: cdktf.propertyAccess(dataAlicloudCenRouteMapsThis.maps, [
        "0",
        "route_map_id",
      ]),
    });
  }
}

```

## Argument Reference

The following arguments are supported:

* `cenId` - (Required) The ID of the CEN instance.
* `ids` - (Optional) A list of CEN route map IDs. Each item formats as `<cen_id>:<route_map_id>`.
* `status` - (Optional) The status of the route map, including `creating`, `active` and `deleting`.
* `descriptionRegex` - (Optional) A regex string to filter CEN route map by description.
* `cenRegionId` - (Optional) The ID of the region to which the CEN instance belongs.
* `transmitDirection` - (Optional) The direction in which the route map is applied, including `regionIn` and `regionOut`.
* `outputFile` - (Optional) File name where to save data source results (after running `terraform plan`).

## Attributes Reference

The following attributes are exported in addition to the arguments listed above:

* `ids` - A list of CEN route map IDs. Each item formats as `<cen_id>:<route_map_id>`. Before 1.161.0, its element is `routeMapId`.
* `maps` - A list of CEN instances. Each element contains the following attributes:
  * `id` - The ID of the route map. It formats as `<cen_id>:<route_map_id>`. Before 1.161.0, it is `routeMapId`.
  * `cenId` - The ID of the CEN instance.
  * `description` - The description of the route map.
  * `status` - The status of the route map.
  * `cenRegionId` - The ID of the region to which the CEN instance belongs.
  * `asPathMatchMode` - A match statement. It indicates the mode in which the as-path attribute is matched.
  * `cidrMatchMode` - A match statement. It indicates the mode in which the prefix attribute is matched.
  * `communityMatchMode` - A match statement. It indicates the mode in which the community attribute is matched.
  * `communityOperateMode` - An action statement. It indicates the mode in which the community attribute is operated.
  * `destinationChildInstanceTypes` - A match statement that indicates the list of IDs of the destination instances.
  * `destinationCidrBlocks` - A match statement that indicates the prefix list.
  * `destinationInstanceIds` - A match statement that indicates the list of IDs of the destination instances.
  * `destinationInstanceIdsReverseMatch` - Indicates whether to enable the reverse match method of the DestinationInstanceIds match condition. 
  * `destinationRouteTableIds` - A match statement that indicates the list of IDs of the destination route tables.
  * `mapResult` - The action that is performed to a route if the route meets all the match conditions.
  * `matchAsns` - A match statement that indicates the As path list.
  * `matchCommunitySet` - A match statement that indicates the community set.
  * `nextPriority` - The priority of the next route map that is associated with the current route map. 
  * `operateCommunitySet` - An action statement that operates the community attribute.
  * `preference` - An action statement that modifies the preference of the route.
  * `prependAsPath` - Indicates AS Path prepending when a regional gateway receives or publishes a route.
  * `priority` - The priority of the route map.
  * `routeMapId` - The ID of the route map.
  * `routeTypes` - A match statement that indicates the list of route types.
  * `sourceChildInstanceTypes` - A match statement that indicates the list of IDs of the source instances.
  * `sourceInstanceIds` - A match statement that indicates the list of IDs of the source instances.
  * `sourceInstanceIdsReverseMatch` - Indicates whether to enable the reverse match method of the SourceInstanceIds match condition.
  * `sourceRegionIds` - A match statement that indicates the list of IDs of the source regions.
  * `sourceRouteTableIds` - A match statement that indicates the list of IDs of the source route tables.
  * `transmitDirection` - The direction in which the route map is applied.

<!-- cache-key: cdktf-0.17.0-pre.15 input-d90eb102e3060dd09abe4dc85e5b0aebaccb92146af2e157e46bb53dbb207811 -->