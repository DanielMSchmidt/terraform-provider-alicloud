---
subcategory: "ECS"
layout: "alicloud"
page_title: "Alicloud: alicloud_instances"
sidebar_current: "docs-alicloud-datasource-instances"
description: |-
    Provides a list of ECS instances to the user.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_instances

The Instances data source list ECS instance resources according to their ID, name regex, image id, status and other fields.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const dataAlicloudInstancesInstancesDs =
      new alicloud.dataAlicloudInstances.DataAlicloudInstances(
        this,
        "instances_ds",
        {
          nameRegex: "web_server",
          status: "Running",
        }
      );
    new cdktf.TerraformOutput(this, "first_instance_id", {
      value: cdktf.propertyAccess(dataAlicloudInstancesInstancesDs.instances, [
        "0",
        "id",
      ]),
    });
    new cdktf.TerraformOutput(this, "instance_ids", {
      value: dataAlicloudInstancesInstancesDs.ids,
    });
  }
}

```

## Argument Reference

The following arguments are supported:

* `ids` - (Optional) A list of ECS instance IDs.
* `nameRegex` - (Optional) A regex string to filter results by instance name.
* `imageId` - (Optional) The image ID of some ECS instance used.
* `status` - (Optional) Instance status. Valid values: "Creating", "Starting", "Running", "Stopping" and "Stopped". If undefined, all statuses are considered.
* `vpcId` - (Optional) ID of the VPC linked to the instances.
* `vswitchId` - (Optional) ID of the VSwitch linked to the instances.
* `availabilityZone` - (Optional) Availability zone where instances are located.
* `resourceGroupId` - (Optional, ForceNew, Available in 1.57.0+) The ID of resource group which the instance belongs.
* `ramRoleName` - (Optional, ForceNew, Available in 1.69.0+) The RAM role name which the instance attaches.
* `instanceName` - (Optional, ForceNew, Available in 1.203.0+) The name of the instance. Fuzzy search with the asterisk (*) wildcard characters is supported.
* `tags` - (Optional) A map of tags assigned to the ECS instances. It must be in the format:
  ```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    new alicloud.dataAlicloudInstances.DataAlicloudInstances(
      this,
      "taggedInstances",
      {
        tags: {
          tagKey1: "tagValue1",
          tagKey2: "tagValue2",
        },
      }
    );
  }
}

```
* `enableDetails` - (Optional, Available in 1.204.0+) Default to `true`. If false, the attributes `ramRoleName` and `diskDeviceMappings` will not be fetched and output.
* `outputFile` - (Optional) File name where to save data source results (after running `terraform plan`).

## Attributes Reference

The following attributes are exported in addition to the arguments listed above:

* `ids` - A list of ECS instance IDs.
* `names` - A list of instances names. 
* `instances` - A list of instances. Each element contains the following attributes:
  * `id` - ID of the instance.
  * `regionId` - Region ID the instance belongs to.
  * `availabilityZone` - Availability zone the instance belongs to.
  * `status` - Instance current status.
  * `name` - Instance name.
  * `description` - Instance description.
  * `instanceType` - Instance type.
  * `vpcId` - ID of the VPC the instance belongs to.
  * `vswitchId` - ID of the VSwitch the instance belongs to.
  * `imageId` - Image ID the instance is using.
  * `privateIp` - Instance private IP address.
  * `publicIp` - Instance public IP address.
  * `eip` - EIP address the VPC instance is using.
  * `securityGroups` - List of security group IDs the instance belongs to.
  * `keyName` - Key pair the instance is using.
  * `creationTime` - Instance creation time.
  * `instanceChargeType` - Instance charge type.
  * `internetChargeType` - Instance network charge type.
  * `internetMaxBandwidthOut` - Max output bandwidth for internet.
  * `spotStrategy` - Spot strategy the instance is using.
  * `diskDeviceMappings` - Description of the attached disks.
    * `device` - Device information of the created disk: such as /dev/xvdb.
    * `size` - Size of the created disk.
    * `category` - Cloud disk category.
    * `type` - Cloud disk type: system disk or data disk.
    * `diskId` - The ID of the Disk.
    * `diskName` - The name of the Disk.
  * `tags` - A map of tags assigned to the ECS instance.
  * `resourceGroupId` - The Id of resource group.
  * `ramRoleName` - The Ram role name.

<!-- cache-key: cdktf-0.17.0-pre.15 input-d7cce5667d536bb23c7172e18d297a5f279fed617feeb8e9ac94f49ee7f54b5f -->