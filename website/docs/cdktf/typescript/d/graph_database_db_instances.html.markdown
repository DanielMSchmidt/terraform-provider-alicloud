---
subcategory: "Graph Database"
layout: "alicloud"
page_title: "Alicloud: alicloud_graph_database_db_instances"
sidebar_current: "docs-alicloud-datasource-graph-database-db-instances"
description: |-
  Provides a list of Graph Database Db Instances to the user.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_graph\_database\_db\_instances

This data source provides the Graph Database Db Instances of the current Alibaba Cloud user.

-> **NOTE:** Available in v1.136.0+.

## Example Usage

Basic Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const dataAlicloudGraphDatabaseDbInstancesDescription =
      new alicloud.dataAlicloudGraphDatabaseDbInstances.DataAlicloudGraphDatabaseDbInstances(
        this,
        "description",
        {
          dbInstanceDescription: "example_value",
          ids: ["example_id"],
        }
      );
    const dataAlicloudGraphDatabaseDbInstancesIds =
      new alicloud.dataAlicloudGraphDatabaseDbInstances.DataAlicloudGraphDatabaseDbInstances(
        this,
        "ids",
        {
          ids: ["example_id"],
        }
      );
    const dataAlicloudGraphDatabaseDbInstancesStatus =
      new alicloud.dataAlicloudGraphDatabaseDbInstances.DataAlicloudGraphDatabaseDbInstances(
        this,
        "status",
        {
          ids: ["example_id"],
          status: "Running",
        }
      );
    new cdktf.TerraformOutput(this, "graph_database_db_instance_id_1", {
      value: cdktf.propertyAccess(
        dataAlicloudGraphDatabaseDbInstancesIds.instances,
        ["0", "id"]
      ),
    });
    new cdktf.TerraformOutput(this, "graph_database_db_instance_id_2", {
      value: cdktf.propertyAccess(
        dataAlicloudGraphDatabaseDbInstancesStatus.instances,
        ["0", "id"]
      ),
    });
    new cdktf.TerraformOutput(this, "graph_database_db_instance_id_3", {
      value: cdktf.propertyAccess(
        dataAlicloudGraphDatabaseDbInstancesDescription.instances,
        ["0", "id"]
      ),
    });
  }
}

```

## Argument Reference

The following arguments are supported:

* `dbInstanceDescription` - (Optional, ForceNew) According to the practical example or notes.
* `enableDetails` - (Optional) Default to `false`. Set it to `true` can output more details about resource attributes.
* `ids` - (Optional, ForceNew, Computed)  A list of Db Instance IDs.
* `outputFile` - (Optional) File name where to save data source results (after running `terraform plan`).
* `status` - (Optional, ForceNew) Instance status. Value range: `creating`, `running`, `deleting`, `dbInstanceClassChanging`, `netAddressCreating` and `netAddressDeleting`.

## Argument Reference

The following attributes are exported in addition to the arguments listed above:

* `instances` - A list of Graph Database Db Instances. Each element contains the following attributes:
    * `connectionString` - Virtual Private Cloud (vpc connection such as a VPN connection or leased line domain name).
    * `createTime` - Creation time, which follows the format of `YYYY-MM-DD 'T'hh:mm:ssZ`, such as `2011-05-30 T12:11:4Z`.
    * `currentMinorVersion` - The current kernel image version.
    * `dbInstanceCategory` - The category of the db instance.
    * `dbInstanceCpu` - For example, instances can be grouped according to Cpu core count.
    * `dbInstanceDescription` - According to the practical example or notes.
    * `dbInstanceId` - The ID of the instance.
    * `dbInstanceMemory` - Instance memory, which is measured in MB.
    * `dbInstanceNetworkType` - The network type of the db instance.
    * `dbInstanceStorageType` - Disk storage type. Valid values: `cloudEssd`, `cloudSsd`.
    * `dbInstanceType` - The type of the db instance.
    * `dbNodeClass` - The class of the db node.
    * `dbNodeCount` - The count of the db node.
    * `dbNodeStorage` - Instance storage space, which is measured in GB.
    * `dbVersion` - Kernel Version. Value range: `10` or `10OpenCypher`. `10`: represented as gremlin, `10OpenCypher`: said opencypher.
    * `expireTime` - The instance after it expires time for subscription instance.
    * `expired` - The expire status of the db instance.
    * `id` - The ID of the Db Instance.
    * `latestMinorVersion` - The latest kernel image version.
    * `lockMode` - Instance lock state. Value range: `unlock`, `manualLock`, `lockByExpiration`, `lockByRestoration` and `lockByDiskQuota`. `unlock`: normal. `manualLock`: the manual trigger lock. `lockByExpiration`: that represents the instance expires automatically lock. `lockByRestoration`: indicates that the instance rollback before auto-lock. `lockByDiskQuota`: that represents the instance space full automatic lock.
    * `lockReason` - An instance is locked the reason.
    * `maintainTime` - Instance maintenance time such as `00:00Z02:00Z`, 0 to 2 points to carry out routine maintenance.
    * `masterDbInstanceId` - The master instance ID of the db instance.
    * `paymentType` - The paymen type of the resource.
    * `port` - Application Port.
    * `publicConnectionString` - The public connection string ID of the resource.
    * `publicPort` - The public port ID of the resource.
    * `readOnlyDbInstanceIds` - The array of the readonly db instances.
    * `status` - Instance status. Value range: `creating`, `running`, `deleting`, `rebooting`, `dbInstanceClassChanging`, `netAddressCreating` and `netAddressDeleting`.
    * `vpcId` - The vpc id of the db instance.
    * `vswitchId` - The vswitch id.
    * `zoneId` - The zone ID of the resource.
    * `dbInstanceIpArray` - IP ADDRESS whitelist for the instance group list.
        * `dbInstanceIpArrayAttribute` - The default is empty. To distinguish between the different property console does not display a `hidden` label grouping.
        * `dbInstanceIpArrayName` - IP ADDRESS whitelist group name.
        * `securityIps` - IP ADDRESS whitelist addresses in the IP ADDRESS list, and a maximum of 1000 comma-separated format is as follows: `0000/0` and `10231224`(IP) or `10231224/24`(CIDR mode, CIDR (Classless Inter-Domain Routing)/24 represents the address prefixes in the length of the range [1,32]).

<!-- cache-key: cdktf-0.17.0-pre.15 input-d08095d1b61e2eb62f057cd16ead3995c38295d06eab8fc8b1f9a2a89bb49b0c -->