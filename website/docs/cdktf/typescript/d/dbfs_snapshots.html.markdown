---
subcategory: "Database File System (DBFS)"
layout: "alicloud"
page_title: "Alicloud: alicloud_dbfs_snapshots"
sidebar_current: "docs-alicloud-datasource-dbfs-snapshots"
description: |-
  Provides a list of Dbfs Snapshots to the user.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_dbfs\_snapshots

This data source provides the Dbfs Snapshots of the current Alibaba Cloud user.

-> **NOTE:** Available in v1.156.0+.

## Example Usage

Basic Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const dataAlicloudDbfsSnapshotsIds =
      new alicloud.dataAlicloudDbfsSnapshots.DataAlicloudDbfsSnapshots(
        this,
        "ids",
        {
          ids: ["example_id"],
        }
      );
    const dataAlicloudDbfsSnapshotsNameRegex =
      new alicloud.dataAlicloudDbfsSnapshots.DataAlicloudDbfsSnapshots(
        this,
        "nameRegex",
        {
          nameRegex: "^my-Snapshot",
        }
      );
    const dataAlicloudDbfsSnapshotsStatus =
      new alicloud.dataAlicloudDbfsSnapshots.DataAlicloudDbfsSnapshots(
        this,
        "status",
        {
          status: "accomplished",
        }
      );
    new cdktf.TerraformOutput(this, "dbfs_snapshot_id_1", {
      value: cdktf.propertyAccess(dataAlicloudDbfsSnapshotsIds.snapshots, [
        "0",
        "id",
      ]),
    });
    new cdktf.TerraformOutput(this, "dbfs_snapshot_id_2", {
      value: cdktf.propertyAccess(
        dataAlicloudDbfsSnapshotsNameRegex.snapshots,
        ["0", "id"]
      ),
    });
    new cdktf.TerraformOutput(this, "dbfs_snapshot_id_3", {
      value: cdktf.propertyAccess(dataAlicloudDbfsSnapshotsStatus.snapshots, [
        "0",
        "id",
      ]),
    });
  }
}

```

## Argument Reference

The following arguments are supported:

* `ids` - (Optional, ForceNew, Computed)  A list of Snapshot IDs.
* `nameRegex` - (Optional, ForceNew) A regex string to filter results by Snapshot name.
* `outputFile` - (Optional) File name where to save data source results (after running `terraform plan`).
* `status` - (Optional, ForceNew) The status of the snapshot. Valid values: `accomplished`, `failed`, `progressing`.

## Argument Reference

The following attributes are exported in addition to the arguments listed above:

* `names` - A list of Snapshot names.
* `snapshots` - A list of Dbfs Snapshots. Each element contains the following attributes:
	* `category` - The type of the Snapshot.
	* `createTime` - The creation time of the snapshot.
	* `description` - The description of the snapshot.
	* `id` - The ID of the Snapshot.
	* `lastModifiedTime` - The last modification time of the snapshot.
	* `progress` - The progress of the snapshot.
	* `remainTime` - The remaining completion time of the snapshot being created, in seconds.
	* `retentionDays` - The retention days of the snapshot.
	* `snapshotId` - The ID of the snapshot.
	* `snapshotName` - The name of the snapshot.
	* `snapshotType` - The creation of the snapshot.
	* `instanceId` - The ID of the database file system.
	* `sourceFsSize` - Source database file system capacity.
	* `status` - The status of the snapshot. Possible values: `progressing`, `accomplished`, `failed`.
<!-- cache-key: cdktf-0.17.0-pre.15 input-f9c9b2f1583e73fa91716b5e777454cc5d78b5c18531b5ffa1f48260b4c913dd -->