---
subcategory: "VPN Gateway"
layout: "alicloud"
page_title: "Alicloud: alicloud_vpn_connections"
sidebar_current: "docs-alicloud-datasource-vpn-connections"
description: |-
    Provides a list of VPN connections which owned by an Alicloud account.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_vpn_connections

The VPN connections data source lists lots of VPN connections resource information owned by an Alicloud account.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    new alicloud.dataAlicloudVpnConnections.DataAlicloudVpnConnections(
      this,
      "foo",
      {
        customerGatewayId: "fake-cgw-id",
        ids: ["fake-conn-id"],
        outputFile: "/tmp/vpnconn",
        vpnGatewayId: "fake-vpn-id",
      }
    );
  }
}

```

## Argument Reference

The following arguments are supported:

* `ids` - (Optional) IDs of the VPN connections.
* `vpnGatewayId` - (Optional) Use the VPN gateway ID as the search key.
* `customerGatewayId` - (Optional)Use the VPN customer gateway ID as the search key.
* `nameRegex` - (Optional) A regex string of VPN connection name.
* `outputFile` - (Optional) Save the result to the file.

## Attributes Reference

The following attributes are exported:

* `ids` - (Optional) IDs of the VPN connections.
* `names` - (Optional) names of the VPN connections.
* `connections` - A list of VPN connections. Each element contains the following attributes:
  * `id` - ID of the VPN connection.
  * `customerGatewayId` - ID of the VPN customer gateway.
  * `vpnGatewayId` - ID of the VPN gateway.
  * `name` - The name of the VPN connection.
  * `localSubnet` - The local subnet of the VPN connection.
  * `remoteSubnet` - The remote subnet of the VPN connection.
  * `status` - The status of the VPN connection, valid value:ike_sa_not_established, ike_sa_established, ipsec_sa_not_established, ipsec_sa_established.
  * `ikeConfig` - The configurations of phase-one negotiation.
  * `ipsecConfig` - The configurations of phase-two negotiation.
  * `healthCheckConfig` - The health check configuration information.
  * `vpnBgpConfig` - The configuration information for BGP.
  * `enableDpd` - Specifies whether to enable the dead peer detection (DPD) feature.
  * `enableNatTraversal` - Specifies whether to enable NAT traversal.

  ### Block ike_config

  The ike_config mapping supports the following:

  * `psk` - Used for authentication between the IPsec VPN gateway and the customer gateway.
  * `ikeVersion` - The version of the IKE protocol. 
  * `ikeMode` - The negotiation mode of IKE phase-one. 
  * `ikeEncAlg` - The encryption algorithm of phase-one negotiation. 
  * `ikeAuthAlg` - The authentication algorithm of phase-one negotiation. 
  * `ikePfs` - The Diffie-Hellman key exchange algorithm used by phase-one negotiation. 
  * `ikeLifetime` - The SA lifecycle as the result of phase-one negotiation. 
  * `ikeLocalId` - The identification of the VPN gateway.
  * `ikeRemoteId` - The identification of the customer gateway.

  ### Block ipsec_config

  The ipsec_config mapping supports the following:

  * `ipsecEncAlg` - The encryption algorithm of phase-two negotiation. 
  * `ipsecAuthAlg` - The authentication algorithm of phase-two negotiation. 
  * `ipsecPfs` - The Diffie-Hellman key exchange algorithm used by phase-two negotiation. 
  * `ipsecLifetime` - The SA lifecycle as the result of phase-two negotiation. 

  ### Block health_check_config

  The health_check_config mapping supports the following:

  * `status` - The health check status. Valid values: `success`, `failed`.
  * `dip` - The destination ip address.
  * `sip` - The source ip address.
  * `interval` - The time interval between health checks.
  * `retry` - The number of retries for health checks issued. 
  * `enable` - The health check on status. Valid values: `true`, `false`.

  ### Block vpn_bgp_config

  The vpn_bgp_config mapping supports the following:

  * `status` - The negotiation status of the BGP routing protocol. Valid values: `success`, `false`.
  * `peerBgpIp` - The BGP address on the other side.
  * `peerAsn` - The counterpart autonomous system number.
  * `localAsn` - The ali cloud side autonomous system.
  * `authKey` - The authentication keys for BGP routing protocols.
  * `tunnelCidr` - The ipsec tunnel segments.
  * `localBgpIp` - The ali cloud side BGP address.
<!-- cache-key: cdktf-0.17.0-pre.15 input-621fc7e7694d5145fcdf6ce300c368b42a5d16930778d5be6f59fa82049ad12e -->