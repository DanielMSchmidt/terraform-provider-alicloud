---
subcategory: "Application Load Balancer (ALB)"
layout: "alicloud"
page_title: "Alicloud: alicloud_alb_health_check_templates"
sidebar_current: "docs-alicloud-datasource-alb-health-check-templates"
description: |-
  Provides a list of Alb Health Check Templates to the user.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_alb\_health\_check\_templates

This data source provides the Alb Health Check Templates of the current Alibaba Cloud user.

-> **NOTE:** Available in v1.134.0+.

## Example Usage

Basic Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const dataAlicloudAlbHealthCheckTemplatesIds =
      new alicloud.dataAlicloudAlbHealthCheckTemplates.DataAlicloudAlbHealthCheckTemplates(
        this,
        "ids",
        {
          ids: ["example_id"],
        }
      );
    const dataAlicloudAlbHealthCheckTemplatesNameRegex =
      new alicloud.dataAlicloudAlbHealthCheckTemplates.DataAlicloudAlbHealthCheckTemplates(
        this,
        "nameRegex",
        {
          nameRegex: "^my-HealthCheckTemplate",
        }
      );
    new cdktf.TerraformOutput(this, "alb_health_check_template_id_1", {
      value: cdktf.propertyAccess(
        dataAlicloudAlbHealthCheckTemplatesIds.templates,
        ["0", "id"]
      ),
    });
    new cdktf.TerraformOutput(this, "alb_health_check_template_id_2", {
      value: cdktf.propertyAccess(
        dataAlicloudAlbHealthCheckTemplatesNameRegex.templates,
        ["0", "id"]
      ),
    });
  }
}

```

## Argument Reference

The following arguments are supported:

* `healthCheckTemplateIds` - (Optional, ForceNew) The health check template ids.
* `healthCheckTemplateName` - (Optional, ForceNew) The name of the health check template.  The name must be 2 to 128 characters in length, and can contain letters, digits, periods (.), underscores (_), and hyphens (-). The name must start with a letter. 
* `ids` - (Optional, ForceNew, Computed)  A list of Health Check Template IDs.
* `nameRegex` - (Optional, ForceNew) A regex string to filter results by Health Check Template name.
* `outputFile` - (Optional) File name where to save data source results (after running `terraform plan`).

## Argument Reference

The following attributes are exported in addition to the arguments listed above:

* `names` - A list of Health Check Template names.
* `templates` - A list of Alb Health Check Templates. Each element contains the following attributes:
	* `healthCheckCodes` - The HTTP status code that indicates a successful health check.
	* `healthCheckConnectPort` - The number of the port that is used for health checks.  Valid values: `0` to `65535`.  Default value:` 0`. This default value indicates that the backend server is used for health checks.
	* `healthCheckHost` - The domain name that is used for health checks. Default value:  `$serverIp`. The domain name must be 1 to 80 characters in length. 
	* `healthCheckHttpVersion` - The version of the HTTP protocol.  Valid values: `http10` and `http11`.  Default value: `http11`.
	* `healthCheckInterval` - The time interval between two consecutive health checks.  Valid values: `1` to `50`. Unit: seconds.  Default value: `2`.
	* `healthCheckMethod` - The health check method.  Valid values: `get` and `head`.  Default value: `head`.
	* `healthCheckPath` - The URL that is used for health checks.  The URL must be 1 to 80 characters in length, and can contain letters, digits, hyphens (-), forward slashes (/), periods (.), percent signs (%), question marks (?), number signs (#), and ampersands (&). The URL can also contain the following extended characters: ` _ ; ~ ! ( )* [ ] @ $ ^ : ' , +. The URL must start with a forward slash (/)`.
	* `healthCheckProtocol` - The protocol that is used for health checks.  Valid values: HTTP and TCP.  Default value: HTTP.
	* `healthCheckTemplateId` - The ID of the resource.
	* `healthCheckTemplateName` - The name of the health check template.  The name must be 2 to 128 characters in length, and can contain letters, digits, periods (.), underscores (_), and hyphens (-). The name must start with a letter.
	* `healthCheckTimeout` - The timeout period of a health check response. If the backend Elastic Compute Service (ECS) instance does not send an expected response within the specified period of time, the health check fails.  Valid values: `1` to `300`. Unit: seconds.  Default value: `5`.
	* `healthyThreshold` - The number of times that an unhealthy backend server must consecutively pass health checks before it is declared healthy (from fail to success). Valid values: `2` to `10`.  Default value: `3`. Unit: seconds.
	* `id` - The ID of the Health Check Template.
	* `unhealthyThreshold` - The number of times that an healthy backend server must consecutively fail health checks before it is declared unhealthy (from success to fail). Valid values: `2` to `10`.  Default value: `3`. Unit: seconds.

<!-- cache-key: cdktf-0.17.0-pre.15 input-c387a372153125a5bb08018beba515e4a8718a716fdd57a1ac8e2a5f3985a920 -->