---
subcategory: "NAT Gateway"
layout: "alicloud"
page_title: "Alicloud: alicloud_forward_entries"
sidebar_current: "docs-alicloud-datasource-forward-entries"
description: |-
    Provides a list of Forward Entries owned by an Alibaba Cloud account.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_forward\_entries

This data source provides a list of Forward Entries owned by an Alibaba Cloud account.

-> **NOTE:** Available in 1.37.0+.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    /*Terraform Variables are not always the best fit for getting inputs in the context of Terraform CDK.
    You can read more about this at https://cdk.tf/variables*/
    const name = new cdktf.TerraformVariable(this, "name", {
      default: "forward-entry-config-example-name",
    });
    const alicloudEipAddressDefault = new alicloud.eipAddress.EipAddress(
      this,
      "default",
      {
        addressName: name.stringValue,
      }
    );
    const alicloudVpcDefault = new alicloud.vpc.Vpc(this, "default_2", {
      cidrBlock: "172.16.0.0/12",
      vpcName: name.stringValue,
    });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudVpcDefault.overrideLogicalId("default");
    const dataAlicloudZonesDefault =
      new alicloud.dataAlicloudZones.DataAlicloudZones(this, "default_3", {
        availableResourceCreation: "VSwitch",
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAlicloudZonesDefault.overrideLogicalId("default");
    const alicloudVswitchDefault = new alicloud.vswitch.Vswitch(
      this,
      "default_4",
      {
        cidrBlock: "172.16.0.0/21",
        vpcId: cdktf.Token.asString(alicloudVpcDefault.id),
        vswitchName: name.stringValue,
        zoneId: cdktf.Token.asString(
          cdktf.propertyAccess(dataAlicloudZonesDefault.zones, ["0", "id"])
        ),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudVswitchDefault.overrideLogicalId("default");
    const alicloudNatGatewayDefault = new alicloud.natGateway.NatGateway(
      this,
      "default_5",
      {
        internetChargeType: "PayByLcu",
        natGatewayName: name.stringValue,
        natType: "Enhanced",
        vpcId: cdktf.Token.asString(alicloudVpcDefault.id),
        vswitchId: cdktf.Token.asString(alicloudVswitchDefault.id),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudNatGatewayDefault.overrideLogicalId("default");
    const alicloudEipAssociationDefault =
      new alicloud.eipAssociation.EipAssociation(this, "default_6", {
        allocationId: cdktf.Token.asString(alicloudEipAddressDefault.id),
        instanceId: cdktf.Token.asString(alicloudNatGatewayDefault.id),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudEipAssociationDefault.overrideLogicalId("default");
    const alicloudForwardEntryDefault = new alicloud.forwardEntry.ForwardEntry(
      this,
      "default_7",
      {
        externalIp: cdktf.Token.asString(alicloudEipAddressDefault.ipAddress),
        externalPort: "80",
        forwardTableId: cdktf.Token.asString(
          alicloudNatGatewayDefault.forwardTableIds
        ),
        internalIp: "172.16.0.3",
        internalPort: "8080",
        ipProtocol: "tcp",
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudForwardEntryDefault.overrideLogicalId("default");
    const dataAlicloudForwardEntriesDefault =
      new alicloud.dataAlicloudForwardEntries.DataAlicloudForwardEntries(
        this,
        "default_8",
        {
          forwardTableId: cdktf.Token.asString(
            alicloudForwardEntryDefault.forwardTableId
          ),
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAlicloudForwardEntriesDefault.overrideLogicalId("default");
  }
}

```

## Argument Reference

The following arguments are supported:

* `ids` - (Optional) A list of Forward Entries IDs.
* `nameRegex` - (Optional, Available in 1.44.0+) A regex string to filter results by forward entry name.
* `externalIp` - (Optional) The public IP address.
* `internalIp` - (Optional) The private IP address.
* `forwardTableId` - (Required) The ID of the Forward table.
* `outputFile` - (Optional) File name where to save data source results (after running `terraform plan`).
* `forwardEntryName` - (Optional, ForceNew, Available in 1.119.1+) The name of forward entry.
* `internalPort` - (Optional, ForceNew, Available in 1.119.1+) The internal port.
* `ipProtocol` - (Optional, ForceNew, Available in 1.119.1+) The ip protocol. Valid values: `any`,`tcp` and `udp`. 
* `status` - (Optional, ForceNew, Available in 1.119.1+) The status of farward entry. Valid value `available`, `deleting` and `pending`.

## Attributes Reference

The following attributes are exported in addition to the arguments listed above:

* `ids` - A list of Forward Entries IDs.
* `names` - A list of Forward Entries names.
* `entries` - A list of Forward Entries. Each element contains the following attributes:
  * `id` - The ID of the Forward Entry.
  * `externalIp` - The public IP address.
  * `externalPort` - The public port.
  * `ipProtocol` - The protocol type.
  * `internalIp` - The private IP address.
  * `internalPort` - The private port.
  * `name` - The forward entry name.
  * `status` - The status of the Forward Entry.
  * `forwardEntryId` - The forward entry ID.
  * `forwardEntryName` - The name of forward entry.
  * `status` - The status of forward entry.


<!-- cache-key: cdktf-0.17.0-pre.15 input-64783ad6b29f7aca06c0a8e105c678ad78f9bb47c6f4a26ab149c5c6a165d50f -->