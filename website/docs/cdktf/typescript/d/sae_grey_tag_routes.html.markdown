---
subcategory: "Serverless App Engine (SAE)"
layout: "alicloud"
page_title: "Alicloud: alicloud_sae_grey_tag_routes"
sidebar_current: "docs-alicloud-datasource-sae-grey-tag-routes"
description: |-
  Provides a list of Sae GreyTagRoutes to the user.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_sae\_grey\_tag\_routes

This data source provides the Sae GreyTagRoutes of the current Alibaba Cloud user.

-> **NOTE:** Available in v1.160.0+.

## Example Usage

Basic Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const dataAlicloudSaeGreyTagRoutesNameRegex =
      new alicloud.dataAlicloudSaeGreyTagRoutes.DataAlicloudSaeGreyTagRoutes(
        this,
        "nameRegex",
        {
          appId: "example_id",
          nameRegex: "^my-GreyTagRoute",
        }
      );
    new cdktf.TerraformOutput(this, "sae_grey_tag_routes_id", {
      value: cdktf.propertyAccess(
        dataAlicloudSaeGreyTagRoutesNameRegex.routes,
        ["0", "id"]
      ),
    });
  }
}

```

## Argument Reference

The following arguments are supported:

* `appId` - (Required, ForceNew) The ID  of the SAE Application.
* `ids` - (Optional, ForceNew, Computed)  A list of GreyTagRoute IDs.
* `nameRegex` - (Optional, ForceNew) A regex string to filter results by GreyTagRoute name.
* `outputFile` - (Optional) File name where to save data source results (after running `terraform plan`).

## Argument Reference

The following attributes are exported in addition to the arguments listed above:

* `names` - A list of GreyTagRoute names.
* `routes` - A list of Sae GreyTagRoutes. Each element contains the following attributes:
    * `id` - The ID of the GreyTagRoute.
    * `dubboRules` - The grayscale rule created for Dubbo Application.
      * `methodName` - The method name
      * `serviceName` - The service name.
      * `version` - The service version.
      * `condition` - The conditional Patterns for Grayscale Rules.
      * `group` - The service group.
      * `items` - A list of conditions items.
          * `index` - The parameter number.
          * `expr` - The parameter value gets the expression.
          * `cond` - The comparison operator.
          * `value` - The value of the parameter.
          * `operator` - The operator.
    * `description` - The description of GreyTagRoute.
    * `greyTagRouteName` - The name of GreyTagRoute.
    * `scRules` - The grayscale rule created for SpringCloud Application.
         * `path` - The path corresponding to the grayscale rule.
         * `condition` - The Conditional Patterns for Grayscale Rules.
         * `items` - A list of conditions items.
           * `name` - The name of the parameter.
           * `type` - The Compare types.
           * `cond` - The comparison operator.
           * `value` - The value of the parameter.
           * `operator` - The operator.
<!-- cache-key: cdktf-0.17.0-pre.15 input-af5ba832763529f9ac6fa1562888bd07b443593dbfbbd76a782c6e7f76c9ee8d -->