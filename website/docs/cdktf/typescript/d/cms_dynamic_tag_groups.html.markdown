---
subcategory: "Cloud Monitor Service"
layout: "alicloud"
page_title: "Alicloud: alicloud_cms_dynamic_tag_groups"
sidebar_current: "docs-alicloud-datasource-cms-dynamic-tag-groups"
description: |-
  Provides a list of Cms Dynamic Tag Groups to the user.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_cms\_dynamic\_tag\_groups

This data source provides the Cms Dynamic Tag Groups of the current Alibaba Cloud user.

-> **NOTE:** Available in v1.142.0+.

## Example Usage

Basic Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    /*Terraform Variables are not always the best fit for getting inputs in the context of Terraform CDK.
    You can read more about this at https://cdk.tf/variables*/
    const name = new cdktf.TerraformVariable(this, "name", {
      default: "example_value",
    });
    const alicloudCmsAlarmContactGroupDefault =
      new alicloud.cmsAlarmContactGroup.CmsAlarmContactGroup(this, "default", {
        alarmContactGroupName: name.stringValue,
        describe: "example_value",
        enableSubscribed: true,
      });
    const alicloudCmsDynamicTagGroupDefault =
      new alicloud.cmsDynamicTagGroup.CmsDynamicTagGroup(this, "default_2", {
        contactGroupList: [
          cdktf.Token.asString(alicloudCmsAlarmContactGroupDefault.id),
        ],
        matchExpress: [
          {
            tagValue: "your_tag_value",
            tagValueMatchFunction: "all",
          },
        ],
        tagKey: "your_tag_key",
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudCmsDynamicTagGroupDefault.overrideLogicalId("default");
    const dataAlicloudCmsDynamicTagGroupsIds =
      new alicloud.dataAlicloudCmsDynamicTagGroups.DataAlicloudCmsDynamicTagGroups(
        this,
        "ids",
        {
          ids: [cdktf.Token.asString(alicloudCmsDynamicTagGroupDefault.id)],
        }
      );
    new cdktf.TerraformOutput(this, "cms_dynamic_tag_group_id_1", {
      value: cdktf.propertyAccess(dataAlicloudCmsDynamicTagGroupsIds.groups, [
        "0",
        "id",
      ]),
    });
  }
}

```

## Argument Reference

The following arguments are supported:

* `ids` - (Optional, ForceNew, Computed)  A list of Dynamic Tag Group IDs.
* `outputFile` - (Optional) File name where to save data source results (after running `terraform plan`).
* `status` - (Optional, ForceNew) The status of the resource. Valid values: `running`, `finish`.
* `tagKey` - (Optional, ForceNew) The tag key of the tag.

## Argument Reference

The following attributes are exported in addition to the arguments listed above:

* `groups` - A list of Cms Dynamic Tag Groups. Each element contains the following attributes:
	* `dynamicTagRuleId` - The ID of the tag rule.
	* `id` - The ID of the Dynamic Tag Group.
	* `matchExpressFilterRelation` - The relationship between conditional expressions. Valid values: `and`, `or`.
	* `matchExpress` - The label generates a matching expression that applies the grouping. See the following `Block match_express`.
		* `tagValue` - The tag value. The Tag value must be used in conjunction with the tag value matching method TagValueMatchFunction.
		* `tagValueMatchFunction` - Matching method of tag value. Valid values: `all`, `startWith`,`endWith`,`contains`,`notContains`,`equals`.
	* `status` -  The status of the resource. Valid values: `running`, `finish`.
	* `tagKey` - The tag key of the tag.
	

<!-- cache-key: cdktf-0.17.0-pre.15 input-94d17910cb74274de1e5b2371032984836f2f06ae33fed1c877b0fc4551d02fd -->