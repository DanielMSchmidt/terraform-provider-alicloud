---
subcategory: "DMS Enterprise"
layout: "alicloud"
page_title: "Alicloud: alicloud_dms_enterprise_databases"
sidebar_current: "docs-alicloud-datasource-dms-enterprise-databases"
description: |-
  Provides a list of DMS Enterprise Database owned by an Alibaba Cloud account.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud_dms_enterprise_databases

This data source provides DMS Enterprise Database available to the user.[What is Database](https://www.alibabacloud.com/help/zh/data-management-service/latest/api-doc-dms-enterprise-2018-11-01-api-doc-listdatabases)

-> **NOTE:** Available in 1.195.0+

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const dataAlicloudDmsEnterpriseDatabasesDefault =
      new alicloud.dataAlicloudDmsEnterpriseDatabases.DataAlicloudDmsEnterpriseDatabases(
        this,
        "default",
        {
          instanceId: "2195118",
          nameRegex: "test2",
        }
      );
    new cdktf.TerraformOutput(
      this,
      "alicloud_dms_enterprise_database_example_id",
      {
        value: cdktf.propertyAccess(
          dataAlicloudDmsEnterpriseDatabasesDefault.databases,
          ["0", "id"]
        ),
      }
    );
  }
}

```

## Argument Reference

The following arguments are supported:
* `instanceId` - (Required,ForceNew) The instance ID of the target database.
* `ids` - (Optional, ForceNew, Computed) A list of Database IDs.
* `outputFile` - (Optional) File name where to save data source results (after running `terraform plan`).
* `nameRegex` - (Optional) A regex string to filter the results by the database Schema Name.


## Attributes Reference

The following attributes are exported in addition to the arguments listed above:
* `ids` - A list of Database IDs.
* `databases` - A list of Database Entries. Each element contains the following attributes:
  * `id` - The Database ID, same value as `databaseId`.
  * `catalogName` - The name of the Database Directory.> PG Series databases will display the database name.
  * `databaseId` - The ID of the physical library.
  * `dbType` - Database type.
  * `dbaId` - The DBA user ID of the target database.
  * `dbaName` - The DBA nickname of the target Library.
  * `encoding` - Database encoding.
  * `envType` - The environment type of the database.
  * `host` - The database connection address.
  * `instanceId` - The instance ID of the target database.
  * `ownerIdList` - Library Owner User ID list.
  * `ownerNameList` - Library Owner nickname list.
  * `pageTotal` - Total pages.
  * `port` - The connection port of the database.
  * `schemaName` - The name of the database.> PG Series databases will display schema names.
  * `searchName` - Library search name.
  * `sid` - Database SID.> only Oracle Database Display.
  * `state` - Library status, value description:-**NORMAL**: NORMAL-**DISABLE**: Disabled-**OFFLINE**: OFFLINE-**NOT_EXIST**: does not exist

<!-- cache-key: cdktf-0.17.0-pre.15 input-8bb353255c0b95cedc63acf94626344b7fc897bca1be0c96ab5658d776d989cf -->