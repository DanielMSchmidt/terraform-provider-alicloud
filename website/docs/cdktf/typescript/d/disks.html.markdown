---
subcategory: "ECS"
layout: "alicloud"
page_title: "Alicloud: alicloud_disks"
sidebar_current: "docs-alicloud-datasource-disks"
description: |-
    Provides a list of disks to the user.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_disks

-> **DEPRECATED:** This datasource has been renamed to [alicloud_ecs_disks](https://www.terraform.io/docs/providers/alicloud/d/ecs_disks) from version 1.122.0.

This data source provides the disks of the current Alibaba Cloud user.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const dataAlicloudDisksDisksDs =
      new alicloud.dataAlicloudDisks.DataAlicloudDisks(this, "disks_ds", {
        nameRegex: "sample_disk",
      });
    new cdktf.TerraformOutput(this, "first_disk_id", {
      value: cdktf.propertyAccess(dataAlicloudDisksDisksDs.disks, ["0", "id"]),
    });
  }
}

```

## Argument Reference

The following arguments are supported:

* `ids` - (Optional) A list of disks IDs.
* `nameRegex` - (Optional) A regex string to filter results by disk name.
* `type` - (Optional) Disk type. Possible values: `system` and `data`.
* `category` - (Optional) Disk category. Possible values: `cloud` (basic cloud disk), `cloudEfficiency` (ultra cloud disk), `ephemeralSsd` (local SSD cloud disk), `cloudSsd` (SSD cloud disk), and `cloudEssd` (ESSD cloud disk).
* `encrypted` - (Optional) Indicate whether the disk is encrypted or not. Possible values: `on` and `off`.
* `instanceId` - (Optional) Filter the results by the specified ECS instance ID.
* `resourceGroupId` - (Optional, ForceNew, Available in 1.57.0+) The Id of resource group which the disk belongs.
* `tags` - (Optional) A map of tags assigned to the disks. It must be in the format:
  ```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    new alicloud.dataAlicloudDisks.DataAlicloudDisks(this, "disks_ds", {
      tags: {
        tagKey1: "tagValue1",
        tagKey2: "tagValue2",
      },
    });
  }
}

```
* `outputFile` - (Optional) File name where to save data source results (after running `terraform plan`).

## Attributes Reference

The following attributes are exported in addition to the arguments listed above:

* `disks` - A list of disks. Each element contains the following attributes:
  * `id` - ID of the disk.
  * `name` - Disk name.
  * `description` - Disk description.
  * `regionId` - Region ID the disk belongs to.
  * `availabilityZone` - Availability zone of the disk.
  * `status` - Current status. Possible values: `inUse`, `available`, `attaching`, `detaching`, `creating` and `reIniting`.
  * `type` - Disk type. Possible values: `system` and `data`.
  * `category` - Disk category. Possible values: `cloud` (basic cloud disk), `cloudEfficiency` (ultra cloud disk), `ephemeralSsd` (local SSD cloud disk), `cloudSsd` (SSD cloud disk), and `cloudEssd` (ESSD cloud disk).
  * `encrypted` - Indicate whether the disk is encrypted or not. Possible values: `on` and `off`.
  * `size` - Disk size in GiB.
  * `imageId` - ID of the image from which the disk is created. It is null unless the disk is created using an image.
  * `snapshotId` - Snapshot used to create the disk. It is null if no snapshot is used to create the disk.
  * `instanceId` - ID of the related instance. It is `null` unless the `status` is `inUse`.
  * `creationTime` - Disk creation time.
  * `attachedTime` - Disk attachment time.
  * `detachedTime` - Disk detachment time.
  * `expirationTime` - Disk expiration time.
  * `tags` - A map of tags assigned to the disk.
  * `resourceGroupId` - The Id of resource group.

<!-- cache-key: cdktf-0.17.0-pre.15 input-bbc1d8df594d230a2728a4a0a8e17efae77d19825cba83b1b6dad59f286652b3 -->