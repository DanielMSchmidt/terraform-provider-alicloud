---
subcategory: "Express Connect"
layout: "alicloud"
page_title: "Alicloud: alicloud_vpc_bgp_peers"
sidebar_current: "docs-alicloud-datasource-vpc-bgp-peers"
description: |-
  Provides a list of Vpc Bgp Peers to the user.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_vpc\_bgp\_peers

This data source provides the Vpc Bgp Peers of the current Alibaba Cloud user.

-> **NOTE:** Available in v1.153.0+.

## Example Usage

Basic Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const dataAlicloudVpcBgpPeersBgpGroupId =
      new alicloud.dataAlicloudVpcBgpPeers.DataAlicloudVpcBgpPeers(
        this,
        "bgpGroupId",
        {
          bgpGroupId: "example_value",
        }
      );
    const dataAlicloudVpcBgpPeersIds =
      new alicloud.dataAlicloudVpcBgpPeers.DataAlicloudVpcBgpPeers(
        this,
        "ids",
        {
          ids: ["example_value-1", "example_value-2"],
        }
      );
    const dataAlicloudVpcBgpPeersRouterId =
      new alicloud.dataAlicloudVpcBgpPeers.DataAlicloudVpcBgpPeers(
        this,
        "routerId",
        {
          routerId: "example_value",
        }
      );
    const dataAlicloudVpcBgpPeersStatus =
      new alicloud.dataAlicloudVpcBgpPeers.DataAlicloudVpcBgpPeers(
        this,
        "status",
        {
          status: "Available",
        }
      );
    new cdktf.TerraformOutput(this, "vpc_bgp_peer_id_1", {
      value: cdktf.propertyAccess(dataAlicloudVpcBgpPeersIds.peers, [
        "0",
        "id",
      ]),
    });
    new cdktf.TerraformOutput(this, "vpc_bgp_peer_id_2", {
      value: cdktf.propertyAccess(dataAlicloudVpcBgpPeersBgpGroupId.peers, [
        "0",
        "id",
      ]),
    });
    new cdktf.TerraformOutput(this, "vpc_bgp_peer_id_3", {
      value: cdktf.propertyAccess(dataAlicloudVpcBgpPeersRouterId.peers, [
        "0",
        "id",
      ]),
    });
    new cdktf.TerraformOutput(this, "vpc_bgp_peer_id_4", {
      value: cdktf.propertyAccess(dataAlicloudVpcBgpPeersStatus.peers, [
        "0",
        "id",
      ]),
    });
  }
}

```

## Argument Reference

The following arguments are supported:

* `bgpGroupId` - (Optional, ForceNew) The ID of the BGP group to which the BGP peer that you want to query belongs.
* `ids` - (Optional, ForceNew, Computed)  A list of Bgp Peer IDs.
* `outputFile` - (Optional) File name where to save data source results (after running `terraform plan`).
* `routerId` - (Optional, ForceNew) The ID of the virtual border router (VBR) that is associated with the BGP peer that you want to query.
* `status` - (Optional, ForceNew) The status of the BGP peer. Valid values: `available`, `deleted`, `deleting`, `modifying`, `pending`.

## Argument Reference

The following attributes are exported in addition to the arguments listed above:

* `peers` - A list of Vpc Bgp Peers. Each element contains the following attributes:
	* `authKey` - The authentication key of the BGP group.
	* `bfdMultiHop` - The BFD hop count.
	* `bgpGroupId` - The ID of the BGP group.
	* `bgpPeerId` - The ID of the BGP neighbor.
	* `bgpPeerName` - The name of the BGP neighbor.
	* `bgpStatus` - The status of the BGP connection.
	* `description` - The description of the BGP group.
	* `enableBfd` - Indicates whether the Bidirectional Forwarding Detection (BFD) protocol is enabled.
	* `hold` - The hold time.
	* `id` - The ID of the Bgp Peer.
	* `ipVersion` - The IP version.
	* `isFake` - Indicates whether a fake AS number is used.
	* `keepalive` - The keepalive time.
	* `localAsn` - The AS number of the device on the Alibaba Cloud side.
	* `peerAsn` - The autonomous system (AS) number of the BGP peer.
	* `peerIpAddress` - The IP address of the BGP neighbor.
	* `routeLimit` - The limit on routes.
	* `routerId` - The ID of the router.
	* `status` - The status of the BGP peer.
<!-- cache-key: cdktf-0.17.0-pre.15 input-609588607efa205ee83db6d50dcfa2c77dedf5accc50a5c53fd3acb6028dc4e8 -->