---
subcategory: "RDS"
layout: "alicloud"
page_title: "Alicloud: alicloud_rds_backups"
sidebar_current: "docs-alicloud-datasource-rds-backups"
description: |-
  Provides a list of Rds Backups to the user.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_rds\_backups

This data source provides the Rds Backups of the current Alibaba Cloud user.

-> **NOTE:** Available in v1.149.0+.

## Example Usage

Basic Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const dataAlicloudRdsBackupsExample =
      new alicloud.dataAlicloudRdsBackups.DataAlicloudRdsBackups(
        this,
        "example",
        {
          dbInstanceId: "example_value",
        }
      );
    new cdktf.TerraformOutput(this, "first_rds_backup_id", {
      value: cdktf.propertyAccess(dataAlicloudRdsBackupsExample.backups, [
        "0",
        "id",
      ]),
    });
  }
}

```

## Argument Reference

The following arguments are supported:

* `backupMode` - (Optional, ForceNew) BackupMode. Valid values: `automated` and `manual`.
* `dbInstanceId` - (Required, ForceNew) The db instance id.
* `endTime` - (Optional, ForceNew) The end time.
* `ids` - (Optional, ForceNew, Computed)  A list of Backup IDs.
* `outputFile` - (Optional) File name where to save data source results (after running `terraform plan`).
* `startTime` - (Optional, ForceNew) The start time.
* `backupStatus` - (Optional, ForceNew) Backup task status. Valid values: `automated` and `manual`.

## Argument Reference

The following attributes are exported in addition to the arguments listed above:

* `backups` - A list of Rds Backups. Each element contains the following attributes:
  * `backupDownloadUrl` - The backup download url.
  * `backupEndTime` - BackupEndTime.
  * `backupId` - BackupId.
  * `backupInitiator` - The initiator of the backup task. Value:
    * **System**: automatically initiated by the System
    * **User**: manually initiated by the User.
  * `backupIntranetDownloadUrl` - The backup intranet download url.
  * `backupMethod` - BackupMethod.
  * `backupMode` - BackupMode.
  * `backupSize` - BackupSize.
  * `backupStartTime` - BackupStartTime.
  * `backupType` - BackupType.
  * `consistentTime` - The consistency point of the backup set. The return value is a timestamp. **NOTE:** only MySQL 5.6 returns this parameter, and other versions return 0.
  * `copyOnlyBackup` - The backup mode is divided into the normal backup mode (full and incremental recovery is supported) and the replication-only mode (full recovery is supported only). **NOTE:** Only SQL Server returns this parameter. Valid values:
    * **0**: General Backup Mode
    * **1**: Copy only mode
  * `dbInstanceId` - The db instance id.
  * `encryption` - The encrypted information of the backup set.
  * `hostInstanceId` - HostInstanceID.
  * `id` - The ID of the Backup.
  * `isAvail` - Whether the backup set is available, the value is:
    * **0**: Not available
    * **1**: Available.
  * `metaStatus` - The backup set status of the database table. **NOTE:** an empty string indicates that the backup set for database table recovery is not enabled. Valid values:
    * **OK**: normal.
    * **LARGE**: There are too many tables that cannot be used for database and table recovery.
    * **EMPTY**: The backup set that failed to be backed up.
  * `backupStatus` - Backup task status. **NOTE:** This parameter will only be returned when a task is executed. Value:
    * **NoStart**: Not started
    * **Checking**: check the backup
    * **Preparing**: Prepare a backup
    * **Waiting**: Waiting for backup
    * **Uploading**: Upload backup
    * **Finished**: Complete backup
    * **Failed**: backup Failed
  * `storageClass` - The storage medium for the backup set. Valid values:
    * **0**: Regular storage
    * **1**: Archive storage.
  * `storeStatus` - StoreStatus.
<!-- cache-key: cdktf-0.17.0-pre.15 input-f6f369f5ec41ac64af0bc58728cd0fc58b27f89c50ec0c6d2d1f020c86235caa -->