---
subcategory: "ECS"
layout: "alicloud"
page_title: "Alicloud: alicloud_ecs_snapshot_groups"
sidebar_current: "docs-alicloud-datasource-ecs-snapshot-groups"
description: |-
  Provides a list of Ecs Snapshot Groups to the user.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_ecs\_snapshot\_groups

This data source provides the Ecs Snapshot Groups of the current Alibaba Cloud user.

-> **NOTE:** Available in v1.160.0+.

## Example Usage

Basic Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const dataAlicloudEcsSnapshotGroupsIds =
      new alicloud.dataAlicloudEcsSnapshotGroups.DataAlicloudEcsSnapshotGroups(
        this,
        "ids",
        {
          ids: ["example-id"],
        }
      );
    const dataAlicloudEcsSnapshotGroupsInstanceId =
      new alicloud.dataAlicloudEcsSnapshotGroups.DataAlicloudEcsSnapshotGroups(
        this,
        "instanceId",
        {
          instanceId: "example-instance_id",
        }
      );
    const dataAlicloudEcsSnapshotGroupsNameRegex =
      new alicloud.dataAlicloudEcsSnapshotGroups.DataAlicloudEcsSnapshotGroups(
        this,
        "nameRegex",
        {
          nameRegex: "^my-SnapshotGroup",
        }
      );
    const dataAlicloudEcsSnapshotGroupsStatus =
      new alicloud.dataAlicloudEcsSnapshotGroups.DataAlicloudEcsSnapshotGroups(
        this,
        "status",
        {
          status: "accomplished",
        }
      );
    new cdktf.TerraformOutput(this, "ecs_snapshot_group_id_1", {
      value: cdktf.propertyAccess(dataAlicloudEcsSnapshotGroupsIds.groups, [
        "0",
        "id",
      ]),
    });
    new cdktf.TerraformOutput(this, "ecs_snapshot_group_id_2", {
      value: cdktf.propertyAccess(
        dataAlicloudEcsSnapshotGroupsNameRegex.groups,
        ["0", "id"]
      ),
    });
    new cdktf.TerraformOutput(this, "ecs_snapshot_group_id_3", {
      value: cdktf.propertyAccess(dataAlicloudEcsSnapshotGroupsStatus.groups, [
        "0",
        "id",
      ]),
    });
    new cdktf.TerraformOutput(this, "ecs_snapshot_group_id_4", {
      value: cdktf.propertyAccess(
        dataAlicloudEcsSnapshotGroupsInstanceId.groups,
        ["0", "id"]
      ),
    });
  }
}

```

## Argument Reference

The following arguments are supported:

* `ids` - (Optional, ForceNew, Computed)  A list of Snapshot Group IDs.
* `instanceId` - (Optional, ForceNew) The ID of the instance.
* `nameRegex` - (Optional, ForceNew) A regex string to filter results by Snapshot Group name.
* `outputFile` - (Optional) File name where to save data source results (after running `terraform plan`).
* `snapshotGroupName` - (Optional, ForceNew) The name of the snapshot-consistent group.
* `status` - (Optional, ForceNew) The state of snapshot-consistent group. Valid Values: `accomplished`, `failed` and `progressing`.
* `tags` - (Optional, ForceNew) A mapping of tags to assign to the snapshot group.

## Argument Reference

The following attributes are exported in addition to the arguments listed above:

* `names` - A list of Snapshot Group names.
* `groups` - A list of Ecs Snapshot Groups. Each element contains the following attributes:
  * `description` - The description of the snapshot-consistent group.
  * `id` - The ID of the Snapshot Group.
  * `instanceId` - The ID of the instance.
  * `resourceGroupId` - The ID of the resource group to which the snapshot consistency group belongs.
  * `snapshotGroupId` - The first ID of the resource.
  * `snapshotGroupName` - The name of the snapshot-consistent group.
  * `status` - The status of the resource.
  * `tags` - List of label key-value pairs.
    * `tagKey` - The key of the tag.
    * `tagValue` - The value of the tag.
<!-- cache-key: cdktf-0.17.0-pre.15 input-dfd08e99b0f2690d16f5c11561a389d265cd596da4b89eb3353ab6839e2d481e -->