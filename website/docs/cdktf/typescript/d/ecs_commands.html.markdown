---
subcategory: "ECS"
layout: "alicloud"
page_title: "Alicloud: alicloud_ecs_commands"
sidebar_current: "docs-alicloud-datasource-ecs-commands"
description: |-
  Provides a list of Ecs Commands to the user.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_ecs\_commands

This data source provides the Ecs Commands of the current Alibaba Cloud user.

-> **NOTE:** Available in v1.116.0+.

## Example Usage

Basic Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const dataAlicloudEcsCommandsExample =
      new alicloud.dataAlicloudEcsCommands.DataAlicloudEcsCommands(
        this,
        "example",
        {
          ids: ["E2RY53-xxxx"],
          nameRegex: "tf-testAcc",
        }
      );
    new cdktf.TerraformOutput(this, "first_ecs_command_id", {
      value: cdktf.propertyAccess(dataAlicloudEcsCommandsExample.commands, [
        "0",
        "id",
      ]),
    });
  }
}

```

## Argument Reference

The following arguments are supported:

* `contentEncoding` - (Optional, ForceNew) The Base64-encoded content of the command.
* `description` - (Optional, ForceNew) The description of command.
* `ids` - (Optional, ForceNew, Computed)  A list of Command IDs.
* `name` - (Optional, ForceNew) The name of the command.
* `nameRegex` - (Optional, ForceNew) A regex string to filter results by Command name.
* `outputFile` - (Optional) File name where to save data source results (after running `terraform plan`).
* `commandProvider` - (Optional, ForceNew) Public order provider.
* `type` - (Optional, ForceNew) The command type. Valid Values: `runBatScript`, `runPowerShellScript` and `runShellScript`.

## Argument Reference

The following attributes are exported in addition to the arguments listed above:

* `names` - A list of Command names.
* `commands` - A list of Ecs Commands. Each element contains the following attributes:
	* `commandContent` - The Base64-encoded content of the command.
	* `commandId` - The ID of the Command.
	* `description` - The description of command.
	* `enableParameter` - Specifies whether to use custom parameters in the command to be created.
	* `id` - The ID of the Command.
	* `name` - The name of the command
	* `parameterNames` - A list of custom parameter names which are parsed from the command content specified when the command was being created.
	* `timeout` - The timeout period that is specified for the command to be run on ECS instances.
	* `type` - The command type.
	* `workingDir` - The execution path of the command in the ECS instance.

<!-- cache-key: cdktf-0.17.0-pre.15 input-c6f72647a497d94693c2619938753250ec5c541868167192e928cc4b07fa8410 -->