---
subcategory: "Hybrid Backup Recovery (HBR)"
layout: "alicloud"
page_title: "Alicloud: alicloud_hbr_nas_backup_plans"
sidebar_current: "docs-alicloud-datasource-hbr-nas_backup_plans"
description: |-
  Provides a list of Hybrid Backup Recovery (HBR) NasBackupPlans to the user.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_hbr\_nas\_backup\_plans

This data source provides the Hbr NasBackupPlans of the current Alibaba Cloud user.

-> **NOTE:** Available in v1.132.0+.

## Example Usage

Basic Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const dataAlicloudHbrNasBackupPlansIds =
      new alicloud.dataAlicloudHbrNasBackupPlans.DataAlicloudHbrNasBackupPlans(
        this,
        "ids",
        {
          nameRegex: "^my-NasBackupPlan",
        }
      );
    new cdktf.TerraformOutput(this, "hbr_nas_backup_plan_id", {
      value: cdktf.propertyAccess(dataAlicloudHbrNasBackupPlansIds.plans, [
        "0",
        "id",
      ]),
    });
  }
}

```

## Argument Reference

The following arguments are supported:

* `ids` - (Optional, ForceNew, Computed)  A list of NasBackupPlan IDs.
* `nameRegex` - (Optional, ForceNew) A regex string to filter results by NasBackupPlan name.
* `fileSystemId` - (Optional, ForceNew) The Nas fileSystem instance ID of the EcsBackupPlan used.
* `vaultId` - (Optional, ForceNew) The backup vault ID of the NasBackupPlan used.
* `outputFile` - (Optional) File name where to save data source results (after running `terraform plan`).

## Argument Reference

The following attributes are exported in addition to the arguments listed above:

* `names` - A list of NasBackupPlan names.
* `plans` - A list of Hbr NasBackupPlans. Each element contains the following attributes:
    * `id` - The ID of Nas backup plan.
    * `vaultId` - The ID of backup vault.
    * `nasBackupPlanId` - The ID of Nas backup plan.
    * `nasBackupPlanName` - The name of the resource.
    * `retention` - Backup retention days, the minimum is 1.
    * `schedule` - Backup strategy. Optional format: `i|{startTime}|{interval}`. It means to execute a backup task every `{interval}` starting from `{startTime}`. The backup task for the elapsed time will not be compensated. If the last backup task has not completed yet, the next backup task will not be triggered.
        * `startTime` Backup start time, UNIX time seconds.
        * `interval` ISO8601 time interval. E.g: `pt1H` means one hour apart. `p1D` means one day apart.
    * `fileSystemId` - The File System ID of Nas.
    * `createTime` - File System Creation Time. **Note** The time format of the API adopts the ISO 8601 format, such as `20210709T15:45:30Cst`.
    * `path` - List of backup path. Up to 65536 Characters. e.g.`["/home", "/var"]`
    * `backupType` - Backup type. Valid values: `complete`.
    * `disabled` - Whether to be suspended. Valid values: `true`, `false`.
    * `options` - Options field of Nas backup plan.
    * `createdTime` - The creation time of the backup plan. UNIX time in seconds.
    * `updatedTime` - The update time of the backup plan. UNIX time in seconds.


<!-- cache-key: cdktf-0.17.0-pre.15 input-588bca8b61bdd9813db7a31483163602200c9bf2e99dc1071aaf953653ae8ddb -->