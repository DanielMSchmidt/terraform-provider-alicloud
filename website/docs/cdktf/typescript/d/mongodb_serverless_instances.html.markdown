---
subcategory: "MongoDB"
layout: "alicloud"
page_title: "Alicloud: alicloud_mongodb_serverless_instances"
sidebar_current: "docs-alicloud-datasource-mongodb-serverless-instances"
description: |-
  Provides a list of Mongodb Serverless Instances to the user.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_mongodb\_serverless\_instances

This data source provides the Mongodb Serverless Instances of the current Alibaba Cloud user.

-> **NOTE:** Available in v1.148.0+.

## Example Usage

Basic Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const dataAlicloudMongodbServerlessInstancesExample =
      new alicloud.dataAlicloudMongodbServerlessInstances.DataAlicloudMongodbServerlessInstances(
        this,
        "example",
        {
          dbInstanceClass: "example_value",
          dbInstanceDescription: "example_value",
          ids: ["example_value"],
          networkType: "VPC",
          resourceGroupId: "example_value",
          status: "Running",
          tags: {
            Created: "MongodbServerlessInstance",
            For: "TF",
          },
          vpcId: "example_value",
          vswitchId: "example_value",
          zoneId: "example_value",
        }
      );
    new cdktf.TerraformOutput(this, "mongodb_serverless_instance_id_1", {
      value: cdktf.propertyAccess(
        dataAlicloudMongodbServerlessInstancesExample.instances,
        ["0", "id"]
      ),
    });
  }
}

```

## Argument Reference

The following arguments are supported:

* `dbInstanceClass` - (Optional, ForceNew) The db instance class.
* `dbInstanceDescription` - (Optional, ForceNew) The db instance description.
* `enableDetails` - (Optional) Default to `false`. Set it to `true` can output more details about resource attributes.
* `ids` - (Optional, ForceNew, Computed)  A list of Serverless Instance IDs.
* `networkType` - (Optional, ForceNew) The network type of the instance. Valid values: `classic` or `vpc`.
* `outputFile` - (Optional) File name where to save data source results (after running `terraform plan`).
* `resourceGroupId` - (Optional, ForceNew) The ID of the resource group.
* `status` - (Optional, ForceNew) The instance status. Valid values: `creating`, `dbInstanceClassChanging`, `dbInstanceNetTypeChanging`, `deleting`, `engineVersionUpgrading`, `guardSwitching`, `haSwitching`, `importing`, `importingFromOthers`, `linkSwitching`, `minorVersionUpgrading`, `nodeCreating`, `nodeDeleting`, `rebooting`, `restoring`, `running`, `sslModifying`, `tdeModifying`, `tempDbInstanceCreating`, `transing`, `transingToOthers`, `released`.
* `vpcId` - (Optional, ForceNew) The ID of the VPC network.
* `vswitchId` - (Optional, ForceNew) The id of the vswitch.
* `zoneId` - (Optional, ForceNew) The ID of the zone.
* `tags` - (Optional, ForceNew) A mapping of tags to assign to the resource.

## Argument Reference

The following attributes are exported in addition to the arguments listed above:

* `instances` - A list of Mongodb Serverless Instances. Each element contains the following attributes:
  * `capacityUnit` - The read/write throughput consumed by the instance.
  * `paymentType` - The Payment type of the instance.
  * `dbInstanceClass` - The db instance class.
  * `dbInstanceDescription` - The db instance description.
  * `dbInstanceId` - The db instance id.
  * `dbInstanceReleaseProtection` - The db instance release protection.
  * `dbInstanceStorage` - The db instance storage.
  * `engine` - The database engine of the instance.
  * `engineVersion` - The database version number. Valid values: `42`.
  * `expireTime` - The time when the subscription instance expires. The time is in the `yyyyMmDdThh:mmZ` format. The time is displayed in UTC.
  * `id` - The ID of the Serverless Instance.
  * `kindCode` - Indicates the type of the instance. Valid values: `0`: physical machine. `1`: ECS. `2`: DOCKER. `18`: k8s new architecture instance.
  * `lockMode` - The locked status of the instance.
  * `maintainEndTime` - The start time of the maintenance window. The time is in the `hh:mmZ` format. The time is displayed in UTC.
  * `maintainStartTime` - The end time of the maintenance window. The time is in the `hh:mmZ` format. The time is displayed in UTC.
  * `maxConnections` - Instance maximum connections.
  * `maxIops` - The maximum IOPS of the instance.
  * `networkType` - The network type of the instance.
  * `protocolType` - The access protocol type of the instance. Valid values: `mongodb`, `dynamodb`.
  * `resourceGroupId` - The ID of the resource group.
  * `securityIpGroups` - The security ip list.
      * `securityIpGroupAttribute` - The attribute of the IP whitelist. This parameter is empty by default.
      * `securityIpGroupName` - The name of the IP whitelist.
      * `securityIpList` - The IP addresses in the whitelist.
  * `status` - The status of the instance.
  * `storageEngine` - The storage engine used by the instance.
  * `tags` - The tag of the resource.
  * `vpcAuthMode` - Intranet secret free access mode.
  * `vpcId` - The ID of the VPC network.
  * `vswitchId` - The id of the vswitch.
  * `zoneId` - The ID of the zone.
<!-- cache-key: cdktf-0.17.0-pre.15 input-35c9fff09b73cedbb68f60c21567fb2e57beed2de7b017a6f54472f947eaed1e -->