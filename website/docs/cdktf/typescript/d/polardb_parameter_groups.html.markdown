---
subcategory: "PolarDB"
layout: "alicloud"
page_title: "Alicloud: alicloud_polardb_parameter_groups"
sidebar_current: "docs-alicloud-datasource-polardb-parameter-groups"
description: |-
  Provides a list of PolarDB Parameter Groups to the user.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_polardb\_parameter\_groups

This data source provides the PolarDB Parameter Groups of the current Alibaba Cloud user.

-> **NOTE:** Available in v1.183.0+.

## Example Usage

Basic Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const dataAlicloudPolardbParameterGroupsIds =
      new alicloud.dataAlicloudPolardbParameterGroups.DataAlicloudPolardbParameterGroups(
        this,
        "ids",
        {
          ids: ["example_id"],
        }
      );
    const dataAlicloudPolardbParameterGroupsNameRegex =
      new alicloud.dataAlicloudPolardbParameterGroups.DataAlicloudPolardbParameterGroups(
        this,
        "nameRegex",
        {
          nameRegex: "example_name",
        }
      );
    new cdktf.TerraformOutput(this, "polardb_parameter_group_id_1", {
      value: cdktf.propertyAccess(
        dataAlicloudPolardbParameterGroupsIds.groups,
        ["0", "id"]
      ),
    });
    new cdktf.TerraformOutput(this, "polardb_parameter_group_id_2", {
      value: cdktf.propertyAccess(
        dataAlicloudPolardbParameterGroupsNameRegex.groups,
        ["0", "id"]
      ),
    });
  }
}

```

## Argument Reference

The following arguments are supported:

* `ids` - (Optional, ForceNew, Computed)  A list of Parameter Group IDs.
* `nameRegex` - (Optional, ForceNew) A regex string to filter results by Parameter Group name.
* `dbType` - (Optional, ForceNew) The type of the database engine. Only `mySql` is supported.
* `dbVersion` - (Optional, ForceNew) The version number of the database engine. Valid values: `56`, `57`, `80`.
* `outputFile` - (Optional) File name where to save data source results (after running `terraform plan`).

## Argument Reference

The following attributes are exported in addition to the arguments listed above:

* `names` - A list of Parameter Group names.
* `groups` - A list of PolarDB Parameter Groups. Each element contains the following attributes:
	* `id` - The ID of the Parameter Group.
	* `parameterGroupId` - The ID of the Parameter Group.
	* `parameterGroupName` - The name of the parameter template.
	* `dbType` - The type of the database engine.
	* `dbVersion` - The version number of the database engine.
	* `parameterGroupDesc` - The description of the parameter template.
	* `parameterGroupType` - The type of the parameter template.  
	* `parameterCounts` - The number of parameters in the parameter template.
	* `forceRestart` - Indicates whether to restart the cluster when this parameter template is applied.
	* `createTime` - The time when the parameter template was created. The time follows the ISO 8601 standard in the yyyy-MM-ddTHH:mm:ssZ format. The time is displayed in UTC.
<!-- cache-key: cdktf-0.17.0-pre.15 input-9ee5969c62d369b59a07f9dc8ba5e7eedcc27f8f6e5eaf522991811f34d818c2 -->