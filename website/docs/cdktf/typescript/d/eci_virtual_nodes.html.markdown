---
subcategory: "Elastic Container Instance (ECI)"
layout: "alicloud"
page_title: "Alicloud: alicloud_eci_virtual_nodes"
sidebar_current: "docs-alicloud-datasource-eci-virtual-nodes"
description: |-
  Provides a list of Eci Virtual Nodes to the user.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_eci\_virtual\_nodes

This data source provides the Eci Virtual Nodes of the current Alibaba Cloud user.

-> **NOTE:** Available in v1.145.0+.

## Example Usage

Basic Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const dataAlicloudEciVirtualNodesIds =
      new alicloud.dataAlicloudEciVirtualNodes.DataAlicloudEciVirtualNodes(
        this,
        "ids",
        {
          ids: ["example_value-1", "example_value-2"],
        }
      );
    const dataAlicloudEciVirtualNodesNameRegex =
      new alicloud.dataAlicloudEciVirtualNodes.DataAlicloudEciVirtualNodes(
        this,
        "nameRegex",
        {
          nameRegex: "^my-VirtualNode",
        }
      );
    new cdktf.TerraformOutput(this, "eci_virtual_node_id_1", {
      value: cdktf.propertyAccess(dataAlicloudEciVirtualNodesIds.nodes, [
        "0",
        "id",
      ]),
    });
    new cdktf.TerraformOutput(this, "eci_virtual_node_id_2", {
      value: cdktf.propertyAccess(dataAlicloudEciVirtualNodesNameRegex.nodes, [
        "0",
        "id",
      ]),
    });
  }
}

```

## Argument Reference

The following arguments are supported:

* `ids` - (Optional, ForceNew, Computed)  A list of Virtual Node IDs.
* `nameRegex` - (Optional, ForceNew) A regex string to filter results by Virtual Node name.
* `outputFile` - (Optional) File name where to save data source results (after running `terraform plan`).
* `resourceGroupId` - (Optional, ForceNew) The resource group ID. If when you create a GPU does not specify a resource group instance will automatically add the account's default resource group.
* `securityGroupId` - (Optional, ForceNew) VNode itself and by VNode created (ECI) the security group used by.
* `status` - (Optional, ForceNew) The Status of the virtual node. Valid values: `cleaned`, `failed`, `pending`, `ready`.
* `tags` - (Optional, ForceNew) A mapping of tags to assign to the resource.
* `virtualNodeName` - (Optional, ForceNew) The name of the virtual node.

## Argument Reference

The following attributes are exported in addition to the arguments listed above:

* `names` - A list of Virtual Node names.
* `nodes` - A list of Eci Virtual Nodes. Each element contains the following attributes:
	* `cpu` - The Number of CPU.
	* `createTime` - The creation time of the virtual node.
	* `eniInstanceId` - The ENI instance ID.
	* `events` - The event list.
		* `type` - The Event type.
		* `count` - The number of occurrences.
		* `firstTimestamp` - The first presentation time stamp.
		* `lastTimestamp` - The most recent time stamp.
		* `message` - The event of the message body.
		* `name` - The name of the event.
		* `reason` - The causes of the incident.
	* `id` - The ID of the Virtual Node.
	* `internetIp` - The IP address of a public network.
	* `intranetIp` - The private IP address of the RDS instance.
	* `memory` - The memory size.
	* `ramRoleName` - The ram role.
	* `resourceGroupId` - The resource group ID. 
	* `securityGroupId` - The security group ID.
	* `status` - The Status of the virtual node.
	* `tags` - A mapping of tags to assign to the resource.
	* `virtualNodeId` - Of the virtual node number.
	* `virtualNodeName` - The name of the virtual node.
	* `vswitchId` - The vswitch id.
	* `zoneId` - The Zone.
<!-- cache-key: cdktf-0.17.0-pre.15 input-6fd220a582aabc4b68eb846e7da867e823868abc5943ac57dbc724cc925aa053 -->