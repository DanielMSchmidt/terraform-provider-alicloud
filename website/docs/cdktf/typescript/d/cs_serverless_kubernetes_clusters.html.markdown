---
subcategory: "Container Service for Kubernetes (ACK)"
layout: "alicloud"
page_title: "Alicloud: alicloud_cs_serverless_kubernetes_clusters"
sidebar_current: "docs-alicloud-datasource-cs-serverless-kubernetes-clusters"
description: |-
  Provides a list of Container Service Serverless Kubernetes Clusters to be used by the alicloud_cs_serverless_kubernetes_clusters resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_cs\_serverless\_kubernetes\_clusters

This data source provides a list Container Service Serverless Kubernetes Clusters on Alibaba Cloud.

-> **NOTE:** Available in 1.58.0+

-> **NOTE:** From version 1.177.0+, We supported batch export of clusters' kube config information by `kubeConfigFilePrefix`.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const dataAlicloudCsServerlessKubernetesClustersK8SClusters =
      new alicloud.dataAlicloudCsServerlessKubernetesClusters.DataAlicloudCsServerlessKubernetesClusters(
        this,
        "k8s_clusters",
        {
          kubeConfigFilePrefix: "~/.kube/serverless",
          nameRegex: "my-first-k8s",
          outputFile: "my-first-k8s-json",
        }
      );
    new cdktf.TerraformOutput(this, "output", {
      value: dataAlicloudCsServerlessKubernetesClustersK8SClusters.clusters,
    });
  }
}

```

## Argument Reference

The following arguments are supported:

* `ids` - (Optional) Cluster IDs to filter.
* `nameRegex` - (Optional) A regex string to filter results by cluster name.
* `outputFile` - (Optional) File name where to save data source results (after running `terraform plan`).
* `enabledDetails` - (Optional) Boolean, false by default, only `id` and `name` are exported. Set to true if more details are needed, e.g.,  `deletionProtection`, `connections`. See full list in attributes.
* `kubeConfigFilePrefix` - (Optional, Available in 1.177.0+) The path prefix of kube config. You could store kube config in a specified directory by specifying this field, like `~/Kube/serverless`, then it will be named with `~/Kube/serverlessClusterIdKubeconfig`. From version 1.187.0+, kube_config will not export kube_config if this field is not set.

## Attributes Reference

The following attributes are exported in addition to the arguments listed above:

* `ids` - A list of matched Kubernetes clusters' ids.
* `names` - A list of matched Kubernetes clusters' names.
* `clusters` - A list of matched Kubernetes clusters. Each element contains the following attributes:
  * `id` - The ID of the container cluster.
  * `name` - The name of the container cluster.
  * `vswitchId` - The ID of VSwitch where the current cluster is located.
  * `vpcId` - The ID of VPC where the current cluster is located.
  * `securityGroupId` - The ID of security group where the current cluster  is located.
  * `natGatewayId` - The ID of nat gateway used to launch kubernetes cluster.
  * `deletionProtection` - Whether the cluster support delete protection.  
  * `connections` - Map of serverless cluster connection information. It contains several attributes to `Block Connections`.
  * `resourceGroupId` - (Optional, ForceNew, Available in 1.101.0+) The ID of the resource group,by default these cloud resources are automatically assigned to the default resource group.
  
### Block Connections

* `apiServerInternet` - API Server Internet endpoint.
* `apiServerIntranet` - API Server Intranet endpoint.
* `masterPublicIp` - Master node SSH IP address.

<!-- cache-key: cdktf-0.17.0-pre.15 input-43d4099636e2ae7832a7c6a0fe0c9ed02d23f02c9d5c31acb771288ef716be8e -->