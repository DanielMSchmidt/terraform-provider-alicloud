---
subcategory: "Simple Application Server"
layout: "alicloud"
page_title: "Alicloud: alicloud_simple_application_server_instances"
sidebar_current: "docs-alicloud-datasource-simple-application-server-instances"
description: |-
  Provides a list of Simple Application Server Instances to the user.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_simple\_application\_server\_instances

This data source provides the Simple Application Server Instances of the current Alibaba Cloud user.

-> **NOTE:** Available in v1.135.0+.

## Example Usage

Basic Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const dataAlicloudSimpleApplicationServerInstancesIds =
      new alicloud.dataAlicloudSimpleApplicationServerInstances.DataAlicloudSimpleApplicationServerInstances(
        this,
        "ids",
        {
          ids: ["example_id"],
        }
      );
    const dataAlicloudSimpleApplicationServerInstancesNameRegex =
      new alicloud.dataAlicloudSimpleApplicationServerInstances.DataAlicloudSimpleApplicationServerInstances(
        this,
        "nameRegex",
        {
          nameRegex: "^my-Instance",
        }
      );
    new cdktf.TerraformOutput(this, "simple_application_server_instance_id_1", {
      value: cdktf.propertyAccess(
        dataAlicloudSimpleApplicationServerInstancesIds.instances,
        ["0", "id"]
      ),
    });
    new cdktf.TerraformOutput(this, "simple_application_server_instance_id_2", {
      value: cdktf.propertyAccess(
        dataAlicloudSimpleApplicationServerInstancesNameRegex.instances,
        ["0", "id"]
      ),
    });
  }
}

```

## Argument Reference

The following arguments are supported:

* `ids` - (Optional, ForceNew, Computed)  A list of Instance IDs.
* `nameRegex` - (Optional, ForceNew) A regex string to filter results by Instance name.
* `outputFile` - (Optional) File name where to save data source results (after running `terraform plan`).
* `paymentType` - (Optional, ForceNew) The paymen type of the resource. Valid values: `subscription`.
* `status` - (Optional, ForceNew) The status of the resource. Valid values: `resetting`, `running`, `stopped`, `upgrading`.

## Argument Reference

The following attributes are exported in addition to the arguments listed above:

* `names` - A list of Instance names.
* `instances` - A list of Simple Application Server Instances. Each element contains the following attributes:
	* `businessStatus` - The billing status of the simple application server. Valid values: `normal`, `expired` and `overdue`.
	* `createTime` - The time when the simple application server was created.
	* `ddosStatus` - The DDoS protection status. Valid values: `normal`, `blackHole`, and `defense`.
	* `expiredTime` - The time when the simple application server expires.
	* `id` - The ID of the Instance.
	* `imageId` - The ID of the simple application server Image.
	* `innerIpAddress` - The internal IP address of the simple application server.
	* `instanceId` - The ID of the simple application server.
	* `instanceName` - The name of the resource.
	* `paymentType` - The billing method of the simple application server.
	* `planId` - The ID of the simple application server plan.
	* `publicIpAddress` - The public IP address of the simple application server.
	* `status` - The status of the resource.

<!-- cache-key: cdktf-0.17.0-pre.15 input-345ec3ef3174d8a500270475b91f0bc856e2673b639cd112e148e4c154f8b528 -->