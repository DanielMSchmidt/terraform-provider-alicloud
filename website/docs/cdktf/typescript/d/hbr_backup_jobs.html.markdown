---
subcategory: "Hybrid Backup Recovery (HBR)"
layout: "alicloud"
page_title: "Alicloud: alicloud_hbr_backup_jobs"
sidebar_current: "docs-alicloud-datasource-hbr-backup-jobs"
description: |-
  Provides a list of Hbr Backup Jobs to the user.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_hbr\_backup\_jobs

This data source provides the Hbr Backup Jobs of the current Alibaba Cloud user.

-> **NOTE:** Available in v1.138.0+.

## Example Usage

Basic Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const dataAlicloudHbrEcsBackupPlansDefault =
      new alicloud.dataAlicloudHbrEcsBackupPlans.DataAlicloudHbrEcsBackupPlans(
        this,
        "default",
        {
          nameRegex: "plan-name",
        }
      );
    const dataAlicloudHbrBackupJobsDefault =
      new alicloud.dataAlicloudHbrBackupJobs.DataAlicloudHbrBackupJobs(
        this,
        "default_1",
        {
          filter: [
            {
              key: "VaultId",
              operator: "IN",
              values: [
                cdktf.Token.asString(
                  cdktf.propertyAccess(
                    dataAlicloudHbrEcsBackupPlansDefault.plans,
                    ["0", "vault_id"]
                  )
                ),
              ],
            },
            {
              key: "InstanceId",
              operator: "IN",
              values: [
                cdktf.Token.asString(
                  cdktf.propertyAccess(
                    dataAlicloudHbrEcsBackupPlansDefault.plans,
                    ["0", "instance_id"]
                  )
                ),
              ],
            },
            {
              key: "CompleteTime",
              operator: "BETWEEN",
              values: ["2021-08-23T14:17:15CST", "2021-08-24T14:17:15CST"],
            },
          ],
          sourceType: "ECS_FILE",
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAlicloudHbrBackupJobsDefault.overrideLogicalId("default");
    const dataAlicloudHbrBackupJobsExample =
      new alicloud.dataAlicloudHbrBackupJobs.DataAlicloudHbrBackupJobs(
        this,
        "example",
        {
          filter: [
            {
              key: "VaultId",
              operator: "IN",
              values: [
                cdktf.Token.asString(
                  cdktf.propertyAccess(
                    dataAlicloudHbrEcsBackupPlansDefault.plans,
                    ["0", "vault_id"]
                  )
                ),
              ],
            },
            {
              key: "InstanceId",
              operator: "IN",
              values: [
                cdktf.Token.asString(
                  cdktf.propertyAccess(
                    dataAlicloudHbrEcsBackupPlansDefault.plans,
                    ["0", "instance_id"]
                  )
                ),
              ],
            },
            {
              key: "CompleteTime",
              operator: "LESS_THAN",
              values: ["2021-10-20T20:20:20CST"],
            },
          ],
          sourceType: "ECS_FILE",
          status: "COMPLETE",
        }
      );
    new cdktf.TerraformOutput(this, "alicloud_hbr_backup_jobs_default_1", {
      value: cdktf.propertyAccess(dataAlicloudHbrBackupJobsDefault.jobs, [
        "0",
        "id",
      ]),
    });
    new cdktf.TerraformOutput(this, "alicloud_hbr_backup_jobs_example_1", {
      value: cdktf.propertyAccess(dataAlicloudHbrBackupJobsExample.jobs, [
        "0",
        "id",
      ]),
    });
  }
}

```

## Argument Reference

The following arguments are supported:

* `ids` - (Optional, ForceNew, Computed)  A list of Backup Job IDs.
* `sourceType` - (Required, ForceNew) The type of data source. Valid values: `ecsFile`, `nas`, `oss`, `ots`, `udmEcs`, `udmEcsDisk`.
* `status` - (Optional, ForceNew) The status of backup job. Valid values: `complete`, `partialComplete`, `failed`, `unavailable`.
* `sortDirection` - (Optional, ForceNew) The sort direction, sort results by ascending or descending order based on the value jobs id. Valid values: `ascend`, `descend`.
* `outputFile` - (Optional) File name where to save data source results (after running `terraform plan`).


### Block filter

More complex filters can be expressed using one or more `filter` sub-blocks,
which take the following arguments:
* `key`      - (Required) The key of the field to filter. Valid values: `planId`, `vaultId`, `instanceId`, `bucket`, `fileSystemId`, `completeTime`.
* `operator` - (Required) The operator of the field to filter. Valid values: `equal`, `notEqual`, `greaterThan`, `greaterThanOrEqual`, `lessThan`, `lessThanOrEqual`, `between`, `in`.
* `values`   - (Required) Set of values that are accepted for the given field.

-> **NOTE:** Numeric types such as `completeTime` do not support `in` operations for the time being.

## Argument Reference

The following attributes are exported in addition to the arguments listed above:

* `jobs` - A list of Hbr Backup Jobs. Each element contains the following attributes:
	* `id` - The ID of the backup job.
	* `backupJobId` - The ID of the backup job.
	* `sourceType` - The type of data source. Valid Values: `ecsFile`, `oss`, `nas`, `udmDisk`.
	* `backJobName` - The name of backup job.
	* `planId` - The ID of a backup plan.
	* `vaultId` - The ID of backup vault.
	* `actualBytes` - The actual data volume of the backup task (After deduplication) . Unit byte.
	* `actualItems` - The actual number of items in the backup task. (Currently only file backup is available).
	* `backupType` - Backup type. Valid values: `complete`(full backup).
	* `bucket` - The name of target OSS bucket.
	* `bytesDone` - The amount of backup data (Incremental). Unit byte.
	* `bytesTotal` - The total amount of data sources. Unit byte.
	* `createTime` - The creation time of backup job. UNIX time seconds.
	* `startTime` - The scheduled backup start time. UNIX time seconds.
	* `completeTime` -  The completion time of backup job. UNIX time seconds.
	* `updatedTime` - The update time of backup job. UNIX time seconds.
	* `fileSystemId` - The ID of destination file system.
	* `nasCreateTime` - File system creation time. UNIX time in seconds.
	* `instanceId` - The ID of target ECS instance.
	* `itemsDone` - The number of items restore job recovered.
	* `itemsTotal` - The total number of items restore job recovered.
	* `paths` - List of backup path. e.g. `["/home", "/var"]`.
	* `prefix` - The prefix of Oss bucket files.
	* `include` - Include path. String of Json list. Up to 255 characters. e.g. `"[\"/var\"]"`
	* `exclude` - Exclude path. String of Json list. Up to 255 characters. e.g. `"[\"/home/work\"]"`
	* `status` - The status of restore job. Valid values: `complete` , `partialComplete`, `failed`.
	* `progress` - Backup progress. The value is 100%*100.
	* `errorMessage` - Error message.
	* `crossAccountType` - (Available in v1.190.0+) The type of the cross account backup. It is valid only when `sourceType` is `ecsFile`, `nas`, `oss` or `ots`.
	* `crossAccountUserId` - (Available in v1.190.0+) The original account ID of the cross account backup managed by the current account. It is valid only when `sourceType` is `ecsFile`, `nas`, `oss` or `ots`.
	* `crossAccountRoleName` - (Available in v1.190.0+) The role name created in the original account RAM backup by the cross account managed by the current account. It is valid only when `sourceType` is `ecsFile`, `nas`, `oss` or `ots`.
<!-- cache-key: cdktf-0.17.0-pre.15 input-14b6585c441458bd70f89b41c12a0f3ce244d822ea3c8065a85198813c76868f -->