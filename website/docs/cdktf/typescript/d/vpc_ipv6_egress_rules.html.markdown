---
subcategory: "VPC"
layout: "alicloud"
page_title: "Alicloud: alicloud_vpc_ipv6_egress_rules"
sidebar_current: "docs-alicloud-datasource-vpc-ipv6-egress-rules"
description: |-
  Provides a list of Vpc Ipv6 Egress Rules to the user.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_vpc\_ipv6\_egress\_rules

This data source provides the Vpc Ipv6 Egress Rules of the current Alibaba Cloud user.

-> **NOTE:** Available in v1.142.0+.

## Example Usage

Basic Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const dataAlicloudVpcIpv6EgressRulesIds =
      new alicloud.dataAlicloudVpcIpv6EgressRules.DataAlicloudVpcIpv6EgressRules(
        this,
        "ids",
        {
          ids: ["example_value-1", "example_value-2"],
          ipv6GatewayId: "example_value",
        }
      );
    const dataAlicloudVpcIpv6EgressRulesIpv6EgressRuleName =
      new alicloud.dataAlicloudVpcIpv6EgressRules.DataAlicloudVpcIpv6EgressRules(
        this,
        "ipv6EgressRuleName",
        {
          ipv6EgressRuleName: "example_value",
          ipv6GatewayId: "example_value",
        }
      );
    const dataAlicloudVpcIpv6EgressRulesNameRegex =
      new alicloud.dataAlicloudVpcIpv6EgressRules.DataAlicloudVpcIpv6EgressRules(
        this,
        "nameRegex",
        {
          ipv6GatewayId: "example_value",
          nameRegex: "^my-Ipv6EgressRule",
        }
      );
    const dataAlicloudVpcIpv6EgressRulesStatus =
      new alicloud.dataAlicloudVpcIpv6EgressRules.DataAlicloudVpcIpv6EgressRules(
        this,
        "status",
        {
          ipv6GatewayId: "example_value",
          status: "Available",
        }
      );
    new cdktf.TerraformOutput(this, "vpc_ipv6_egress_rule_id_1", {
      value: cdktf.propertyAccess(dataAlicloudVpcIpv6EgressRulesIds.rules, [
        "0",
        "id",
      ]),
    });
    new cdktf.TerraformOutput(this, "vpc_ipv6_egress_rule_id_2", {
      value: cdktf.propertyAccess(
        dataAlicloudVpcIpv6EgressRulesNameRegex.rules,
        ["0", "id"]
      ),
    });
    new cdktf.TerraformOutput(this, "vpc_ipv6_egress_rule_id_3", {
      value: cdktf.propertyAccess(dataAlicloudVpcIpv6EgressRulesStatus.rules, [
        "0",
        "id",
      ]),
    });
    new cdktf.TerraformOutput(this, "vpc_ipv6_egress_rule_id_4", {
      value: cdktf.propertyAccess(
        dataAlicloudVpcIpv6EgressRulesIpv6EgressRuleName.rules,
        ["0", "id"]
      ),
    });
  }
}

```

## Argument Reference

The following arguments are supported:

* `ids` - (Optional, ForceNew, Computed)  A list of Ipv6 Egress Rule IDs.
* `instanceId` - (Optional, ForceNew) The ID of the instance that is associated with the IPv6 address to which the egress-only rule is applied.
* `ipv6EgressRuleName` - (Optional, ForceNew) The name of the resource.
* `ipv6GatewayId` - (Required, ForceNew) The ID of the IPv6 gateway.
* `nameRegex` - (Optional, ForceNew) A regex string to filter results by Ipv6 Egress Rule name.
* `outputFile` - (Optional) File name where to save data source results (after running `terraform plan`).
* `status` - (Optional, ForceNew) The status of the resource. Valid values: `available`, `deleting`, `pending`.

## Argument Reference

The following attributes are exported in addition to the arguments listed above:

* `names` - A list of Ipv6 Egress Rule names.
* `rules` - A list of Vpc Ipv6 Egress Rules. Each element contains the following attributes:
	* `description` - The description of the egress-only rule.
	* `id` - The ID of the Ipv6 Egress Rule. The value formats as `<ipv6_gateway_id>:<ipv6_egress_rule_id>`.
	* `instanceId` - The ID of the instance to which the egress-only rule is applied.
	* `instanceType` - The type of the instance to which the egress-only rule is applied.
	* `ipv6EgressRuleId` - The first ID of the resource.
	* `ipv6EgressRuleName` - The name of the resource.
	* `ipv6GatewayId` - The ID of the IPv6 gateway.
	* `status` - The status of the resource. Valid values: `available`, `pending` and `deleting`.

<!-- cache-key: cdktf-0.17.0-pre.15 input-9597b3fbb398ca0d2c3a3099be2291867dea4eb2db4c35bbe18c67eb0d08f58b -->