---
subcategory: "Api Gateway"
layout: "alicloud"
page_title: "Alicloud: alicloud_api_gateway_plugins"
sidebar_current: "docs-alicloud-datasource-api-gateway-plugins"
description: |-
  Provides a list of Api Gateway Plugins to the user.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_api\_gateway\_plugins

This data source provides the Api Gateway Plugins of the current Alibaba Cloud user.

-> **NOTE:** Available in v1.187.0+.

## Example Usage

Basic Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const dataAlicloudApiGatewayPluginsIds =
      new alicloud.dataAlicloudApiGatewayPlugins.DataAlicloudApiGatewayPlugins(
        this,
        "ids",
        {}
      );
    const dataAlicloudApiGatewayPluginsNameRegex =
      new alicloud.dataAlicloudApiGatewayPlugins.DataAlicloudApiGatewayPlugins(
        this,
        "nameRegex",
        {
          nameRegex: "^my-Plugin",
        }
      );
    new cdktf.TerraformOutput(this, "api_gateway_plugin_id_1", {
      value: cdktf.propertyAccess(dataAlicloudApiGatewayPluginsIds.plugins, [
        "0",
        "id",
      ]),
    });
    new cdktf.TerraformOutput(this, "api_gateway_plugin_id_2", {
      value: cdktf.propertyAccess(
        dataAlicloudApiGatewayPluginsNameRegex.plugins,
        ["0", "id"]
      ),
    });
  }
}

```

## Argument Reference

The following arguments are supported:

* `ids` - (Optional, ForceNew, Computed)  A list of Plugin IDs.
* `nameRegex` - (Optional, ForceNew) A regex string to filter results by Plugin name.
* `outputFile` - (Optional) File name where to save data source results (after running `terraform plan`).
* `pluginName` - (Optional, ForceNew) The name of the plug-in that you want to create. It can contain uppercase English letters, lowercase English letters, Chinese characters, numbers, and underscores (_). It must be 4 to 50 characters in length and cannot start with an underscore (_).
* `pluginType` - (Optional, ForceNew) The type of the plug-in. Valid values: `backendSignature`, `caching`, `cors`, `ipControl`, `jwtAuth`, `trafficControl`.
* `tags` - (Optional, ForceNew) A mapping of tags to assign to the resource.

## Argument Reference

The following attributes are exported in addition to the arguments listed above:

* `names` - A list of Plugin names.
* `plugins` - A list of Api Gateway Plugins. Each element contains the following attributes:
	* `createTime` - The CreateTime of the resource.
	* `description` - The description of the plug-in, which cannot exceed 200 characters.
	* `id` - The ID of the Plugin.
	* `modifiedTime` - The ModifiedTime of the resource.
	* `pluginData` - The definition statement of the plug-in. Plug-in definition statements in the JSON and YAML formats are supported.
	* `pluginId` - The first ID of the resource.
	* `pluginName` - The name of the plug-in that you want to create.
	* `pluginType` - The type of the plug-in.
	* `tags` - The tag of the resource.
<!-- cache-key: cdktf-0.17.0-pre.15 input-d67ad7d0ce7e7621cb166b6617313026d8c19a53aeab79c7e4e711f6561599ae -->