---
subcategory: "Elastic Desktop Service (ECD)"
layout: "alicloud"
page_title: "Alicloud: alicloud_ecd_nas_file_systems"
sidebar_current: "docs-alicloud-datasource-ecd-nas-file-systems"
description: |-
  Provides a list of Ecd Nas File Systems to the user.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_ecd\_nas\_file\_systems

This data source provides the Ecd Nas File Systems of the current Alibaba Cloud user.

-> **NOTE:** Available in v1.141.0+.

## Example Usage

Basic Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const alicloudEcdSimpleOfficeSiteDefault =
      new alicloud.ecdSimpleOfficeSite.EcdSimpleOfficeSite(this, "default", {
        cidrBlock: "172.16.0.0/12",
        desktopAccessType: "Internet",
        enableInternetAccess: false,
        officeSiteName: "your_office_site_name",
      });
    const dataAlicloudEcdNasFileSystemsIds =
      new alicloud.dataAlicloudEcdNasFileSystems.DataAlicloudEcdNasFileSystems(
        this,
        "ids",
        {}
      );
    new cdktf.TerraformOutput(this, "ecd_nas_file_system_id_1", {
      value: cdktf.propertyAccess(dataAlicloudEcdNasFileSystemsIds.systems, [
        "0",
        "id",
      ]),
    });
    const alicloudEcdNasFileSystemDefault =
      new alicloud.ecdNasFileSystem.EcdNasFileSystem(this, "default_3", {
        description: "your_description",
        nasFileSystemName: "your_nas_file_system_name",
        officeSiteId: cdktf.Token.asString(
          alicloudEcdSimpleOfficeSiteDefault.id
        ),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudEcdNasFileSystemDefault.overrideLogicalId("default");
    const dataAlicloudEcdNasFileSystemsNameRegex =
      new alicloud.dataAlicloudEcdNasFileSystems.DataAlicloudEcdNasFileSystems(
        this,
        "nameRegex",
        {
          nameRegex: cdktf.Token.asString(
            alicloudEcdNasFileSystemDefault.nasFileSystemName
          ),
        }
      );
    new cdktf.TerraformOutput(this, "ecd_nas_file_system_id_2", {
      value: cdktf.propertyAccess(
        dataAlicloudEcdNasFileSystemsNameRegex.systems,
        ["0", "id"]
      ),
    });
  }
}

```

## Argument Reference

The following arguments are supported:

* `ids` - (Optional, ForceNew, Computed)  A list of Nas File System IDs.
* `nameRegex` - (Optional, ForceNew) A regex string to filter results by Nas File System name.
* `officeSiteId` - (Optional, ForceNew) The ID of office site.
* `outputFile` - (Optional) File name where to save data source results (after running `terraform plan`).
* `status` - (Optional, ForceNew) The status of nas file system. Valid values: `pending`, `running`, `stopped`,`deleting`, `deleted`, `invalid`.

## Argument Reference

The following attributes are exported in addition to the arguments listed above:

* `names` - A list of Nas File System names.
* `systems` - A list of Ecd Nas File Systems. Each element contains the following attributes:
	* `capacity` - The capacity of nas file system.
	* `createTime` - The create time of nas file system.
	* `description` - The description of nas file system.
	* `fileSystemId` - The filesystem id of nas file system.
	* `fileSystemType` - The type of nas file system.
	* `id` - The ID of the Nas File System.
	* `meteredSize` - The size of metered.
	* `mountTargetDomain` - The domain of mount target.
	* `mountTargetStatus` - The status of mount target. Valid values: `pending`, `active`, `inactive`,`deleting`,`invalid`.
	* `nasFileSystemName` - The name of nas file system.
	* `officeSiteId` - The ID of office site.
	* `officeSiteName` - The name of office site.
	* `status` - The status of nas file system. Valid values: `pending`, `running`, `stopped`,`deleting`, `deleted`, `invalid`.
	* `storageType` - The storage type of nas file system.
	* `supportAcl` - Whether to support Acl.
	* `zoneId` - The zone id of nas file system.

<!-- cache-key: cdktf-0.17.0-pre.15 input-871d17c97535efb09d45c7f9c8e892c6617d9fe456aaede227c2ad17d63b7cce -->