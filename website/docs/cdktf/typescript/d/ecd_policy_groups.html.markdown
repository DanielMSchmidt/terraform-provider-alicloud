---
subcategory: "Elastic Desktop Service (ECD)"
layout: "alicloud"
page_title: "Alicloud: alicloud_ecd_policy_groups"
sidebar_current: "docs-alicloud-datasource-ecd-policy-groups"
description: |-
  Provides a list of Ecd Policy Groups to the user.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_ecd\_policy\_groups

This data source provides the Ecd Policy Groups of the current Alibaba Cloud user.

-> **NOTE:** Available in v1.130.0+.

## Example Usage

Basic Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    new alicloud.provider.AlicloudProvider(this, "alicloud", {
      region: "cn-hangzhou",
    });
    new alicloud.ecdPolicyGroup.EcdPolicyGroup(this, "default", {
      authorizeAccessPolicyRules: [
        {
          cidrIp: "1.2.3.45/24",
          description: "my-description1",
        },
      ],
      authorizeSecurityPolicyRules: [
        {
          cidrIp: "1.2.3.4/24",
          description: "my-description",
          ipProtocol: "TCP",
          policy: "accept",
          portRange: "80/80",
          priority: "1",
          type: "inflow",
        },
      ],
      clipboard: "read",
      localDrive: "read",
      policyGroupName: "my-policy-group",
      usbRedirect: "off",
      watermark: "off",
    });
    const dataAlicloudEcdPolicyGroupsNameRegex =
      new alicloud.dataAlicloudEcdPolicyGroups.DataAlicloudEcdPolicyGroups(
        this,
        "nameRegex",
        {
          nameRegex: "^my-policy",
        }
      );
    new cdktf.TerraformOutput(this, "ecd_policy_group_id", {
      value: cdktf.propertyAccess(dataAlicloudEcdPolicyGroupsNameRegex.groups, [
        "0",
        "id",
      ]),
    });
  }
}

```

## Argument Reference

The following arguments are supported:

* `ids` - (Optional, ForceNew, Computed)  A list of Policy Group IDs.
* `nameRegex` - (Optional, ForceNew) A regex string to filter results by Policy Group name.
* `outputFile` - (Optional) File name where to save data source results (after running `terraform plan`).
* `status` - (Optional, ForceNew) The status of policy.

## Argument Reference

The following attributes are exported in addition to the arguments listed above:

* `names` - A list of Policy Group names.
* `groups` - A list of Ecd Policy Groups. Each element contains the following attributes:
	* `authorizeAccessPolicyRules` - The rule of authorize access rule.
		* `cidrIp` - The cidrip of authorize access rule..
		* `description` - The description of authorize access rule.
	* `authorizeSecurityPolicyRules` - The policy rule.
		* `cidrIp` - The cidrip of security rules.
		* `description` - The description of security rules.
		* `ipProtocol` - The ip protocol of security rules.
		* `policy` - The policy of security rules.
		* `portRange` - The port range of security rules.
		* `priority` - The priority of security rules.
		* `type` - The type of security rules.
	* `clipboard` - The clipboard policy.
	* `domainList` - The list of domain.
	* `edsCount` - The count of eds.
	* `htmlAccess` - The access of html5.
	* `htmlFileTransfer` - The html5 file transfer.
	* `id` - The ID of the Policy Group.
	* `localDrive` - Local drive redirect policy.
	* `policyGroupId` - The policy group id.
	* `policyGroupName` - The name of policy group.
	* `policyGroupType` - The type of policy group.
	* `preemptLogin` - The preempt login.
	* `preemptLoginUsers` - A list of preempt log users.
	* `status` - The status of policy.
	* `usbRedirect` - The usb redirect policy.
	* `visualQuality` - The quality of visual.sae_ecdsae_nameecd_po
	* `watermark` - The watermark policy.
	* `watermarkCustomText` - The custort text of water mark.
	* `watermarkTransparency` - The watermark transparency.
	* `watermarkType` - The type of watemark.
	* `recording` - (Available in 1.171.0+) Whether to enable screen recording. Valid values: `off`, `alltime`, `period`.
	* `recordingStartTime` - (Available in 1.171.0+) The start time of recording.
	* `recordingEndTime` - (Available in 1.171.0+) The end time of recording.
	* `recordingFps` - (Available in 1.171.0+) The fps of recording. Valid values: `2`, `5`, `10`, `15`.
	* `cameraRedirect` - (Available in 1.171.0+) Whether to enable local camera redirection. Valid values: `on`, `off`.

<!-- cache-key: cdktf-0.17.0-pre.15 input-a5fafb653d76b8f815ff122d23086933f692ef129ac583fa39d2f6587b8fd486 -->