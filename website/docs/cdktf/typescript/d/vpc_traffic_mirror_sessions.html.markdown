---
subcategory: "VPC"
layout: "alicloud"
page_title: "Alicloud: alicloud_vpc_traffic_mirror_sessions"
sidebar_current: "docs-alicloud-datasource-vpc-traffic-mirror-sessions"
description: |-
  Provides a list of Vpc Traffic Mirror Sessions to the user.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_vpc\_traffic\_mirror\_sessions

This data source provides the Vpc Traffic Mirror Sessions of the current Alibaba Cloud user.

-> **NOTE:** Available in v1.142.0+.

## Example Usage

Basic Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const dataAlicloudVpcTrafficMirrorSessionsEnabled =
      new alicloud.dataAlicloudVpcTrafficMirrorSessions.DataAlicloudVpcTrafficMirrorSessions(
        this,
        "enabled",
        {
          enabled: cdktf.Token.asBoolean("false"),
          ids: ["example_id"],
        }
      );
    const dataAlicloudVpcTrafficMirrorSessionsFilterId =
      new alicloud.dataAlicloudVpcTrafficMirrorSessions.DataAlicloudVpcTrafficMirrorSessions(
        this,
        "filterId",
        {
          ids: ["example_id"],
          trafficMirrorFilterId: "example_value",
        }
      );
    const dataAlicloudVpcTrafficMirrorSessionsIds =
      new alicloud.dataAlicloudVpcTrafficMirrorSessions.DataAlicloudVpcTrafficMirrorSessions(
        this,
        "ids",
        {
          ids: ["example_id"],
        }
      );
    const dataAlicloudVpcTrafficMirrorSessionsNameRegex =
      new alicloud.dataAlicloudVpcTrafficMirrorSessions.DataAlicloudVpcTrafficMirrorSessions(
        this,
        "nameRegex",
        {
          nameRegex: "^my-TrafficMirrorSession",
        }
      );
    const dataAlicloudVpcTrafficMirrorSessionsPriority =
      new alicloud.dataAlicloudVpcTrafficMirrorSessions.DataAlicloudVpcTrafficMirrorSessions(
        this,
        "priority",
        {
          ids: ["example_id"],
          priority: cdktf.Token.asNumber("1"),
        }
      );
    const dataAlicloudVpcTrafficMirrorSessionsSessionName =
      new alicloud.dataAlicloudVpcTrafficMirrorSessions.DataAlicloudVpcTrafficMirrorSessions(
        this,
        "sessionName",
        {
          ids: ["example_id"],
          trafficMirrorSessionName: "example_value",
        }
      );
    const dataAlicloudVpcTrafficMirrorSessionsSourceId =
      new alicloud.dataAlicloudVpcTrafficMirrorSessions.DataAlicloudVpcTrafficMirrorSessions(
        this,
        "sourceId",
        {
          ids: ["example_id"],
          trafficMirrorSourceId: "example_value",
        }
      );
    const dataAlicloudVpcTrafficMirrorSessionsStatus =
      new alicloud.dataAlicloudVpcTrafficMirrorSessions.DataAlicloudVpcTrafficMirrorSessions(
        this,
        "status",
        {
          ids: ["example_id"],
          status: "Created",
        }
      );
    const dataAlicloudVpcTrafficMirrorSessionsTargetId =
      new alicloud.dataAlicloudVpcTrafficMirrorSessions.DataAlicloudVpcTrafficMirrorSessions(
        this,
        "targetId",
        {
          ids: ["example_id"],
          trafficMirrorTargetId: "example_value",
        }
      );
    new cdktf.TerraformOutput(this, "vpc_traffic_mirror_session_id_1", {
      value: cdktf.propertyAccess(
        dataAlicloudVpcTrafficMirrorSessionsIds.sessions,
        ["0", "id"]
      ),
    });
    new cdktf.TerraformOutput(this, "vpc_traffic_mirror_session_id_2", {
      value: cdktf.propertyAccess(
        dataAlicloudVpcTrafficMirrorSessionsNameRegex.sessions,
        ["0", "id"]
      ),
    });
    new cdktf.TerraformOutput(this, "vpc_traffic_mirror_session_id_3", {
      value: cdktf.propertyAccess(
        dataAlicloudVpcTrafficMirrorSessionsEnabled.sessions,
        ["0", "id"]
      ),
    });
    new cdktf.TerraformOutput(this, "vpc_traffic_mirror_session_id_4", {
      value: cdktf.propertyAccess(
        dataAlicloudVpcTrafficMirrorSessionsPriority.sessions,
        ["0", "id"]
      ),
    });
    new cdktf.TerraformOutput(this, "vpc_traffic_mirror_session_id_5", {
      value: cdktf.propertyAccess(
        dataAlicloudVpcTrafficMirrorSessionsFilterId.sessions,
        ["0", "id"]
      ),
    });
    new cdktf.TerraformOutput(this, "vpc_traffic_mirror_session_id_6", {
      value: cdktf.propertyAccess(
        dataAlicloudVpcTrafficMirrorSessionsSessionName.sessions,
        ["0", "id"]
      ),
    });
    new cdktf.TerraformOutput(this, "vpc_traffic_mirror_session_id_7", {
      value: cdktf.propertyAccess(
        dataAlicloudVpcTrafficMirrorSessionsSourceId.sessions,
        ["0", "id"]
      ),
    });
    new cdktf.TerraformOutput(this, "vpc_traffic_mirror_session_id_8", {
      value: cdktf.propertyAccess(
        dataAlicloudVpcTrafficMirrorSessionsTargetId.sessions,
        ["0", "id"]
      ),
    });
    new cdktf.TerraformOutput(this, "vpc_traffic_mirror_session_id_9", {
      value: cdktf.propertyAccess(
        dataAlicloudVpcTrafficMirrorSessionsStatus.sessions,
        ["0", "id"]
      ),
    });
  }
}

```

## Argument Reference

The following arguments are supported:

* `enabled` - (Optional, ForceNew) Specifies whether to enable traffic mirror sessions. default to `false`.
* `ids` - (Optional, ForceNew, Computed)  A list of Traffic Mirror Session IDs.
* `nameRegex` - (Optional, ForceNew) A regex string to filter results by Traffic Mirror Session name.
* `outputFile` - (Optional) File name where to save data source results (after running `terraform plan`).
* `priority` - (Optional, ForceNew) The priority of the traffic mirror session. Valid values: `1` to `32766`. A smaller value indicates a higher priority. You cannot specify the same priority for traffic mirror sessions that are created in the same region with the same Alibaba Cloud account.
* `status` - (Optional, ForceNew) The state of the traffic mirror session. Valid values: `creating`, `created`, `modifying` and `deleting`.
* `trafficMirrorFilterId` - (Optional, ForceNew) The ID of the filter.
* `trafficMirrorSessionName` - (Optional, ForceNew) The name of the traffic mirror session. The name must be `2` to `128` characters in length and can contain digits, underscores (_), and hyphens (-). It must start with a letter.
* `trafficMirrorSourceId` - (Optional, ForceNew) The ID of the mirror source. You can specify only an elastic network interface (ENI) as the mirror source.
* `trafficMirrorTargetId` - (Optional, ForceNew) The ID of the mirror destination. You can specify only an ENI or a Server Load Balancer (SLB) instance as a mirror destination.

## Argument Reference

The following attributes are exported in addition to the arguments listed above:

* `names` - A list of Traffic Mirror Session names.
* `sessions` - A list of Vpc Traffic Mirror Sessions. Each element contains the following attributes:
	* `enabled` - Indicates whether traffic mirror sessions are enabled. default to `false`.
	* `id` - The ID of the Traffic Mirror Session.
	* `packetLength` - The maximum transmission unit (MTU).
	* `priority` - The priority of the traffic mirror session. A smaller value indicates a higher priority.
	* `status` - The state of the traffic mirror session. Valid values: `creating`, `created`, `modifying` and `deleting`.
	* `trafficMirrorFilterId` - The ID of the filter.
	* `trafficMirrorSessionBusinessStatus` - The state of the traffic mirror session. Valid values: `normal` or `financialLocked`. `normal`: working as expected. `financialLocked`: locked due to overdue payments.
	* `trafficMirrorSessionDescription` - The description of the traffic mirror session.
	* `trafficMirrorSessionId` - The first ID of the resource.
	* `trafficMirrorSessionName` - The name of the traffic mirror session.
	* `trafficMirrorSourceIds` - The ID of the mirror source.
	* `trafficMirrorTargetId` - The ID of the mirror destination. You can specify only an ENI or a Server Load Balancer (SLB) instance as a mirror destination.
	* `trafficMirrorTargetType` - The type of the mirror destination. Valid values: `networkInterface` or `slb`. `networkInterface`: an ENI. `slb`: an internal-facing SLB instance
	* `virtualNetworkId` - You can specify VNIs to distinguish different mirrored traffic.

<!-- cache-key: cdktf-0.17.0-pre.15 input-dd192747b8209e4064d51d21b207f78b352730747a21dde826de7c623ebbddb6 -->