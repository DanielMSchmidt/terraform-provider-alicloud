---
subcategory: "ROS"
layout: "alicloud"
page_title: "Alicloud: alicloud_ros_template_scratches"
sidebar_current: "docs-alicloud-datasource-ros-template-scratches"
description: |-
  Provides a list of Ros Template Scratches to the user.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_ros\_template\_scratches

This data source provides the Ros Template Scratches of the current Alibaba Cloud user.

-> **NOTE:** Available in v1.151.0+.

## Example Usage

Basic Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const dataAlicloudRosTemplateScratchesIds =
      new alicloud.dataAlicloudRosTemplateScratches.DataAlicloudRosTemplateScratches(
        this,
        "ids",
        {
          ids: ["example_value"],
        }
      );
    const dataAlicloudRosTemplateScratchesStatus =
      new alicloud.dataAlicloudRosTemplateScratches.DataAlicloudRosTemplateScratches(
        this,
        "status",
        {
          status: "GENERATE_COMPLETE",
        }
      );
    const dataAlicloudRosTemplateScratchesTemplateScratchType =
      new alicloud.dataAlicloudRosTemplateScratches.DataAlicloudRosTemplateScratches(
        this,
        "templateScratchType",
        {
          templateScratchType: "ResourceImport",
        }
      );
    new cdktf.TerraformOutput(this, "ros_template_scratch_id_1", {
      value: cdktf.propertyAccess(
        dataAlicloudRosTemplateScratchesIds.scratches,
        ["0", "id"]
      ),
    });
    new cdktf.TerraformOutput(this, "ros_template_scratch_id_2", {
      value: cdktf.propertyAccess(
        dataAlicloudRosTemplateScratchesStatus.scratches,
        ["0", "id"]
      ),
    });
    new cdktf.TerraformOutput(this, "ros_template_scratch_id_3", {
      value: cdktf.propertyAccess(
        dataAlicloudRosTemplateScratchesTemplateScratchType.scratches,
        ["0", "id"]
      ),
    });
  }
}

```

## Argument Reference

The following arguments are supported:

* `enableDetails` - (Optional) Default to `false`. Set it to `true` can output more details about resource attributes.
* `ids` - (Optional, ForceNew, Computed)  A list of Template Scratch IDs.
* `outputFile` - (Optional) File name where to save data source results (after running `terraform plan`).
* `status` - (Optional, ForceNew) The status of the resource. Valid Values: `generateInProgress`, `generateComplete` and `generateFailed`.
* `templateScratchType` - (Optional, ForceNew) The type of the template scratch. Valid Values: `resourceImport`, `architectureReplication`.

## Argument Reference

The following attributes are exported in addition to the arguments listed above:

* `scratches` - A list of Ros Template Scratches. Each element contains the following attributes:
  * `createTime` - The creation time of the resource.
  * `description` - The description of the Template Scratch.
  * `id` - The ID of the Template Scratch.
  * `logicalIdStrategy` - The Logical ID generation strategy of the Template Scratch.
  * `preferenceParameters` - Priority parameter.
    * `parameterKey` - Priority parameter key.
    * `parameterValue` - Priority parameter value.
  * `sourceTag` - The Source label list.
    * `resourceTags` - Source label.
    * `resourceTypeFilter` - Source resource type filter list.
  * `sourceResourceGroup` - Source resource grouping.
    * `resourceTypeFilter` - Source resource type filter list.
    * `resourceGroupId` - The ID of the Source Resource Group.
  * `sourceResources` - Source resource.
    * `resourceId` - The ID of the Source Resource.
    * `resourceType` - The type of the Source resource.
  * `stacks` - A list of resource stacks associated with the resource scene.
    * `stackId` - The ID of the Resource stack.
  * `status` - The status of the resource.
  * `templateScratchId` - The ID of the Template Scratch.
  * `templateScratchType` - The type of the Template Scratch.
<!-- cache-key: cdktf-0.17.0-pre.15 input-c0a5c359080e2c0f73e3f122a9c73ed03c2a1fdc1475fecefe4f19a79a8a7340 -->