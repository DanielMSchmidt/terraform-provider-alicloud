---
subcategory: "DMS Enterprise"
layout: "alicloud"
page_title: "Alicloud: alicloud_dms_enterprise_instances"
sidebar_current: "docs-alicloud-datasource-dms-enterprise-instances"
description: |-
    Provides a list of available DMS Enterprise Instances.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_dms\_enterprise\_instances

This data source provides a list of DMS Enterprise Instances in an Alibaba Cloud account according to the specified filters.

-> **NOTE:** Available in 1.88.0+

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const dataAlicloudDmsEnterpriseInstancesDmsEnterpriseInstancesDs =
      new alicloud.dataAlicloudDmsEnterpriseInstances.DataAlicloudDmsEnterpriseInstances(
        this,
        "dms_enterprise_instances_ds",
        {
          envType: "test",
          instanceType: "mysql",
          nameRegex: "tf_testAcc",
          netType: "CLASSIC",
          outputFile: "dms_enterprise_instances.json",
        }
      );
    new cdktf.TerraformOutput(this, "first_database_instance_id", {
      value: cdktf.propertyAccess(
        dataAlicloudDmsEnterpriseInstancesDmsEnterpriseInstancesDs.instances,
        ["0", "instance_id"]
      ),
    });
  }
}

```

## Argument Reference

The following arguments are supported:

* `status` - (Optional) Filter the results by status of the DMS Enterprise Instances. Valid values: `normal`, `unavailable`, `unknown`, `deleted`, `disable`.
* `envType` - (Optional) The type of the environment to which the database instance belongs.
* `instanceSource` - (Optional) The source of the database instance.
* `instanceState` - (Optional) The status of the database instance.
* `netType` - (Optional) The network type of the database instance. Valid values: CLASSIC and VPC. For more information about the valid values, see the description of the RegisterInstance operation.
* `searchKey` - (Optional) The keyword used to query database instances.
* `tid` - (Optional) The ID of the tenant in Data Management (DMS) Enterprise.
* `nameRegex` - (Optional, Available in v1.100.0+) A regex string to filter the results by the DMS Enterprise Instance instance_alias.
* `instanceAliasRegex` - (Optional) A regex string to filter the results by the DMS Enterprise Instance instance_alias.
* `outputFile` - (Optional) File name where to save data source results (after running `terraform plan`).

## Attributes Reference

The following attributes are exported in addition to the arguments listed above:
* `ids` - A list of DMS Enterprise IDs (Each of them consists of host:port).
* `names` - A list of DMS Enterprise names.
* `instances` - A list of KMS keys. Each element contains the following attributes:
  * `dataLinkName` - The name of the data link for the database instance.
  * `databasePassword` - The logon password of the database instance.
  * `databaseUser` - The logon username of the database instance.
  * `dbaId` - The ID of the database administrator (DBA) of the database instance.
  * `dbaNickName` - The nickname of the DBA.
  * `ddlOnline` - Indicates whether the online data description language (DDL) service was enabled for the database instance.
  * `ecsInstanceId` - The ID of the Elastic Compute Service (ECS) instance to which the database instance belongs.
  * `ecsRegion` - The region where the database instance resides.
  * `envType` - The type of the environment to which the database instance belongs..
  * `exportTimeout` - The timeout period for exporting the database instance.
  * `host` - The endpoint of the database instance.
  * `instanceAlias` - The alias of the database instance.
  * `instanceId` - The ID of the database instance.
  * `instanceSource` - The ID of the database instance.
  * `instanceType` - The ID of the database instance.
  * `port` - The connection port of the database instance.
  * `queryTimeout` - The timeout period for querying the database instance.
  * `safeRuleId` - The ID of the security rule for the database instance.
  * `sid` - The system ID (SID) of the database instance.
  * `status` - The status of the database instance.
  * `useDsql` - Indicates whether cross-database query was enabled for the database instance.
  * `vpcId` - The ID of the Virtual Private Cloud (VPC) to which the database instance belongs.

<!-- cache-key: cdktf-0.17.0-pre.15 input-ce36a856872de903e354f59ec28bde532914b54c9d31d0ed9f8044db0afe3ae5 -->