---
subcategory: "RabbitMQ (AMQP)"
layout: "alicloud"
page_title: "Alicloud: alicloud_amqp_exchanges"
sidebar_current: "docs-alicloud-datasource-amqp-exchanges"
description: |-
  Provides a list of Amqp Exchanges to the user.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_amqp\_exchanges

This data source provides the Amqp Exchanges of the current Alibaba Cloud user.

-> **NOTE:** Available in v1.128.0+.

## Example Usage

Basic Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const dataAlicloudAmqpExchangesIds =
      new alicloud.dataAlicloudAmqpExchanges.DataAlicloudAmqpExchanges(
        this,
        "ids",
        {
          ids: ["my-Exchange-1", "my-Exchange-2"],
          instanceId: "amqp-abc12345",
          virtualHostName: "my-VirtualHost",
        }
      );
    const dataAlicloudAmqpExchangesNameRegex =
      new alicloud.dataAlicloudAmqpExchanges.DataAlicloudAmqpExchanges(
        this,
        "nameRegex",
        {
          instanceId: "amqp-abc12345",
          nameRegex: "^my-Exchange",
          virtualHostName: "my-VirtualHost",
        }
      );
    new cdktf.TerraformOutput(this, "amqp_exchange_id_1", {
      value: cdktf.propertyAccess(dataAlicloudAmqpExchangesIds.exchanges, [
        "0",
        "id",
      ]),
    });
    new cdktf.TerraformOutput(this, "amqp_exchange_id_2", {
      value: cdktf.propertyAccess(
        dataAlicloudAmqpExchangesNameRegex.exchanges,
        ["0", "id"]
      ),
    });
  }
}

```

## Argument Reference

The following arguments are supported:

* `ids` - (Optional, ForceNew, Computed)  A list of Exchange IDs. Its element value is same as Exchange Name.
* `instanceId` - (Required, ForceNew) The ID of the instance.
* `nameRegex` - (Optional, ForceNew) A regex string to filter results by Exchange name.
* `outputFile` - (Optional) File name where to save data source results (after running `terraform plan`).
* `virtualHostName` - (Required, ForceNew) The name of virtual host where an exchange resides.

## Argument Reference

The following attributes are exported in addition to the arguments listed above:

* `names` - A list of Exchange names.
* `exchanges` - A list of Amqp Exchanges. Each element contains the following attributes:
	* `attributes` - The attributes.
	* `autoDeleteState` - Indicates whether the Auto Delete attribute is configured.
	* `createTime` - The creation time.
	* `exchangeName` - The name of the exchange.
	* `exchangeType` - The type of the exchange.
	* `id` - The ID of the Exchange. Its value is same as Queue Name.
	* `instanceId` - The ID of the instance.
	* `virtualHostName` - The name of virtual host where an exchange resides.

<!-- cache-key: cdktf-0.17.0-pre.15 input-d997eb206c14e606881e2eadd0060aab88b50eff6e88dec04e524088c07aa470 -->