---
subcategory: "Bastion Host"
layout: "alicloud"
page_title: "Alicloud: alicloud_bastionhost_hosts"
sidebar_current: "docs-alicloud-datasource-bastionhost-hosts"
description: |-
  Provides a list of Bastionhost Hosts to the user.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_bastionhost\_hosts

This data source provides the Bastionhost Hosts of the current Alibaba Cloud user.

-> **NOTE:** Available in v1.135.0+.

## Example Usage

Basic Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const dataAlicloudBastionhostHostsIds =
      new alicloud.dataAlicloudBastionhostHosts.DataAlicloudBastionhostHosts(
        this,
        "ids",
        {
          ids: ["1", "2"],
          instanceId: "example_value",
        }
      );
    const dataAlicloudBastionhostHostsNameRegex =
      new alicloud.dataAlicloudBastionhostHosts.DataAlicloudBastionhostHosts(
        this,
        "nameRegex",
        {
          instanceId: "example_value",
          nameRegex: "^my-Host",
        }
      );
    new cdktf.TerraformOutput(this, "bastionhost_host_id_1", {
      value: cdktf.propertyAccess(dataAlicloudBastionhostHostsIds.hosts, [
        "0",
        "id",
      ]),
    });
    new cdktf.TerraformOutput(this, "bastionhost_host_id_2", {
      value: cdktf.propertyAccess(dataAlicloudBastionhostHostsNameRegex.hosts, [
        "0",
        "id",
      ]),
    });
  }
}

```

## Argument Reference

The following arguments are supported:

* `enableDetails` - (Optional) Default to `false`. Set it to `true` can output more details about resource attributes.
* `hostAddress` - (Optional, ForceNew) The host address.
* `hostName` - (Optional, ForceNew) Specify the new create a host name of the supports up to 128 characters.
* `ids` - (Optional, ForceNew, Computed)  A list of Host IDs.
* `instanceId` - (Required, ForceNew) Specify the new create a host where the Bastion host ID of.
* `nameRegex` - (Optional, ForceNew) A regex string to filter results by Host name.
* `osType` - (Optional, ForceNew) Specify the new create the host's operating system. Valid values: Linux Windows.
* `outputFile` - (Optional) File name where to save data source results (after running `terraform plan`).
* `source` - (Optional, ForceNew) Specify the new create a host of source. Valid values: Local: localhost Ecs:ECS instance Rds:RDS exclusive cluster host.
* `sourceInstanceId` - (Optional, ForceNew) Specify the newly created ECS instance ID or dedicated cluster host ID.
* `sourceInstanceState` - (Optional, ForceNew) The source instance state.

## Argument Reference

The following attributes are exported in addition to the arguments listed above:

* `names` - A list of Host names.
* `hosts` - A list of Bastionhost Hosts. Each element contains the following attributes:
	* `activeAddressType` - Specify the new create a host of address types. Valid values: Public: the IP address of a Public network Private: Private network address.
	* `comment` - Specify a host of notes, supports up to 500 characters.
	* `hostId` - The host ID.
	* `hostName` - Specify the new create a host name of the supports up to 128 characters.
	* `hostPrivateAddress` - Specify the new create a host of the private network address, it is possible to use the domain name or IP ADDRESS.
	* `hostPublicAddress` - Specify the new create a host of the IP address of a public network, it is possible to use the domain name or IP ADDRESS.
	* `id` - The ID of the Host.
	* `instanceId` - Specify the new create a host where the Bastion host ID of.
	* `osType` - Specify the new create the host's operating system. Valid values: Linux Windows.
	* `protocols` - The host of the protocol information.
		* `hostFingerPrint` - Host fingerprint information, it is possible to uniquely identify a host.
		* `port` - Host the service port of the RDS.
		* `protocolName` - The host uses the protocol name. 
	* `source` - Specify the new create a host of source. Valid values: Local: localhost Ecs:ECS instance Rds:RDS exclusive cluster host.
	* `sourceInstanceId` - Specify the newly created ECS instance ID or dedicated cluster host ID.

<!-- cache-key: cdktf-0.17.0-pre.15 input-dff459b859b0444a0bcfa61b4add7ce455f9655bd7353dd9ae9e857dde65daf6 -->