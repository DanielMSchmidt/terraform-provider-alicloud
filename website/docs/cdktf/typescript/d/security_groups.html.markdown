---
subcategory: "ECS"
layout: "alicloud"
page_title: "Alicloud: alicloud_security_groups"
sidebar_current: "docs-alicloud-datasource-security-groups"
description: |-
    Provides a list of Security Groups available to the user.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_security\_groups

This data source provides a list of Security Groups in an Alibaba Cloud account according to the specified filters.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const alicloudVpcPrimaryVpcDs = new alicloud.vpc.Vpc(
      this,
      "primary_vpc_ds",
      {}
    );
    const dataAlicloudSecurityGroupsPrimarySecGroupsDs =
      new alicloud.dataAlicloudSecurityGroups.DataAlicloudSecurityGroups(
        this,
        "primary_sec_groups_ds",
        {
          vpcId: cdktf.Token.asString(alicloudVpcPrimaryVpcDs.id),
        }
      );
    new alicloud.dataAlicloudSecurityGroups.DataAlicloudSecurityGroups(
      this,
      "sec_groups_ds",
      {
        nameRegex: "^web-",
        outputFile: "web_access.json",
      }
    );
    new cdktf.TerraformOutput(this, "first_group_id", {
      value: cdktf.propertyAccess(
        dataAlicloudSecurityGroupsPrimarySecGroupsDs.groups,
        ["0", "id"]
      ),
    });
  }
}

```

## Argument Reference

The following arguments are supported:

* `ids` - (Optional, Available 1.52.0+) A list of Security Group IDs.
* `nameRegex` - (Optional) A regex string to filter the resulting security groups by their names.
* `vpcId` - (Optional) Used to retrieve security groups that belong to the specified VPC ID.
* `resourceGroupId` - (Optional, ForceNew, Available in 1.58.0+) The Id of resource group which the security_group belongs.
* `outputFile` - (Optional) File name where to save data source results (after running `terraform plan`).
* `tags` - (Optional) A map of tags assigned to the ECS instances. It must be in the format:
  ```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    new alicloud.dataAlicloudSecurityGroups.DataAlicloudSecurityGroups(
      this,
      "taggedSecurityGroups",
      {
        tags: {
          tagKey1: "tagValue1",
          tagKey2: "tagValue2",
        },
      }
    );
  }
}

```

## Attributes Reference

The following attributes are exported in addition to the arguments listed above:

* `ids` - A list of Security Group IDs.
* `names` - A list of Security Group names.
* `groups` - A list of Security Groups. Each element contains the following attributes:
  * `id` - The ID of the security group.
  * `name` - The name of the security group.
  * `description` - The description of the security group.
  * `vpcId` - The ID of the VPC that owns the security group.
  * `resourceGroupId` - The Id of resource group which the security_group belongs.
  * `securityGroupType` - The type of the security group.
  * `innerAccess` - Whether to allow inner network access.
  * `creationTime` - Creation time of the security group.
  * `tags` - A map of tags assigned to the ECS instance.

<!-- cache-key: cdktf-0.17.0-pre.15 input-e3b08e05c848a78b193ee246eb9aeb92a25926cabb8a356f71dc70d673a82b4c -->