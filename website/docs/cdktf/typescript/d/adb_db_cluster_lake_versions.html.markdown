---
subcategory: "AnalyticDB for MySQL (ADB)"
layout: "alicloud"
page_title: "Alicloud: alicloud_adb_db_cluster_lake_versions"
sidebar_current: "docs-alicloud-datasource-adb-db-cluster-lake-versions"
description: |-
  Provides a list of Adb DBCluster Lake Versions to the user.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_adb\_db\_cluster\_lake\_versions

This data source provides the Adb DBCluster Lake Versions of the current Alibaba Cloud user.

-> **NOTE:** Available in v1.190.0+.

## Example Usage

Basic Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const dataAlicloudAdbDbClusterLakeVersionsIds =
      new alicloud.dataAlicloudAdbDbClusterLakeVersions.DataAlicloudAdbDbClusterLakeVersions(
        this,
        "ids",
        {
          ids: ["example_id"],
        }
      );
    new cdktf.TerraformOutput(this, "adb_db_cluster_lake_version_id_1", {
      value: cdktf.propertyAccess(
        dataAlicloudAdbDbClusterLakeVersionsIds.versions,
        ["0", "id"]
      ),
    });
  }
}

```

## Argument Reference

The following arguments are supported:

* `enableDetails` - (Optional) Default to `false`. Set it to `true` can output more details about resource attributes.
* `ids` - (Optional, ForceNew, Computed)  A list of DBCluster IDs.
* `outputFile` - (Optional) File name where to save data source results (after running `terraform plan`).
* `resourceGroupId` - (Optional, ForceNew) The ID of the resource group.
* `status` - (Optional, ForceNew) The status of the resource. Valid values: `preparing`, `creating`, `restoring`, `running`, `deleting`, `classChanging`, `netAddressCreating`, `netAddressDeleting`.

## Argument Reference

The following attributes are exported in addition to the arguments listed above:

* `versions` - A list of Adb Db Clusters. Each element contains the following attributes:
	* `id` - The ID of the DBCluster.
	* `dbClusterId` - The ID of the DBCluster.
	* `commodityCode` - The name of the service.
	* `computeResource` - The specifications of computing resources in elastic mode. The increase of resources can speed up queries.
	* `connectionString` - The endpoint of the cluster.
	* `createTime` - The CreateTime of the ADB cluster.
	* `dbClusterVersion` - The db cluster version.
	* `engine` - The engine of the database.
	* `engineVersion` - The engine version of the database.
	* `expireTime` - The time when the cluster expires.
	* `expired` - Indicates whether the cluster has expired.
	* `lockMode` - The lock mode of the cluster.
	* `lockReason` - The reason why the cluster is locked.
	* `paymentType` - The payment type of the resource.
	* `port` - The port that is used to access the cluster.
	* `status` - The status of the resource.
	* `storageResource` - The specifications of storage resources in elastic mode. The resources are used for data read and write operations.
	* `vpcId` - The vpc id.
	* `vswitchId` - The vswitch id.
	* `zoneId` - The zone ID  of the resource.
	* `resourceGroupId` - The ID of the resource group.
<!-- cache-key: cdktf-0.17.0-pre.15 input-9fcb842679abf16c891250d67855c30a9fb527e79c91193d260490ad8f12d9ce -->