---
subcategory: "AliKafka"
layout: "alicloud"
page_title: "Alicloud: alicloud_alikafka_consumer_groups"
sidebar_current: "docs-alicloud-datasource-alikafka-consumer-groups"
description: |-
    Provides a list of alikafka consumer groups available to the user.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_alikakfa\_consumer\_groups

This data source provides a list of ALIKAFKA Consumer Groups in an Alibaba Cloud account according to the specified filters.

-> **NOTE:** Available in 1.56.0+

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const dataAlicloudAlikafkaConsumerGroupsConsumerGroupsDs =
      new alicloud.dataAlicloudAlikafkaConsumerGroups.DataAlicloudAlikafkaConsumerGroups(
        this,
        "consumer_groups_ds",
        {
          consumerIdRegex: "CID-alikafkaGroupDatasourceName",
          instanceId: "xxx",
          outputFile: "consumerGroups.txt",
        }
      );
    new cdktf.TerraformOutput(this, "first_group_name", {
      value: cdktf.propertyAccess(
        dataAlicloudAlikafkaConsumerGroupsConsumerGroupsDs.consumerIds,
        ["0"]
      ),
    });
  }
}

```

## Argument Reference

The following arguments are supported:

* `ids` - (Optional, ForceNew, Computed)  A list of ALIKAFKA Consumer Groups IDs, It is formatted to `<instance_id>:<consumer_id>`.
* `instanceId` - (Required) ID of the ALIKAFKA Instance that owns the consumer groups.
* `consumerIdRegex` - (Optional) A regex string to filter results by the consumer group id. 
* `outputFile` - (Optional) File name where to save data source results (after running `terraform plan`).

## Attributes Reference

The following attributes are exported in addition to the arguments listed above:

* `names` - A list of consumer group names.
* `groups` - A list of consumer group. Each element contains the following attributes:
    * `id` - The ID of the consumer group, It is formatted to `<instance_id>:<consumer_id>`.
    * `consumerId` - The name of the consumer group.
    * `remark` - The remark of the consumer group.
    * `instanceId` - The instance_id of the instance.
    * `tags` - A mapping of tags to assign to the consumer group.

<!-- cache-key: cdktf-0.17.0-pre.15 input-c3be732169ae0d7143144fb25f6bae9ccc8810ddbd3ff8c8d632d07edbc75bf4 -->