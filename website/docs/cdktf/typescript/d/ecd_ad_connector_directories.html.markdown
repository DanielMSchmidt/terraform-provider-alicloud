---
subcategory: "Elastic Desktop Service (ECD)"
layout: "alicloud"
page_title: "Alicloud: alicloud_ecd_ad_connector_directories"
sidebar_current: "docs-alicloud-datasource-ecd-ad-connector-directories"
description: |-
  Provides a list of Ecd Ad Connector Directories to the user.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_ecd\_ad\_connector\_directories

This data source provides the Ecd Ad Connector Directories of the current Alibaba Cloud user.

-> **NOTE:** Available in v1.174.0+.

## Example Usage

Basic Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const dataAlicloudEcdAdConnectorDirectoriesIds =
      new alicloud.dataAlicloudEcdAdConnectorDirectories.DataAlicloudEcdAdConnectorDirectories(
        this,
        "ids",
        {
          ids: ["example_id"],
        }
      );
    new cdktf.TerraformOutput(this, "ecd_ad_connector_directory_id_1", {
      value: cdktf.propertyAccess(
        dataAlicloudEcdAdConnectorDirectoriesIds.directories,
        ["0", "id"]
      ),
    });
  }
}

```

## Argument Reference

The following arguments are supported:

* `nameRegex` - (Optional, ForceNew) A regex string to filter results by Ad Connector Directory name.
* `ids` - (Optional, ForceNew, Computed)  A list of Ad Connector Directory IDs.
* `outputFile` - (Optional) File name where to save data source results (after running `terraform plan`).
* `status` - (Optional, ForceNew) The status of directory. Valid values: `registering`, `registered`, `deregistering`, `needconfigtrust`, `configtrustfailed`, `deregistered`, `error`, `configtrusting`, `needconfiguser`.

## Argument Reference

The following attributes are exported in addition to the arguments listed above:

* `names` - A list of Ecd Ad Connector Directory names.
* `directories` - A list of Ecd Ad Connector Directories. Each element contains the following attributes:
  * `adConnectorDirectoryId` - The ID of the ad connector directory.
  * `createTime` - The CreateTime of resource.
  * `customSecurityGroupId` - The ID of the security group.
  * `directoryName` - The name of directory.
  * `directoryType` - The name of the domain.
  * `dnsAddress` - The address of DNSAddress.
  * `dnsUserName` - The username of DNS.
  * `domainName` - The name of the domain.
  * `domainUserName` - domain admin user name.
  * `enableAdminAccess` - Whether to grant local administrator rights to users who use cloud desktops.
  * `id` - The ID of the Ad Connector Directory.
  * `mfaEnabled` - Whether MFA authentication is enabled. After all AD users in this directory log on to the cloud desktop, enter the correct password and then enter the dynamic verification code generated by the MFA device.
  * `status` - The status of directory.
  * `subDnsAddress` - The Enterprise already has the DNS address of the AD subdomain.
  * `subDomainName` - The Enterprise already has a fully qualified domain name (FQDN) of an AD subdomain, with both a host name and a domain name.
  * `trustPassword` - The trust password.
  * `vpcId` - The ID of the vpc.
  * `vswitchIds` - List of VSwitch IDs in the directory.
  * `adConnectors` - The AD connectors.
    * `adConnectorAddress` - The address of AD connector.
    * `connectorStatus` - The status of connector.
    * `networkInterfaceId` - The ID of the network interface.
    * `vswitchId` - The ID of VSwitch.
    * `trustKey` - The AD Connector control trust password.
    * `specification` - The AD Connector specifications.
<!-- cache-key: cdktf-0.17.0-pre.15 input-d4375a53979acfed53925943c2e3c42746120827f5018167418fc02dad799cf8 -->