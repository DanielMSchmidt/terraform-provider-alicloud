---
subcategory: "AliKafka"
layout: "alicloud"
page_title: "Alicloud: alicloud_alikafka_instances"
sidebar_current: "docs-alicloud-datasource-alikafka-instances"
description: |-
    Provides a list of alikafka instances available to the user.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_alikakfa\_instances

This data source provides a list of ALIKAFKA Instances in an Alibaba Cloud account according to the specified filters.

-> **NOTE:** Available in 1.59.0+

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    /*Terraform Variables are not always the best fit for getting inputs in the context of Terraform CDK.
    You can read more about this at https://cdk.tf/variables*/
    const instanceName = new cdktf.TerraformVariable(this, "instance_name", {
      default: "alikafkaInstanceName",
    });
    const alicloudVpcDefault = new alicloud.vpc.Vpc(this, "default", {
      cidrBlock: "172.16.0.0/12",
    });
    const dataAlicloudAlikafkaInstancesInstancesDs =
      new alicloud.dataAlicloudAlikafkaInstances.DataAlicloudAlikafkaInstances(
        this,
        "instances_ds",
        {
          nameRegex: "alikafkaInstanceName",
          outputFile: "instances.txt",
        }
      );
    const dataAlicloudZonesDefault =
      new alicloud.dataAlicloudZones.DataAlicloudZones(this, "default_3", {
        availableResourceCreation: "VSwitch",
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAlicloudZonesDefault.overrideLogicalId("default");
    new cdktf.TerraformOutput(this, "first_instance_name", {
      value: cdktf.propertyAccess(
        dataAlicloudAlikafkaInstancesInstancesDs.instances,
        ["0", "name"]
      ),
    });
    const alicloudVswitchDefault = new alicloud.vswitch.Vswitch(
      this,
      "default_5",
      {
        cidrBlock: "172.16.0.0/24",
        vpcId: cdktf.Token.asString(alicloudVpcDefault.id),
        zoneId: cdktf.Token.asString(
          cdktf.propertyAccess(dataAlicloudZonesDefault.zones, ["0", "id"])
        ),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudVswitchDefault.overrideLogicalId("default");
    const alicloudAlikafkaInstanceDefault =
      new alicloud.alikafkaInstance.AlikafkaInstance(this, "default_6", {
        deployType: cdktf.Token.asNumber("4"),
        diskSize: cdktf.Token.asNumber("500"),
        diskType: cdktf.Token.asNumber("1"),
        ioMax: cdktf.Token.asNumber("20"),
        name: instanceName.stringValue,
        partitionNum: cdktf.Token.asNumber("50"),
        vswitchId: cdktf.Token.asString(alicloudVswitchDefault.id),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudAlikafkaInstanceDefault.overrideLogicalId("default");
  }
}

```

## Argument Reference

The following arguments are supported:

* `ids` - (Optional) A list of instance IDs to filter results.
* `nameRegex` - (Optional) A regex string to filter results by the instance name. 
* `outputFile` - (Optional) File name where to save data source results (after running `terraform plan`).

## Attributes Reference

The following attributes are exported in addition to the arguments listed above:

* `ids` - A list of instance IDs.
* `names` - A list of instance names.
* `instances` - A list of instances. Each element contains the following attributes:
  * `id` - ID of the instance.
  * `name` - Name of the instance.
  * `createTime` - The create time of the instance.
  * `serviceStatus` - The current status of the instance. -1: unknown status, 0: wait deploy, 1: initializing, 2: preparing, 3 starting, 5: in service, 7: wait upgrade, 8: upgrading, 10: released, 15: freeze, 101: deploy error, 102: upgrade error. 
  * `deployType` - The deploy type of the instance. 0: sharing instance, 1: vpc instance, 2: vpc instance(support ip mapping), 3: eip instance, 4: eip/vpc instance, 5: vpc instance.
  * `vpcId` - The ID of attaching VPC to instance.
  * `vswitchId` - The ID of attaching vswitch to instance.
  * `ioMax` - The peak value of io of the instance.
  * `eipMax` - The peak bandwidth of the instance.
  * `diskType` - The disk type of the instance. 0: efficient cloud disk , 1: SSD.
  * `diskSize` - The disk size of the instance.
  * `partitionNum` - (Available in 1.194.0+) The number of partitions.
  * `topicQuota` - The max num of topic can be create of the instance.
  * `zoneId` - The ID of attaching zone to instance.
  * `endPoint` - The endPoint to access the instance.
  * `paidType` - The paid type of the instance.
  * `specType` - The spec type of the instance.
  * `securityGroup` - The security group of the instance.
  * `serviceVersion` - The kafka openSource version of the instance.
  * `config` - The config the instance.
  * `expiredTime` - The expired time  of the instance.
  * `msgRetain` - The msg retain of the instance.
  * `sslEndPoint` - The SSL end point of the instance.
  * `upgradeServiceDetailInfo` - The UpgradeServiceDetailInfo List.
    * `current2OpenSourceVersion` - The Current2OpenSourceVersion of the instance.
  * `domainEndpoint` - The domain point of the instance.
  * `sslDomainEndpoint` - The SSL domain point of the instance.
  * `saslDomainEndpoint` - The SASL domain point of the instance.
  * `tags` - A mapping of tags to assign to the instance.
  * `allowedList` - The allowed list of the instance.
    * `deployType` - The deployed type of the instance.
    * `vpcList` - The vpc list of the instance.
      * `allowedIpList` - The allowed ip list of the vpc_list.
      * `portRange` - The port range of the vpc_list.
    * `internetList` - The internet list of the instance.
      * `allowedIpList` - The allowed ip list of the internet_list.
      * `portRange` - The port range of the internet_list.
<!-- cache-key: cdktf-0.17.0-pre.15 input-b31a2357e2e62930a0bf255f9eba86878730c2796ee0fd1f2aefea4915a07d04 -->