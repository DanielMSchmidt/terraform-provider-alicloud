---
subcategory: "EDAS"
layout: "alicloud"
page_title: "Alicloud: alicloud_edas_applications"
sidebar_current: "docs-alicloud-datasource-edas-applications"
description: |-
    Provides a list of EDAS applications available to the user.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_edas\_applications

This data source provides a list of EDAS application in an Alibaba Cloud account according to the specified filters.

-> **NOTE:** Available in 1.82.0+

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const dataAlicloudEdasApplicationsApplications =
      new alicloud.dataAlicloudEdasApplications.DataAlicloudEdasApplications(
        this,
        "applications",
        {
          ids: ["xxx"],
          outputFile: "application.txt",
        }
      );
    new cdktf.TerraformOutput(this, "first_application_name", {
      value: cdktf.propertyAccess(
        dataAlicloudEdasApplicationsApplications.applications,
        ["0", "app_name"]
      ),
    });
  }
}

```

## Argument Reference

The following arguments are supported:

* `ids` - (Optional) An ids string to filter results by the application id. 
* `nameRegex` - (Optional) A regex string to filter results by the application name. 
* `outputFile` - (Optional) File name where to save data source results (after running `terraform plan`).

## Attributes Reference

The following attributes are exported in addition to the arguments listed above:
* `ids` - A list of application IDs.
* `names` - A list of applications names.
* `applications` - A list of applications.
  * `appName` - The name of your EDAS application. Only letters '-' '_' and numbers are allowed. The length cannot exceed 36 characters.
  * `appId` - The ID of the application that you want to deploy.
  * `applicationType` - The type of the package for the deployment of the application that you want to create. The valid values are: WAR and JAR. We strongly recommend you to set this parameter when creating the application.
  * `buildPackageId` - The package ID of Enterprise Distributed Application Service (EDAS) Container.
  * `clusterId` - The ID of the cluster that you want to create the application.
  * `clusterType` -  The type of the cluster that you want to create. Valid values: 1: Swarm cluster. 2: ECS cluster. 3: Kubernates cluster.
  * `regionId` - The ID of the namespace the application belongs to.


<!-- cache-key: cdktf-0.17.0-pre.15 input-498e62f39585736367de80da2ccd33eb6ac191dc0c1015e57a23f7f882c30966 -->