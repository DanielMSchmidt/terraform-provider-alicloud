---
subcategory: "Data Transmission Service (DTS)"
layout: "alicloud"
page_title: "Alicloud: alicloud_dts_synchronization_jobs"
sidebar_current: "docs-alicloud-datasource-dts-synchronization-jobs"
description: |-
  Provides a list of Dts Synchronization Jobs to the user.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_dts\_synchronization\_jobs

This data source provides the Dts Synchronization Jobs of the current Alibaba Cloud user.

-> **NOTE:** Available in v1.138.0+.

## Example Usage

Basic Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const dataAlicloudDtsSynchronizationJobsIds =
      new alicloud.dataAlicloudDtsSynchronizationJobs.DataAlicloudDtsSynchronizationJobs(
        this,
        "ids",
        {}
      );
    new cdktf.TerraformOutput(this, "dts_synchronization_job_id_1", {
      value: cdktf.propertyAccess(dataAlicloudDtsSynchronizationJobsIds.jobs, [
        "0",
        "id",
      ]),
    });
  }
}

```

## Argument Reference

The following arguments supported:

* `ids` - (Optional, ForceNew, Computed)  A list of Synchronization Job IDs.
* `nameRegex` - (Optional, ForceNew) A regex string to filter results by synchronization job name.
* `status` - (Optional, ForceNew) The status of the resource. Valid values: `synchronizing`, `suspending`. `downgrade`, `failed`, `finished`, `initializeFailed`, `locked`, `modifying`, `notConfigured`, `notStarted`, `preCheckPass`, `precheckFailed`, `prechecking`, `retrying`, `upgrade`.
* `outputFile` - (Optional) File name where to save data source results (after running `terraform plan`).

## Argument Reference

The following attributes are exported in addition to the arguments listed above:

* `jobs` - A list of Dts Synchronization Jobs. Each element contains the following attributes:
	* `id` - The ID of synchronizing instance. It's the ID of resource `alicloudDtsSynchronizationInstance`.
	* `synchronizationDirection` - Synchronization direction. Valid values: `forward`, `reverse`. Only when the property `syncArchitecture` of the `alicloudDtsSynchronizationInstance` was `bidirectional` this parameter should be passed, otherwise this parameter should not be specified.
	* `dtsJobName` - The name of synchronization job.
	* `checkpoint` - Start time in Unix timestamp format.
	* `dataInitialization` - Whether to execute DTS supports schema migration, full data migration, or full-data initialization.
	* `dataSynchronization` - Whether to perform incremental data migration for migration types or synchronization.
	* `structureInitialization` - Whether to perform a database table structure to migrate or initialization values include:
	* `dbList` - Migration object, in the format of JSON strings. For detailed definition instructions, please refer to [the description of migration, synchronization or subscription objects](https://help.aliyun.com/document_detail/209545.html).
	* `sourceEndpointInstanceType` - The type of source instance. Valid values: `cen`, `dg`, `distributedDmslogicdb`, `ecs`, `express`, `mongodb`, `other`, `polarDb`, `polardbx20`, `rds`.
	* `sourceEndpointEngineName` - The type of source database. Valid values: `as400`, `db2`, `dmspolardb`, `hbase`, `mongodb`, `mssql`, `mySql`, `oracle`, `polarDb`, `polardbx20`, `polardbO`, `postgresql`, `teradata`.
	* `sourceEndpointInstanceId` - The ID of source instance.
	* `sourceEndpointRegion` - The region of source instance.
	* `sourceEndpointIp` - The ip of source endpoint.
	* `sourceEndpointPort` - The port of source endpoint.
	* `sourceEndpointOracleSid` - The SID of Oracle database.
	* `sourceEndpointDatabaseName` - The name of migrate the database.
	* `sourceEndpointUserName` - The username of database account.
	* `sourceEndpointOwnerId` - The Alibaba Cloud account ID to which the source instance belongs.
	* `sourceEndpointRole` - The name of the role configured for the cloud account to which the source instance belongs.
	* `destinationEndpointInstanceType` - The type of destination instance. Valid values: `ads`, `cen`, `datahub`, `dg`, `ecs`, `express`, `greenplum`, `mongodb`, `other`, `polarDb`, `polardbx20`, `rds`.
	* `destinationEndpointEngineName` - The type of destination database. Valid values: `adb20`, `adb30`, `as400`, `datahub`, `db2`, `greenplum`, `kafka`, `mongodb`, `mssql`, `mySql`, `oracle`, `polarDb`, `polardbx20`, `polardbO`, `postgreSql`.
	* `destinationEndpointInstanceId` - The ID of destination instance.
	* `destinationEndpointRegion` - The region of destination instance.
	* `destinationEndpointIp` - The ip of source endpoint.
	* `destinationEndpointPort` - The port of source endpoint.
	* `destinationEndpointDataBaseName` - The name of migrate the database.
	* `destinationEndpointUserName` - The username of database account.
	* `destinationEndpointOracleSid` - The SID of Oracle database.
	* `status` - The status of the resource. Valid values: `synchronizing`, `suspending`. You can stop the task by specifying `suspending` and start the task by specifying `synchronizing`.

<!-- cache-key: cdktf-0.17.0-pre.15 input-c9505ec1cd7b38fb8daf51f669135f182c5377de2e11d6d329418cc0bd777ceb -->