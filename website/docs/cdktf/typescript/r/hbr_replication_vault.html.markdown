---
subcategory: "Hybrid Backup Recovery (HBR)"
layout: "alicloud"
page_title: "Alicloud: alicloud_hbr_replication_vault"
sidebar_current: "docs-alicloud-resource-hbr-replication-vault"
description: |-
  Provides a Alicloud Hybrid Backup Recovery (HBR) Replication Vault resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_hbr\_replication\_vault

Provides a Hybrid Backup Recovery (HBR) Replication Vault resource.

For information about Hybrid Backup Recovery (HBR) Replication Vault and how to use it, see [What is Replication Vault](https://www.alibabacloud.com/help/en/doc-detail/345603.html).

-> **NOTE:** Available in v1.152.0+.

## Example Usage

Basic Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    /*Terraform Variables are not always the best fit for getting inputs in the context of Terraform CDK.
    You can read more about this at https://cdk.tf/variables*/
    const name = new cdktf.TerraformVariable(this, "name", {
      default: "tf-testAccReplicationVault",
    });
    const regionSource = new cdktf.TerraformVariable(this, "region_source", {
      default: "you Replication value source region",
    });
    const dataAlicloudHbrReplicationVaultRegionsDefault =
      new alicloud.dataAlicloudHbrReplicationVaultRegions.DataAlicloudHbrReplicationVaultRegions(
        this,
        "default",
        {}
      );
    const alicloudSource = new alicloud.provider.AlicloudProvider(
      this,
      "alicloud",
      {
        alias: "source",
        region: regionSource.stringValue,
      }
    );
    const regionReplication = cdktf.propertyAccess(
      dataAlicloudHbrReplicationVaultRegionsDefault.regions,
      ["0", "replication_region_id"]
    );
    const alicloudHbrVaultDefault = new alicloud.hbrVault.HbrVault(
      this,
      "default_4",
      {
        provider: alicloudSource,
        vaultName: name.stringValue,
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudHbrVaultDefault.overrideLogicalId("default");
    const alicloudReplication = new alicloud.provider.AlicloudProvider(
      this,
      "alicloud_5",
      {
        alias: "replication",
        region: regionReplication,
      }
    );
    const alicloudHbrReplicationVaultDefault =
      new alicloud.hbrReplicationVault.HbrReplicationVault(this, "default_6", {
        description: name.stringValue,
        provider: alicloudReplication,
        replicationSourceRegionId: regionReplication,
        replicationSourceVaultId: cdktf.Token.asString(
          alicloudHbrVaultDefault.id
        ),
        vaultName: name.stringValue,
        vaultStorageClass: "STANDARD",
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudHbrReplicationVaultDefault.overrideLogicalId("default");
  }
}

```

## Argument Reference

The following arguments are supported:

* `description` - (Optional) The description of the backup vault. The description must be 0 to 255 characters in length.
* `replicationSourceRegionId` - (Required, ForceNew) The ID of the region where the source vault resides.
* `replicationSourceVaultId` - (Required, ForceNew) The ID of the source vault.
* `vaultName` - (Required) The name of the backup vault. The name must be 1 to 64 characters in length.
* `vaultStorageClass` - (Optional, Computed, ForceNew) The storage type of the backup vault. Valid values: `standard`.

## Attributes Reference

The following attributes are exported:

* `id` - The resource ID in terraform of Replication Vault.
* `status` - The status of the resource.

## Import

Hybrid Backup Recovery (HBR) Replication Vault can be imported using the id, e.g.

```shell
$ terraform import alicloud_hbr_replication_vault.example <id>
```
<!-- cache-key: cdktf-0.17.0-pre.15 input-0c315ebfde85f0e7e32521af82ae9fef8e6e68be5eb2b8d4c007eecd067e5128 -->