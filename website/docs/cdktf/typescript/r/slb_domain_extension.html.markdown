---
subcategory: "Classic Load Balancer (SLB)"
layout: "alicloud"
page_title: "Alicloud: alicloud_slb_domain_extension"
sidebar_current: "docs-alicloud-resource-slb-domain-extension"
description: |-
  Provides a Load Banlancer domain extension Resource and add it to one Listener.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_slb\_domain_extension

HTTPS listeners of guaranteed-performance SLB support configuring multiple certificates, allowing you to forward requests with different domain names to different backend servers.
Please refer to the [documentation](https://www.alibabacloud.com/help/doc-detail/85956.htm?spm=a2c63.p38356.b99.40.1c881563Co8p6w) for details.

-> **NOTE:** Available in 1.60.0+

-> **NOTE:** The instance with shared loadBalancerSpec doesn't support domainExtension.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    /*Terraform Variables are not always the best fit for getting inputs in the context of Terraform CDK.
    You can read more about this at https://cdk.tf/variables*/
    const slbDomainExtensionName = new cdktf.TerraformVariable(
      this,
      "slb_domain_extension_name",
      {
        default: "forDomainExtension",
      }
    );
    const alicloudSlbServerCertificateDomainExtension =
      new alicloud.slbServerCertificate.SlbServerCertificate(
        this,
        "domain_extension",
        {
          name: "tf-testAccSlbServerCertificate",
          privateKey:
            "-----BEGIN RSA PRIVATE KEY-----\nMIIEowIBAAKCAQEAyjCheapjf7qDI3R9w/Gj0XFDgNLPK2aWIRvM25BdY/IB2KAf\nxQ7zOxu3X1bMo2zMCzsSrwIVrxx0qRM/7e4AfkHcKwDIjCcBprQp164dhFol4GpT\nHtcuGv0+Ue6vpuE9cxQE3/pG5x1n5EhheFu2+lAaGh/vUrUPeQp6szX/9qfzn+/k\ntF8wsRV8PBiFc2ZNMRXupRyc2qtOn95r86w/uK6TuerU1L64E2P5+tYLBWT+39Ai\ndiUIenjURThFEn8Srvw8v/iLEMaKwiWNkOfWQH96166gzddOI8PT5cJy5an2c90T\nDgzegVo8RPK70bU9KjH7gH79YIwXVmTdIVGAUQIDAQABAoIBAE1J4a/8biR5S3/W\nG+03BYQeY8tuyjqw8FqfoeOcf9agwAvqybouSNQjeCk9qOQfxq/UWQQFK/zQR9gJ\nv7pX7GBXFK5rkj3g+0SaQhRsPmRFgY0Tl8qGPt2aSKRRNVv5ZeADmwlzRn86QmiF\nMp0rkfqFfDTYWEepZszCML0ouzuxsW/9tq7rvtSjsgATNt31B3vFa3D3JBi31jUh\n5nfR9A3bATze7mQw3byEDiVl5ASRDgYyur403P1fDnMy9DBHZ8NaPOsFF6OBpJal\nBJsG5z00hll5PFN2jfmBQKlvAeU7wfwqdaSnGHOfqf2DeTTaFjIQ4gUhRn/m6pLo\n6kXttLECgYEA9sng0Qz/TcPFfM4tQ1gyvB1cKnnGIwg1FP8sfUjbbEgjaHhA224S\nk3BxtX2Kq6fhTXuwusAFc6OVMAZ76FgrQ5K4Ci7+DTsrF28z4b8td+p+lO/DxgP9\nlTgN+ddsiTOV4fUef9Z3yY0Zr0CnBUMbQYRaV2UIbCdiB0G4V/bt9TsCgYEA0bya\nOo9wGI0RJV0bYP7qwO74Ra1/i1viWbRlS7jU37Q+AZstrlKcQ5CTPzOjKFKMiUzl\n4miWacZ0/q2n+Mvd7NbXGXTLijahnyOYKaHJYyh4oBymfkgAifRstE0Ki9gdvArb\n/I+emC0GvLSyfGN8UUeDJs4NmqdEXGqjo2JOV+MCgYALFv1MR5o9Y1u/hQBRs2fs\nPiGDIx+9OUQxYloccyaxEfjNXAIGGkcpavchIbgWiJ++PJ2vdquIC8TLeK8evL+M\n9M3iX0Q5UfxYvD2HmnCvn9D6Xl/cyRcfGnq+TGjrLW9BzSMGuZt+aiHKV0xqFx7l\nbc4leTvMqGRmURS4lzcQOwKBgQCDzA/i4sYfN25h21tcHXSpnsG3D2rJyQi5NCo/\nZjunA92/JqOTGuiFcLGHEszhhtY3ZXJET1LNz18vtzKJnpqrvOnYXlOVW/U+SqDQ\n8JDb1c/PVZGuY1KrXkR9HLiW3kz5IJ3S3PFdUVYdeTN8BQxXCyg4V12nJJtJs912\ny0zN3wKBgGDS6YttCN6aI4EOABYE8fI1EYQ7vhfiYsaWGWSR1l6bQey7KR6M1ACz\nZzMASNyytVt12yXE4/Emv6/pYqigbDLfL1zQJSLJ3EHJYTh2RxjR+AaGDudYFG/T\nliQ9YXhV5Iu2x1pNwrtFnssDdaaGpfA7l3xC00BL7Z+SAJyI4QKA\n-----END RSA PRIVATE KEY-----\n",
          serverCertificate:
            "-----BEGIN CERTIFICATE-----\nMIIDdjCCAl4CCQCcm+erkcKN7DANBgkqhkiG9w0BAQsFADB9MQswCQYDVQQGEwJj\nbjELMAkGA1UECAwCYmoxEDAOBgNVBAcMB2JlaWppbmcxDzANBgNVBAoMBmFsaXl1\nbjELMAkGA1UECwwCc2MxFTATBgNVBAMMDHd3dy50ZXN0LmNvbTEaMBgGCSqGSIb3\nDQEJARYLMTIzQDEyMy5jb20wHhcNMTkwNDI2MDM0ODAxWhcNMjQwNDI1MDM0ODAx\nWjB9MQswCQYDVQQGEwJjbjELMAkGA1UECAwCYmoxEDAOBgNVBAcMB2JlaWppbmcx\nDzANBgNVBAoMBmFsaXl1bjELMAkGA1UECwwCc2MxFTATBgNVBAMMDHd3dy50ZXN0\nLmNvbTEaMBgGCSqGSIb3DQEJARYLMTIzQDEyMy5jb20wggEiMA0GCSqGSIb3DQEB\nAQUAA4IBDwAwggEKAoIBAQDKMKF5qmN/uoMjdH3D8aPRcUOA0s8rZpYhG8zbkF1j\n8gHYoB/FDvM7G7dfVsyjbMwLOxKvAhWvHHSpEz/t7gB+QdwrAMiMJwGmtCnXrh2E\nWiXgalMe1y4a/T5R7q+m4T1zFATf+kbnHWfkSGF4W7b6UBoaH+9StQ95CnqzNf/2\np/Of7+S0XzCxFXw8GIVzZk0xFe6lHJzaq06f3mvzrD+4rpO56tTUvrgTY/n61gsF\nZP7f0CJ2JQh6eNRFOEUSfxKu/Dy/+IsQxorCJY2Q59ZAf3rXrqDN104jw9PlwnLl\nqfZz3RMODN6BWjxE8rvRtT0qMfuAfv1gjBdWZN0hUYBRAgMBAAEwDQYJKoZIhvcN\nAQELBQADggEBAABzo82TxGp5poVkd5pLWj5ACgcBv8Cs6oH9D+4Jz9BmyuBUsQXh\n2aG0hQAe1mU61C9konsl/GTW8umJQ4M4lYEztXXwMf5PlBMGwebM0ZbSGg6jKtZg\nWCgJ3eP/FMmyXGL5Jji5+e09eObhUDVle4tdi0On97zBoz85W02rgWFAqZJwiEAP\nt+c7jX7uOSBq2/38iGStlrX5yB1at/gJXXiA5CL5OtlR3Okvb0/QH37efO1Nu39m\nlFi0ODPAVyXjVypAiLguDxPn6AtDTdk9Iw9B19OD4NrzNRWgSSX5vuxo/VcRcgWk\n3gEe9Ca0ZKN20q9XgthAiFFjl1S9ZgdA6Zc=\n-----END CERTIFICATE-----\n",
        }
      );
    const alicloudVpcDomainExtension = new alicloud.vpc.Vpc(
      this,
      "domain_extension_2",
      {
        vpcName: slbDomainExtensionName.stringValue,
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudVpcDomainExtension.overrideLogicalId("domain_extension");
    const dataAlicloudZonesDomainExtension =
      new alicloud.dataAlicloudZones.DataAlicloudZones(
        this,
        "domain_extension_3",
        {
          availableResourceCreation: "VSwitch",
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAlicloudZonesDomainExtension.overrideLogicalId("domain_extension");
    const alicloudVswitchDomainExtension = new alicloud.vswitch.Vswitch(
      this,
      "domain_extension_4",
      {
        cidrBlock: "172.16.0.0/21",
        vpcId: cdktf.Token.asString(alicloudVpcDomainExtension.id),
        vswitchName: slbDomainExtensionName.stringValue,
        zoneId: cdktf.Token.asString(
          cdktf.propertyAccess(dataAlicloudZonesDomainExtension.zones, [
            "0",
            "id",
          ])
        ),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudVswitchDomainExtension.overrideLogicalId("domain_extension");
    const alicloudSlbLoadBalancerInstance =
      new alicloud.slbLoadBalancer.SlbLoadBalancer(this, "instance", {
        addressType: "intranet",
        loadBalancerName: slbDomainExtensionName.stringValue,
        loadBalancerSpec: "slb.s2.small",
        vswitchId: cdktf.Token.asString(alicloudVswitchDomainExtension.id),
      });
    const alicloudSlbListenerHttps = new alicloud.slbListener.SlbListener(
      this,
      "https",
      {
        backendPort: 80,
        bandwidth: 10,
        cookie: "testslblistenercookie",
        cookieTimeout: 86400,
        frontendPort: 443,
        healthCheck: "on",
        healthCheckConnectPort: 20,
        healthCheckHttpCode: "http_2xx,http_3xx",
        healthCheckInterval: 5,
        healthCheckTimeout: 8,
        healthCheckUri: "/cons",
        healthyThreshold: 8,
        loadBalancerId: cdktf.Token.asString(
          alicloudSlbLoadBalancerInstance.id
        ),
        protocol: "https",
        serverCertificateId: cdktf.Token.asString(
          alicloudSlbServerCertificateDomainExtension.id
        ),
        stickySession: "on",
        stickySessionType: "insert",
        unhealthyThreshold: 8,
      }
    );
    new alicloud.slbDomainExtension.SlbDomainExtension(this, "example1", {
      domain: "www.test.com",
      frontendPort: cdktf.Token.asNumber(alicloudSlbListenerHttps.frontendPort),
      loadBalancerId: cdktf.Token.asString(alicloudSlbLoadBalancerInstance.id),
      serverCertificateId: cdktf.Token.asString(
        alicloudSlbServerCertificateDomainExtension.id
      ),
    });
  }
}

```
## Argument Reference

The following arguments are supported:

* `loadBalancerId` - (Required, ForceNew) The ID of the SLB instance.
* `frontendPort` - (Required, ForceNew) The frontend port used by the HTTPS listener of the SLB instance. Valid values: 1â€“65535.
* `domain` - (Required, ForceNew) The domain name.
* `serverCertificateId` - (Required) The ID of the certificate used by the domain name.
* `deleteProtectionValidation` - (Optional, Available in 1.63.0+) Checking DeleteProtection of SLB instance before deleting. If true, this resource will not be deleted when its SLB instance enabled DeleteProtection. Default to false.

## Attributes Reference

The following attributes are exported:

* `id` - The ID of the domain extension.

## Import

Load balancer domain_extension can be imported using the id, e.g.

```shell
$ terraform import alicloud_slb_domain_extension.example de-abc123456
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-d470dc268ef59f883f4232d463ea4825c2bb2fd2df760b776b0d8e17fb6af38a -->