---
subcategory: "Elastic IP Address (EIP)"
layout: "alicloud"
page_title: "Alicloud: alicloud_eip_association"
sidebar_current: "docs-alicloud-resource-eip-association"
description: |-
  Provides a ECS EIP Association resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_eip\_association

Provides an Alicloud EIP Association resource for associating Elastic IP to ECS Instance, SLB Instance or Nat Gateway.

-> **NOTE:** `alicloudEipAssociation` is useful in scenarios where EIPs are either
 pre-existing or distributed to customers or users and therefore cannot be changed.

-> **NOTE:** From version 1.7.1, the resource support to associate EIP to SLB Instance or Nat Gateway.

-> **NOTE:** One EIP can only be associated with ECS or SLB instance which in the VPC.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const alicloudEipAddressEip = new alicloud.eipAddress.EipAddress(
      this,
      "eip",
      {}
    );
    const alicloudVpcVpc = new alicloud.vpc.Vpc(this, "vpc", {
      cidrBlock: "10.1.0.0/21",
    });
    const dataAlicloudImagesDefault =
      new alicloud.dataAlicloudImages.DataAlicloudImages(this, "default", {
        mostRecent: true,
        nameRegex: "^ubuntu_18.*64",
        owners: "system",
      });
    const dataAlicloudZonesDefault =
      new alicloud.dataAlicloudZones.DataAlicloudZones(this, "default_3", {});
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAlicloudZonesDefault.overrideLogicalId("default");
    const alicloudSecurityGroupGroup = new alicloud.securityGroup.SecurityGroup(
      this,
      "group",
      {
        description: "New security group",
        name: "terraform-test-group",
        vpcId: cdktf.Token.asString(alicloudVpcVpc.id),
      }
    );
    const alicloudVswitchVsw = new alicloud.vswitch.Vswitch(this, "vsw", {
      cidrBlock: "10.1.1.0/24",
      dependsOn: [alicloudVpcVpc],
      vpcId: cdktf.Token.asString(alicloudVpcVpc.id),
      zoneId: cdktf.Token.asString(
        cdktf.propertyAccess(dataAlicloudZonesDefault.zones, ["0", "id"])
      ),
    });
    const dataAlicloudInstanceTypesDefault =
      new alicloud.dataAlicloudInstanceTypes.DataAlicloudInstanceTypes(
        this,
        "default_6",
        {
          availabilityZone: cdktf.Token.asString(
            cdktf.propertyAccess(dataAlicloudZonesDefault.zones, ["0", "id"])
          ),
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAlicloudInstanceTypesDefault.overrideLogicalId("default");
    const alicloudInstanceEcsInstance = new alicloud.instance.Instance(
      this,
      "ecs_instance",
      {
        availabilityZone: cdktf.Token.asString(
          cdktf.propertyAccess(dataAlicloudZonesDefault.zones, ["0", "id"])
        ),
        imageId: cdktf.Token.asString(
          cdktf.propertyAccess(dataAlicloudImagesDefault.images, ["0", "id"])
        ),
        instanceName: "hello",
        instanceType: cdktf.Token.asString(
          cdktf.propertyAccess(dataAlicloudInstanceTypesDefault.instanceTypes, [
            "0",
            "id",
          ])
        ),
        securityGroups: [cdktf.Token.asString(alicloudSecurityGroupGroup.id)],
        tags: {
          Name: "TerraformTest-instance",
        },
        vswitchId: cdktf.Token.asString(alicloudVswitchVsw.id),
      }
    );
    new alicloud.eipAssociation.EipAssociation(this, "eip_asso", {
      allocationId: cdktf.Token.asString(alicloudEipAddressEip.id),
      instanceId: cdktf.Token.asString(alicloudInstanceEcsInstance.id),
    });
  }
}

```

## Module Support

You can use the existing [eip module](https://registry.terraform.io/modules/terraform-alicloud-modules/eip/alicloud) 
to create several EIP instances and associate them with other resources one-click, like ECS instances, SLB, Nat Gateway and so on.

## Argument Reference

The following arguments are supported:

* `allocationId` - (Required, ForcesNew) The allocation EIP ID.
* `instanceId` - (Required, ForcesNew) The ID of the ECS or SLB instance or Nat Gateway or NetworkInterface or HaVip.
* `instanceType` - (Optional, ForceNew, Available in 1.46.0+) The type of cloud product that the eip instance to bind. Valid values: `ecsInstance`, `slbInstance`, `nat`, `networkInterface`, `haVip` and `ipAddress`.
* `privateIpAddress` - (Optional, ForceNew, Available in 1.52.2+) The private IP address in the network segment of the vswitch which has been assigned.
* `force` - (Optional, Available in 1.95.0+) When EIP is bound to a NAT gateway, and the NAT gateway adds a DNAT or SNAT entry, set it for `true` can unassociation any way. Default to `false`.
* `vpcId` - (Optional, Available in 1.203.0+) The ID of the VPC that has IPv4 gateways enabled and that is deployed in the same region as the EIP. When you associate an EIP with an IP address, the system can enable the IP address to access the Internet based on VPC route configurations. **Note:** This parameter is required if `instanceType` is set to IpAddress. In this case, the EIP is associated with an IP address.


## Attributes Reference

The following attributes are exported:

* `id` - The EIP Association ID and it formats as `<allocation_id>:<instance_id>`.

#### Timeouts

-> **NOTE:** Available in 1.194.1+.

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/docs/configuration-0-11/resources.html#timeouts) for certain actions:

* `create` - (Defaults to 10 mins) Used when create the Elastic IP address association.
* `delete` - (Defaults to 10 mins) Used when delete the Elastic IP address association.

## Import

-> **NOTE:** Available in 1.117.0+.

Elastic IP address association can be imported using the id, e.g.

```shell
$ terraform import alicloud_eip_association.example eip-abc12345678:i-abc12355
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-53d4c510ccf44b7e59ddf6de1461ff4613161ff1be9365d8efffef41ca0a7617 -->