---
subcategory: "Message Service"
layout: "alicloud"
page_title: "Alicloud: alicloud_message_service_subscription"
sidebar_current: "docs-alicloud-resource-message-service-subscription"
description: |-
  Provides a Alicloud Message Notification Service Subscription resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_message\_service\_subscription

Provides a Message Notification Service Subscription resource.

For information about Message Notification Service Subscription and how to use it, see [What is Subscription](https://www.alibabacloud.com/help/en/message-service/latest/subscribe-1).

-> **NOTE:** Available in v1.188.0+.

## Example Usage

Basic Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const alicloudMessageServiceTopicDefault =
      new alicloud.messageServiceTopic.MessageServiceTopic(this, "default", {
        loggingEnabled: true,
        maxMessageSize: 12357,
        topicName: "tf-example-value",
      });
    const alicloudMessageServiceSubscriptionDefault =
      new alicloud.messageServiceSubscription.MessageServiceSubscription(
        this,
        "default_1",
        {
          endpoint: "http://www.test.com/test",
          filterTag: "tf-test",
          notifyContentFormat: "XML",
          notifyStrategy: "BACKOFF_RETRY",
          pushType: "http",
          subscriptionName: "tf-example-value",
          topicName: cdktf.Token.asString(
            alicloudMessageServiceTopicDefault.topicName
          ),
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudMessageServiceSubscriptionDefault.overrideLogicalId("default");
  }
}

```

## Argument Reference

The following arguments are supported:

* `topicName`- (Required, ForceNew) The topic which The subscription belongs to was named with the name. A topic name must start with an English letter or a digit, and can contain English letters, digits, and hyphens, with the length not exceeding 255 characters.
* `subscriptionName` - (Required, ForceNew) Two topics subscription on a single account in the same topic cannot have the same name. A topic subscription name must start with an English letter or a digit, and can contain English letters, digits, and hyphens, with the length not exceeding 255 characters.
* `endpoint` - (Required, ForceNew) The endpoint has three format. Available values format:
  - `HTTP Format`: http://xxx.com/xxx
  - `Queue Format`: acs:mns:{REGION}:{AccountID}:queues/{QueueName}
  - `Email Format`: mail:directmail:{MailAddress}
* `pushType` - (Required, ForceNew) The Push type of Subscription. The Valid values: `http`, `queue`, `mpush`, `alisms` and `email`.
* `filterTag` - (Optional, ForceNew) The tag that is used to filter messages. Only the messages that have the same tag can be pushed. A tag is a string that can be up to 16 characters in length. By default, no tag is specified to filter messages.
* `notifyContentFormat` - (Optional, Computed, ForceNew) The NotifyContentFormat attribute of Subscription. This attribute specifies the content format of the messages pushed to users. Valid values: `xml`, `json` and `simplified`. Default value: `xml`.
* `notifyStrategy` - (Optional, Computed) The NotifyStrategy attribute of Subscription. This attribute specifies the retry strategy when message sending fails. Default value: `backoffRetry`. Valid values:
  - `backoffRetry`: retries with a fixed backoff interval.
  - `exponentialDecayRetry`: retries with exponential backoff.

## Attributes Reference

The following attributes are exported:

* `id` - The resource ID in terraform of Subscription. The value formats as `<topic_name>:<subscription_name>`.

#### Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/docs/configuration-0-11/resources.html#timeouts) for certain actions:

* `create` - (Defaults to 3 mins) Used when create the Subscription.
* `update` - (Defaults to 3 mins) Used when update the Subscription.
* `delete` - (Defaults to 3 mins) Used when delete the Subscription.

## Import

Message Notification Service Subscription can be imported using the id, e.g.

```shell
$ terraform import alicloud_message_service_subscription.example <topic_name>:<subscription_name>
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-6bc9c1d8d4d16b716e7d7b3587b9a5b106ee53fee5df706c48c7f4d5e05ff87e -->