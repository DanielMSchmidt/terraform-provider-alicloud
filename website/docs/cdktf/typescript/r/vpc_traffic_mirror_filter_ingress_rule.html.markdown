---
subcategory: "VPC"
layout: "alicloud"
page_title: "Alicloud: alicloud_vpc_traffic_mirror_filter_ingress_rule"
sidebar_current: "docs-alicloud-resource-vpc-traffic-mirror-filter-ingress-rule"
description: |-
  Provides a Alicloud VPC Traffic Mirror Filter Ingress Rule resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_vpc\_traffic\_mirror\_filter\_ingress\_rule

Provides a VPC Traffic Mirror Filter Ingress Rule resource.

For information about VPC Traffic Mirror Filter Ingress Rule and how to use it, see [What is Traffic Mirror Filter Ingress Rule](https://www.alibabacloud.com/help/doc-detail/261357.htm).

-> **NOTE:** Available in v1.141.0+.

## Example Usage

Basic Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const alicloudVpcTrafficMirrorFilterExample =
      new alicloud.vpcTrafficMirrorFilter.VpcTrafficMirrorFilter(
        this,
        "example",
        {
          trafficMirrorFilterName: "example_value",
        }
      );
    const alicloudVpcTrafficMirrorFilterIngressRuleExample =
      new alicloud.vpcTrafficMirrorFilterIngressRule.VpcTrafficMirrorFilterIngressRule(
        this,
        "example_1",
        {
          destinationCidrBlock: "10.0.0.0/24",
          destinationPortRange: "1/120",
          priority: cdktf.Token.asNumber("1"),
          protocol: "UDP",
          ruleAction: "accept",
          sourceCidrBlock: "10.0.0.0/24",
          sourcePortRange: "1/120",
          trafficMirrorFilterId: cdktf.Token.asString(
            alicloudVpcTrafficMirrorFilterExample.id
          ),
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudVpcTrafficMirrorFilterIngressRuleExample.overrideLogicalId(
      "example"
    );
  }
}

```

## Argument Reference

The following arguments are supported:

* `dryRun` - (Optional) Whether to pre-check this request only. Default to: `false`
* `destinationCidrBlock` - (Required) The destination CIDR block of the inbound traffic.
* `destinationPortRange` - (Optional) The destination CIDR block of the inbound traffic. Valid values: `1` to `65535`. Separate the first port and last port with a forward slash (/), for example, `1/200` or `80/80`. A value of `1/1` indicates that all ports are available. Therefore, do not set the value to `1/1`. **NOTE:** When `protocol` is `icmp`, this parameter is invalid.
* `priority` - (Required) The priority of the inbound rule. A smaller value indicates a higher priority. The maximum value is `10`, which indicates that you can configure at most 10 inbound rules for a filter.
* `protocol` - (Required) The transport protocol used by inbound traffic that needs to be mirrored. Valid values: `all`, `icmp`, `tcp`, `udp`.
* `ruleAction` - (Required) The collection policy of the inbound rule. Valid values: `accept` or `drop`. `accept`: collects network traffic. `drop`: does not collect network traffic.
* `sourceCidrBlock` - (Required) The source CIDR block of the inbound traffic.
* `sourcePortRange` - (Optional) The source port range of the inbound traffic. Valid values: `1` to `65535`. Separate the first port and last port with a forward slash (/), for example, `1/200` or `80/80`. A value of `1/1` indicates that all ports are available. Therefore, do not set the value to `1/1`. **NOTE:** When `protocol` is `icmp`, this parameter is invalid.
* `trafficMirrorFilterId` - (Required, ForceNew) The ID of the filter.

## Attributes Reference

The following attributes are exported:

* `id` - The ID of the rule. The value formats as `<traffic_mirror_filter_id>:<traffic_mirror_filter_ingress_rule_id>`.
* `status` - The state of the inbound rule. Valid values:`creating`, `created`, `modifying` and `deleting`.
* `trafficMirrorFilterIngressRuleId` - The ID of the inbound rule.

### Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/docs/configuration-0-11/resources.html#timeouts) for certain actions:

* `create` - (Defaults to 1 mins) Used when create the Traffic Mirror Filter Ingress Rule.
* `update` - (Defaults to 1 mins) Used when update the Traffic Mirror Filter Ingress Rule.
* `delete` - (Defaults to 1 mins) Used when delete the Traffic Mirror Filter Ingress Rule.

## Import

VPC Traffic Mirror Filter Ingress Rule can be imported using the id, e.g.

```shell
$ terraform import alicloud_vpc_traffic_mirror_filter_ingress_rule.example <traffic_mirror_filter_id>:<traffic_mirror_filter_ingress_rule_id>
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-75d286ddd5808bb5b19b95f545c0a34a6660568cbf3d5109ec241ed5d52273de -->