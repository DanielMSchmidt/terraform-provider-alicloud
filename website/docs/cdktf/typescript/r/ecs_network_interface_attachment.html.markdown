---
subcategory: "ECS"
layout: "alicloud"
page_title: "Alicloud: alicloud_ecs_network_interface_attachment"
sidebar_current: "docs-alicloud-resource-ecs-network-interface-attachment"
description: |-
  Provides a Alicloud ECS Network Interface Attachment resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_ecs\_network\_interface\_attachment

Provides a ECS Network Interface Attachment resource.

For information about ECS Network Interface Attachment and how to use it, see [What is Network Interface Attachment](https://www.alibabacloud.com/help/en/doc-detail/58515.htm).

-> **NOTE:** Available in v1.123.1+.

## Example Usage

Basic Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    /*Terraform Variables are not always the best fit for getting inputs in the context of Terraform CDK.
    You can read more about this at https://cdk.tf/variables*/
    const name = new cdktf.TerraformVariable(this, "name", {
      default: "tf-testAcc",
    });
    const alicloudVpcDefault = new alicloud.vpc.Vpc(this, "default", {
      cidrBlock: "192.168.0.0/24",
      vpcName: name.stringValue,
    });
    const dataAlicloudImagesDefault =
      new alicloud.dataAlicloudImages.DataAlicloudImages(this, "default_2", {
        mostRecent: true,
        nameRegex: "^ubuntu_[0-9]+_[0-9]+_x64*",
        owners: "system",
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAlicloudImagesDefault.overrideLogicalId("default");
    const dataAlicloudResourceManagerResourceGroupsDefault =
      new alicloud.dataAlicloudResourceManagerResourceGroups.DataAlicloudResourceManagerResourceGroups(
        this,
        "default_3",
        {
          status: "OK",
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAlicloudResourceManagerResourceGroupsDefault.overrideLogicalId(
      "default"
    );
    const dataAlicloudZonesDefault =
      new alicloud.dataAlicloudZones.DataAlicloudZones(this, "default_4", {
        availableResourceCreation: "Instance",
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAlicloudZonesDefault.overrideLogicalId("default");
    const alicloudSecurityGroupDefault =
      new alicloud.securityGroup.SecurityGroup(this, "default_5", {
        description: "New security group",
        name: name.stringValue,
        vpcId: cdktf.Token.asString(alicloudVpcDefault.id),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudSecurityGroupDefault.overrideLogicalId("default");
    const alicloudVswitchDefault = new alicloud.vswitch.Vswitch(
      this,
      "default_6",
      {
        cidrBlock: "192.168.0.0/24",
        vpcId: cdktf.Token.asString(alicloudVpcDefault.id),
        vswitchName: name.stringValue,
        zoneId: cdktf.Token.asString(
          cdktf.propertyAccess(dataAlicloudZonesDefault.zones, ["0", "id"])
        ),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudVswitchDefault.overrideLogicalId("default");
    const dataAlicloudInstanceTypesDefault =
      new alicloud.dataAlicloudInstanceTypes.DataAlicloudInstanceTypes(
        this,
        "default_7",
        {
          availabilityZone: cdktf.Token.asString(
            cdktf.propertyAccess(dataAlicloudZonesDefault.zones, ["0", "id"])
          ),
          eniAmount: 3,
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAlicloudInstanceTypesDefault.overrideLogicalId("default");
    const alicloudEcsNetworkInterfaceDefault =
      new alicloud.ecsNetworkInterface.EcsNetworkInterface(this, "default_8", {
        description: "Basic test",
        networkInterfaceName: name.stringValue,
        primaryIpAddress: "192.168.0.2",
        resourceGroupId: cdktf.Token.asString(
          cdktf.propertyAccess(
            dataAlicloudResourceManagerResourceGroupsDefault.ids,
            ["0"]
          )
        ),
        securityGroupIds: [
          cdktf.Token.asString(alicloudSecurityGroupDefault.id),
        ],
        tags: {
          Created: "TF",
          For: "Test",
        },
        vswitchId: cdktf.Token.asString(alicloudVswitchDefault.id),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudEcsNetworkInterfaceDefault.overrideLogicalId("default");
    const alicloudInstanceDefault = new alicloud.instance.Instance(
      this,
      "default_9",
      {
        availabilityZone: cdktf.Token.asString(
          cdktf.propertyAccess(dataAlicloudZonesDefault.zones, ["0", "id"])
        ),
        hostName: "tf-testAcc",
        imageId: cdktf.Token.asString(
          cdktf.propertyAccess(dataAlicloudImagesDefault.images, ["0", "id"])
        ),
        instanceName: name.stringValue,
        instanceType: cdktf.Token.asString(
          cdktf.propertyAccess(dataAlicloudInstanceTypesDefault.instanceTypes, [
            "0",
            "id",
          ])
        ),
        securityGroups: [cdktf.Token.asString(alicloudSecurityGroupDefault.id)],
        vswitchId: cdktf.Token.asString(alicloudVswitchDefault.id),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudInstanceDefault.overrideLogicalId("default");
    const alicloudEcsNetworkInterfaceAttachmentDefault =
      new alicloud.ecsNetworkInterfaceAttachment.EcsNetworkInterfaceAttachment(
        this,
        "default_10",
        {
          instanceId: cdktf.Token.asString(alicloudInstanceDefault.id),
          networkInterfaceId: cdktf.Token.asString(
            alicloudEcsNetworkInterfaceDefault.id
          ),
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudEcsNetworkInterfaceAttachmentDefault.overrideLogicalId("default");
  }
}

```

## Argument Reference

The following arguments are supported:

* `instanceId` - (Required, ForceNew) The instance id.
* `networkInterfaceId` - (Required, ForceNew) The network interface id.
* `trunkNetworkInstanceId` - (Optional) The trunk network instance id.
* `waitForNetworkConfigurationReady` - (Optional) The wait for network configuration ready.

## Attributes Reference

The following attributes are exported:

* `id` - The resource ID of Network Interface Attachment. The value is formatted `<network_interface_id>:<instance_id>`.

## Import

ECS Network Interface Attachment can be imported using the id, e.g.

```shell
$ terraform import alicloud_ecs_network_interface_attachment.example eni-abcd1234:i-abcd1234
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-0e6987a85202b68d5d38cdce276e63b898a03822d21d78a303b655ce25616000 -->