---
subcategory: "NAT Gateway"
layout: "alicloud"
page_title: "Alicloud: alicloud_vpc_nat_ip"
sidebar_current: "docs-alicloud-resource-vpc-nat-ip"
description: |-
  Provides a Alicloud VPC Nat Ip resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_vpc\_nat\_ip

Provides a VPC Nat Ip resource.

For information about VPC Nat Ip and how to use it, see [What is Nat Ip](https://www.alibabacloud.com/help/doc-detail/281976.htm).

-> **NOTE:** Available in v1.136.0+.

## Example Usage

Basic Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const alicloudVpcExample = new alicloud.vpc.Vpc(this, "example", {
      cidrBlock: "172.16.0.0/12",
      vpcName: "terraform-example",
    });
    const dataAlicloudZonesExample =
      new alicloud.dataAlicloudZones.DataAlicloudZones(this, "example_1", {
        availableResourceCreation: "VSwitch",
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAlicloudZonesExample.overrideLogicalId("example");
    const alicloudVswitchExample = new alicloud.vswitch.Vswitch(
      this,
      "example_2",
      {
        cidrBlock: "172.16.0.0/21",
        vpcId: cdktf.Token.asString(alicloudVpcExample.id),
        vswitchName: "terraform-example",
        zoneId: cdktf.Token.asString(
          cdktf.propertyAccess(dataAlicloudZonesExample.zones, ["0", "id"])
        ),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudVswitchExample.overrideLogicalId("example");
    const alicloudNatGatewayExample = new alicloud.natGateway.NatGateway(
      this,
      "example_3",
      {
        description: "terraform-example",
        internetChargeType: "PayByLcu",
        natGatewayName: "terraform-example",
        natType: "Enhanced",
        networkType: "intranet",
        vpcId: cdktf.Token.asString(alicloudVpcExample.id),
        vswitchId: cdktf.Token.asString(alicloudVswitchExample.id),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudNatGatewayExample.overrideLogicalId("example");
    const alicloudVpcNatIpCidrExample = new alicloud.vpcNatIpCidr.VpcNatIpCidr(
      this,
      "example_4",
      {
        natGatewayId: cdktf.Token.asString(alicloudNatGatewayExample.id),
        natIpCidr: "192.168.0.0/16",
        natIpCidrDescription: "terraform-example",
        natIpCidrName: "terraform-example",
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudVpcNatIpCidrExample.overrideLogicalId("example");
    const alicloudVpcNatIpExample = new alicloud.vpcNatIp.VpcNatIp(
      this,
      "example_5",
      {
        natGatewayId: cdktf.Token.asString(alicloudNatGatewayExample.id),
        natIp: "192.168.0.37",
        natIpCidr: cdktf.Token.asString(alicloudVpcNatIpCidrExample.natIpCidr),
        natIpDescription: "example_value",
        natIpName: "example_value",
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudVpcNatIpExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

The following arguments are supported:

* `dryRun` - (Optional, Computed) Specifies whether to check the validity of the request without actually making the request.
* `natGatewayId` - (Required, ForceNew) The ID of the Virtual Private Cloud (VPC) NAT gateway for which you want to create the NAT IP address.
* `natIp` - (Optional, ForceNew, Computed) The NAT IP address that you want to create. If you do not specify an IP address, the system selects a random IP address from the specified CIDR block.
* `natIpCidr` - (Optional, ForceNew) NAT IP ADDRESS of the address segment.
* `natIpCidrId` - (Optional) The ID of the CIDR block to which the NAT IP address belongs.
* `natIpDescription` - (Optional) NAT IP ADDRESS description of information. Length is from `2` to `256` characters, must start with a letter or the Chinese at the beginning, but not at the` http://` Or `https://` at the beginning.
* `natIpName` - (Optional) NAT IP ADDRESS the name of the root directory. Length is from `2` to `128` characters, must start with a letter or the Chinese at the beginning can contain numbers, half a period (.), underscore (_) and dash (-). But do not start with `http://` or `https://` at the beginning.

## Attributes Reference

The following attributes are exported:

* `id` - The resource ID in terraform of Nat Ip. The value formats as `<nat_gateway_id>:<nat_ip_id>`.
* `natIpId` - Ihe ID of the Nat Ip.
* `status` - The status of the NAT IP address. Valid values: `available`, `deleting`, `creating` and `deleted`. 

### Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/docs/configuration-0-11/resources.html#timeouts) for certain actions:

* `create` - (Defaults to 1 mins) Used when create the Nat Ip.
* `delete` - (Defaults to 1 mins) Used when delete the Nat Ip.

## Import

VPC Nat Ip can be imported using the id, e.g.

```shell
$ terraform import alicloud_vpc_nat_ip.example <nat_gateway_id>:<nat_ip_id>
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-4c4810bad18618a1a965c3a95e0d99ab306f33ac5c4638680ace9fc53fc8667c -->