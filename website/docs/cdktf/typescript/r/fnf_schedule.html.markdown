---
subcategory: "Serverless Workflow (FnF)"
layout: "alicloud"
page_title: "Alicloud: alicloud_fnf_schedule"
sidebar_current: "docs-alicloud-resource-fnf-schedule"
description: |-
  Provides a Alicloud Serverless Workflow Schedule resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_fnf\_schedule

Provides a Serverless Workflow Schedule resource.

For information about Serverless Workflow Schedule and how to use it, see [What is Schedule](https://www.alibabacloud.com/help/en/doc-detail/168934.htm).

-> **NOTE:** Available in v1.105.0+.

## Example Usage

Basic Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const alicloudFnfFlowExample = new alicloud.fnfFlow.FnfFlow(
      this,
      "example",
      {
        definition:
          "  version: v1beta1\n  type: flow\n  steps:\n    - type: pass\n      name: helloworld\n",
        description: "tf-testaccFnFFlow983041",
        name: "tf-testAccSchedule",
        type: "FDL",
      }
    );
    const alicloudFnfScheduleExample = new alicloud.fnfSchedule.FnfSchedule(
      this,
      "example_1",
      {
        cronExpression: "30 9 * * * *",
        description: "tf-testaccFnFSchedule983041",
        enable: cdktf.Token.asBoolean("true"),
        flowName: cdktf.Token.asString(alicloudFnfFlowExample.name),
        payload: '{\\"tf-test\\": \\"test success\\"}',
        scheduleName: "tf-testaccFnFSchedule983041",
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudFnfScheduleExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

The following arguments are supported:

* `cronExpression` - (Required) The CRON expression of the time-based schedule to be created.
* `description` - (Optional) The description of the time-based schedule to be created.
* `enable` - (Optional) Specifies whether to enable the time-based schedule you want to create. Valid values: `false`, `true`.
* `flowName` - (Required, ForceNew) The name of the flow bound to the time-based schedule you want to create.
* `payload` - (Optional) The trigger message of the time-based schedule to be created. It must be in JSON object format.
* `scheduleName` - (Required, ForceNew) The name of the time-based schedule to be created.

## Attributes Reference

The following attributes are exported:

* `id` - The resource ID of Schedule. The value is formatted `<schedule_name>:<flow_name>`.
* `lastModifiedTime` - The time when the time-based schedule was last updated.
* `scheduleId` - The ID of the time-based schedule.

### Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/docs/configuration-0-11/resources.html#timeouts) for certain actions:

* `create` - (Defaults to 1 mins) Used when create the Schedule.
* `delete` - (Defaults to 1 mins) Used when delete the Schedule.
* `update` - (Defaults to 1 mins) Used when update the Schedule.

## Import

Serverless Workflow Schedule can be imported using the id, e.g.

```shell
$ terraform import alicloud_fnf_schedule.example <schedule_name>:<flow_name>
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-2acc88188bd14517297ce01bfd063ea060b5efa63f091860b778018c73c49bef -->