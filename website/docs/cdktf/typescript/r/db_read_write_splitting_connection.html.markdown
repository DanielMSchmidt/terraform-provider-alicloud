---
subcategory: "RDS"
layout: "alicloud"
page_title: "Alicloud: alicloud_db_read_write_splitting_connection"
sidebar_current: "docs-alicloud-resource-db-read-write-splitting-connection"
description: |-
  Provides an RDS instance read write splitting connection resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_db\_read\_write\_splitting\_connection

Provides an RDS read write splitting connection resource to allocate an Intranet connection string for RDS instance.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const alicloudVpcExample = new alicloud.vpc.Vpc(this, "example", {
      cidrBlock: "172.16.0.0/16",
      vpcName: "terraform-example",
    });
    const dataAlicloudDbZonesExample =
      new alicloud.dataAlicloudDbZones.DataAlicloudDbZones(this, "example_1", {
        category: "Basic",
        dbInstanceStorageType: "cloud_essd",
        engine: "MySQL",
        engineVersion: "8.0",
        instanceChargeType: "PostPaid",
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAlicloudDbZonesExample.overrideLogicalId("example");
    const alicloudSecurityGroupExample =
      new alicloud.securityGroup.SecurityGroup(this, "example_2", {
        name: "terraform-example",
        vpcId: cdktf.Token.asString(alicloudVpcExample.id),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudSecurityGroupExample.overrideLogicalId("example");
    const alicloudVswitchExample = new alicloud.vswitch.Vswitch(
      this,
      "example_3",
      {
        cidrBlock: "172.16.0.0/24",
        vpcId: cdktf.Token.asString(alicloudVpcExample.id),
        vswitchName: "terraform-example",
        zoneId: cdktf.Token.asString(
          cdktf.propertyAccess(dataAlicloudDbZonesExample.zones, ["0", "id"])
        ),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudVswitchExample.overrideLogicalId("example");
    const dataAlicloudDbInstanceClassesExample =
      new alicloud.dataAlicloudDbInstanceClasses.DataAlicloudDbInstanceClasses(
        this,
        "example_4",
        {
          category: "Basic",
          dbInstanceStorageType: "cloud_essd",
          engine: "MySQL",
          engineVersion: "8.0",
          instanceChargeType: "PostPaid",
          zoneId: cdktf.Token.asString(
            cdktf.propertyAccess(dataAlicloudDbZonesExample.zones, ["0", "id"])
          ),
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAlicloudDbInstanceClassesExample.overrideLogicalId("example");
    const alicloudDbInstanceExample = new alicloud.dbInstance.DbInstance(
      this,
      "example_5",
      {
        dbInstanceStorageType: "cloud_essd",
        engine: "MySQL",
        engineVersion: "8.0",
        instanceChargeType: "Postpaid",
        instanceName: "terraform-example",
        instanceStorage: cdktf.Token.asNumber(
          cdktf.propertyAccess(
            dataAlicloudDbInstanceClassesExample.instanceClasses,
            ["0", "storage_range", "min"]
          )
        ),
        instanceType: cdktf.Token.asString(
          cdktf.propertyAccess(
            dataAlicloudDbInstanceClassesExample.instanceClasses,
            ["0", "instance_class"]
          )
        ),
        monitoringPeriod: cdktf.Token.asNumber("60"),
        securityGroupIds: [
          cdktf.Token.asString(alicloudSecurityGroupExample.id),
        ],
        vswitchId: cdktf.Token.asString(alicloudVswitchExample.id),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudDbInstanceExample.overrideLogicalId("example");
    const alicloudDbReadonlyInstanceExample =
      new alicloud.dbReadonlyInstance.DbReadonlyInstance(this, "example_6", {
        engineVersion: cdktf.Token.asString(
          alicloudDbInstanceExample.engineVersion
        ),
        instanceName: "terraform-example-readonly",
        instanceStorage: cdktf.Token.asNumber(
          alicloudDbInstanceExample.instanceStorage
        ),
        instanceType: cdktf.Token.asString(
          cdktf.propertyAccess(
            dataAlicloudDbInstanceClassesExample.instanceClasses,
            ["1", "instance_class"]
          )
        ),
        masterDbInstanceId: cdktf.Token.asString(alicloudDbInstanceExample.id),
        vswitchId: cdktf.Token.asString(alicloudVswitchExample.id),
        zoneId: cdktf.Token.asString(alicloudDbInstanceExample.zoneId),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudDbReadonlyInstanceExample.overrideLogicalId("example");
    const alicloudDbReadWriteSplittingConnectionExample =
      new alicloud.dbReadWriteSplittingConnection.DbReadWriteSplittingConnection(
        this,
        "example_7",
        {
          connectionPrefix: "example-con-123",
          dependsOn: [alicloudDbReadonlyInstanceExample],
          distributionType: "Standard",
          instanceId: cdktf.Token.asString(alicloudDbInstanceExample.id),
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudDbReadWriteSplittingConnectionExample.overrideLogicalId("example");
  }
}

```

-> **NOTE:** Resource `alicloudDbReadWriteSplittingConnection` should be created after `alicloudDbReadonlyInstance`, so the `dependsOn` statement is necessary.

## Argument Reference

The following arguments are supported:

* `instanceId` - (Required, ForceNew) The Id of instance that can run database.
* `distributionType` - (Required) Read weight distribution mode. Values are as follows: `standard` indicates automatic weight distribution based on types, `custom` indicates custom weight distribution. 
* `connectionPrefix` - (Optional, ForceNew) Prefix of an Internet connection string. It must be checked for uniqueness. It may consist of lowercase letters, numbers, and underlines, and must start with a letter and have no more than 30 characters. Default to <instance_id> + 'rw'.
* `port` - (Optional) Intranet connection port. Valid value: [3001-3999]. Default to 3306.
* `maxDelayTime` - (Optional) Delay threshold, in seconds. The value range is 0 to 7200. Default to 30. Read requests are not routed to the read-only instances with a delay greater than the threshold.  
* `weight` - (Optional) Read weight distribution. Read weights increase at a step of 100 up to 10,000. Enter weights in the following format: {"Instanceid":"Weight","Instanceid":"Weight"}. This parameter must be set when distribution_type is set to Custom. 

## Attributes Reference

The following attributes are exported:

* `id` - The Id of DB instance.
* `connectionString` - Connection instance string.

## Import

RDS read write splitting connection can be imported using the id, e.g.

```shell
$ terraform import alicloud_db_read_write_splitting_connection.example abc12345678
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-502bf8ea8382ddc09a18a458494888387b4eef019b79612d8bb14491594afc54 -->