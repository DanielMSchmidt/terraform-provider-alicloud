---
subcategory: "VPC"
layout: "alicloud"
page_title: "Alicloud: alicloud_route_entry"
sidebar_current: "docs-alicloud-resource-route-entry"
description: |-
  Provides a Alicloud Route Entry resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_route\_entry

Provides a route entry resource. A route entry represents a route item of one VPC route table.

## Example Usage

Basic Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    /*Terraform Variables are not always the best fit for getting inputs in the context of Terraform CDK.
    You can read more about this at https://cdk.tf/variables*/
    const name = new cdktf.TerraformVariable(this, "name", {
      default: "RouteEntryConfig",
    });
    const alicloudVpcFoo = new alicloud.vpc.Vpc(this, "foo", {
      cidrBlock: "10.1.0.0/21",
      vpcName: name.stringValue,
    });
    const dataAlicloudImagesDefault =
      new alicloud.dataAlicloudImages.DataAlicloudImages(this, "default", {
        mostRecent: true,
        nameRegex: "^ubuntu_18.*64",
        owners: "system",
      });
    const dataAlicloudZonesDefault =
      new alicloud.dataAlicloudZones.DataAlicloudZones(this, "default_3", {
        availableResourceCreation: "VSwitch",
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAlicloudZonesDefault.overrideLogicalId("default");
    const alicloudSecurityGroupTfTestFoo =
      new alicloud.securityGroup.SecurityGroup(this, "tf_test_foo", {
        description: "foo",
        name: name.stringValue,
        vpcId: cdktf.Token.asString(alicloudVpcFoo.id),
      });
    new alicloud.securityGroupRule.SecurityGroupRule(this, "ingress", {
      cidrIp: "0.0.0.0/0",
      ipProtocol: "tcp",
      nicType: "intranet",
      policy: "accept",
      portRange: "22/22",
      priority: 1,
      securityGroupId: cdktf.Token.asString(alicloudSecurityGroupTfTestFoo.id),
      type: "ingress",
    });
    const alicloudVswitchFoo = new alicloud.vswitch.Vswitch(this, "foo_6", {
      cidrBlock: "10.1.1.0/24",
      vpcId: cdktf.Token.asString(alicloudVpcFoo.id),
      vswitchName: name.stringValue,
      zoneId: cdktf.Token.asString(
        cdktf.propertyAccess(dataAlicloudZonesDefault.zones, ["0", "id"])
      ),
    });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudVswitchFoo.overrideLogicalId("foo");
    const dataAlicloudInstanceTypesDefault =
      new alicloud.dataAlicloudInstanceTypes.DataAlicloudInstanceTypes(
        this,
        "default_7",
        {
          availabilityZone: cdktf.Token.asString(
            cdktf.propertyAccess(dataAlicloudZonesDefault.zones, ["0", "id"])
          ),
          cpuCoreCount: 1,
          memorySize: 2,
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAlicloudInstanceTypesDefault.overrideLogicalId("default");
    const alicloudInstanceFoo = new alicloud.instance.Instance(this, "foo_8", {
      imageId: cdktf.Token.asString(
        cdktf.propertyAccess(dataAlicloudImagesDefault.images, ["0", "id"])
      ),
      instanceChargeType: "PostPaid",
      instanceName: name.stringValue,
      instanceType: cdktf.Token.asString(
        cdktf.propertyAccess(dataAlicloudInstanceTypesDefault.instanceTypes, [
          "0",
          "id",
        ])
      ),
      internetChargeType: "PayByTraffic",
      internetMaxBandwidthOut: 5,
      securityGroups: [cdktf.Token.asString(alicloudSecurityGroupTfTestFoo.id)],
      systemDiskCategory: "cloud_efficiency",
      vswitchId: cdktf.Token.asString(alicloudVswitchFoo.id),
    });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudInstanceFoo.overrideLogicalId("foo");
    const alicloudRouteEntryFoo = new alicloud.routeEntry.RouteEntry(
      this,
      "foo_9",
      {
        destinationCidrblock: "172.11.1.1/32",
        nexthopId: cdktf.Token.asString(alicloudInstanceFoo.id),
        nexthopType: "Instance",
        routeTableId: cdktf.Token.asString(alicloudVpcFoo.routeTableId),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudRouteEntryFoo.overrideLogicalId("foo");
  }
}

```

## Module Support

You can use to the existing [vpc module](https://registry.terraform.io/modules/alibaba/vpc/alicloud) 
to create a VPC, several VSwitches and add several route entries one-click.

## Argument Reference

The following arguments are supported:

* `routerId` - (Deprecated) This argument has been deprecated. Please use other arguments to launch a custom route entry.
* `routeTableId` - (Required, ForceNew) The ID of the route table.
* `destinationCidrblock` - (ForceNew) The RouteEntry's target network segment.
* `nexthopType` - (ForceNew) The next hop type. Available values:
    - `instance` (Default): an Elastic Compute Service (ECS) instance. This is the default value.
    - `routerInterface`: a router interface.
    - `vpnGateway`: a VPN Gateway.
    - `haVip`: a high-availability virtual IP address (HAVIP).
    - `networkInterface`: an elastic network interface (ENI).
    - `natGateway`: a Nat Gateway.
    - `iPv6Gateway`: an IPv6 gateway.
    - `attachment`: a transit router.
    - `vpcPeer`: a VPC Peering Connection.
    - `ipv4Gateway`  (Available in 1.193.0+): an IPv4 gateway.

* `nexthopId` - (ForceNew) The route entry's next hop. ECS instance ID or VPC router interface ID.
* `name` - (Optional, ForceNew, Available in 1.55.1+) The name of the route entry. This name can have a string of 2 to 128 characters, must contain only alphanumeric characters or hyphens, such as "-",".","_", and must not begin or end with a hyphen, and must not begin with http:// or https://.

## Attributes Reference

The following attributes are exported:

* `id` - The route entry id,it formats of `<route_table_id:router_id:destination_cidrblock:nexthop_type:nexthop_id>`.

## Import

Router entry can be imported using the id, e.g (formatted as<route_table_id:router_id:destination_cidrblock:nexthop_type:nexthop_id>).

```shell
$ terraform import alicloud_route_entry.example vtb-123456:vrt-123456:0.0.0.0/0:NatGateway:ngw-123456
```


<!-- cache-key: cdktf-0.17.0-pre.15 input-fb94d466a4a1462afbaf1065260d29973168f743ee073b0d4aa52ab49db1d227 -->