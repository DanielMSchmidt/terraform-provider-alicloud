---
subcategory: "Distributed Relational Database Service (DRDS)"
layout: "alicloud"
page_title: "Alicloud: alicloud_drds_instance"
sidebar_current: "docs-alicloud-resource-drds-instance"
description: |-
  Provides an DRDS instance resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_drds\_instance

Distributed Relational Database Service (DRDS) is a lightweight (stateless), flexible, stable, and efficient middleware product independently developed by Alibaba Group to resolve scalability issues with single-host relational databases.
With its compatibility with MySQL protocols and syntaxes, DRDS enables database/table sharding, smooth scaling, configuration upgrade/downgrade,
transparent read/write splitting, and distributed transactions, providing O&M capabilities for distributed databases throughout their entire lifecycle.

For information about DRDS and how to use it, see [What is DRDS](https://www.alibabacloud.com/help/product/29657.htm).

-> **NOTE:** At present, DRDS instance only can be supported in the regions: cn-shenzhen, cn-beijing, cn-hangzhou, cn-hongkong, cn-qingdao, ap-southeast-1.

-> **NOTE:** Currently, this resource only support `Domestic Site Account`.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    new alicloud.drdsInstance.DrdsInstance(this, "default", {
      description: "drds instance",
      instanceChargeType: "PostPaid",
      instanceSeries: "drds.sn1.4c8g",
      specification: "drds.sn1.4c8g.8C16G",
      vswitchId: "vsw-bp1jlu3swk8rq2yoi40ey",
      zoneId: "cn-hangzhou-e",
    });
  }
}

```

## Argument Reference

The following arguments are supported:

* `description` - (Required) Description of the DRDS instance, This description can have a string of 2 to 256 characters.
* `zoneId` - (Required from v1.91.0, ForceNew) The Zone to launch the DRDS instance.
* `instanceChargeType` - (Optional, ForceNew) Valid values are `prePaid`, `postPaid`, Default to `postPaid`.
* `vswitchId` - (Required from v1.91.0, ForceNew) The VSwitch ID to launch in.
* `instanceSeries` - (Required, ForceNew) The parameter of the instance series. **NOTE:**  `drdsSn14C8G`,`drdsSn18C16G`,`drdsSn116C32G`,`drdsSn132C64G` are no longer supported. Valid values:
    - `drdsSn24C16G` Starter Edition.
    - `drdsSn28C32G` Standard Edition.
    - `drdsSn216C64G` Enterprise Edition.
* `specification` - (Required, ForceNew) User-defined DRDS instance specification. Value range:
    - `drdsSn14C8G` for DRDS instance Starter version; 
        - value range : `drdsSn14C8G8C16G`, `drdsSn14C8G16C32G`, `drdsSn14C8G32C64G`, `drdsSn14C8G64C128G`
    - `drdsSn18C16G` for DRDS instance Standard edition;
        - value range : `drdsSn18C16G16C32G`, `drdsSn18C16G32C64G`, `drdsSn18C16G64C128G`
    - `drdsSn116C32G` for DRDS instance Enterprise Edition;
        - value range : `drdsSn116C32G32C64G`, `drdsSn116C32G64C128G`
    - `drdsSn132C64G` for DRDS instance Extreme Edition;
        - value range : `drdsSn132C64G128C256G`
* `vpcId` - (Optional, ForceNew, Available in v1.185.0+) The id of the VPC.
* `mysqlVersion` - (Optional, ForceNew, Available in v1.201.0+) The MySQL version supported by the instance, with the following range of values. `5`: Fully compatible with MySQL 5.x (default) `8`: Fully compatible with MySQL 8.0. This parameter takes effect when the primary instance is created, and the read-only instance has the same MySQL version as the primary instance by default.
       
### Timeouts

-> **NOTE:** Available in 1.49.0+.

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/docs/configuration-0-11/resources.html#timeouts) for certain actions:

* `create` - (Defaults to 10 mins) Used when creating the drds instance (until it reaches running status). 
* `delete` - (Defaults to 10 mins) Used when terminating the drds instance. 
       
       
## Attributes Reference

The following attributes are exported:

* `id` - The DRDS instance ID.
* `connectionString` - (Available in 1.196.0+) The connection string of the DRDS instance.
* `port` - (Available in 1.196.0+) The connection port of the DRDS instance.


## Import

Distributed Relational Database Service (DRDS) can be imported using the id, e.g.

```shell
$ terraform import alicloud_drds_instance.example drds-abc123456
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-26f9439cd8df2f3aa3013faa694ac4f493a5989109f01e4586680946ce840592 -->