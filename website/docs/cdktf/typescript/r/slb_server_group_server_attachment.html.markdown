---
subcategory: "Classic Load Balancer (SLB)"
layout: "alicloud"
page_title: "Alicloud: alicloud_slb_server_group_server_attachment"
sidebar_current: "docs-alicloud-resource-slb-server-group-server-attachment"
description: |-
  Provides a Load Banlancer Virtual Backend Server Group Server Attachment resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_slb\_server\_group\_server\_attachment

-> **NOTE:** Available in v1.163.0+.

For information about server group server attachment and how to use it, see [Configure a server group server attachment](https://www.alibabacloud.com/help/en/doc-detail/35218.html).

-> **NOTE:** Applying this resource may conflict with applying `alicloudSlbListener`, 
and the `alicloudSlbListener` block should use `depends_on = [alicloud_slb_server_group_server_attachment.xxx]` to avoid it.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    /*Terraform Variables are not always the best fit for getting inputs in the context of Terraform CDK.
    You can read more about this at https://cdk.tf/variables*/
    const slbServerGroupServerAttachment = new cdktf.TerraformVariable(
      this,
      "slb_server_group_server_attachment",
      {
        default: "terraform-example",
      }
    );
    const slbServerGroupServerAttachmentCount = new cdktf.TerraformVariable(
      this,
      "slb_server_group_server_attachment_count",
      {
        default: 5,
      }
    );
    const alicloudVpcServerAttachment = new alicloud.vpc.Vpc(
      this,
      "server_attachment",
      {
        cidrBlock: "172.17.3.0/24",
        vpcName: slbServerGroupServerAttachment.stringValue,
      }
    );
    const dataAlicloudImagesServerAttachment =
      new alicloud.dataAlicloudImages.DataAlicloudImages(
        this,
        "server_attachment_3",
        {
          mostRecent: true,
          nameRegex: "^ubuntu_[0-9]+_[0-9]+_x64*",
          owners: "system",
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAlicloudImagesServerAttachment.overrideLogicalId("server_attachment");
    const dataAlicloudZonesServerAttachment =
      new alicloud.dataAlicloudZones.DataAlicloudZones(
        this,
        "server_attachment_4",
        {
          availableDiskCategory: "cloud_efficiency",
          availableResourceCreation: "VSwitch",
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAlicloudZonesServerAttachment.overrideLogicalId("server_attachment");
    const alicloudSecurityGroupServerAttachment =
      new alicloud.securityGroup.SecurityGroup(this, "server_attachment_5", {
        name: slbServerGroupServerAttachment.stringValue,
        vpcId: cdktf.Token.asString(alicloudVpcServerAttachment.id),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudSecurityGroupServerAttachment.overrideLogicalId(
      "server_attachment"
    );
    const alicloudVswitchServerAttachment = new alicloud.vswitch.Vswitch(
      this,
      "server_attachment_6",
      {
        cidrBlock: "172.17.3.0/24",
        vpcId: cdktf.Token.asString(alicloudVpcServerAttachment.id),
        vswitchName: slbServerGroupServerAttachment.stringValue,
        zoneId: cdktf.Token.asString(
          cdktf.propertyAccess(dataAlicloudZonesServerAttachment.zones, [
            "0",
            "id",
          ])
        ),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudVswitchServerAttachment.overrideLogicalId("server_attachment");
    const dataAlicloudInstanceTypesServerAttachment =
      new alicloud.dataAlicloudInstanceTypes.DataAlicloudInstanceTypes(
        this,
        "server_attachment_7",
        {
          availabilityZone: cdktf.Token.asString(
            cdktf.propertyAccess(dataAlicloudZonesServerAttachment.zones, [
              "0",
              "id",
            ])
          ),
          cpuCoreCount: 1,
          memorySize: 2,
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAlicloudInstanceTypesServerAttachment.overrideLogicalId(
      "server_attachment"
    );
    /*In most cases loops should be handled in the programming language context and 
    not inside of the Terraform context. If you are looping over something external, e.g. a variable or a file input
    you should consider using a for loop. If you are looping over something only known to Terraform, e.g. a result of a data source
    you need to keep this like it is.*/
    const alicloudInstanceServerAttachmentCount = cdktf.TerraformCount.of(
      slbServerGroupServerAttachmentCount.numberValue
    );
    const alicloudInstanceServerAttachment = new alicloud.instance.Instance(
      this,
      "server_attachment_8",
      {
        availabilityZone: cdktf.Token.asString(
          cdktf.propertyAccess(dataAlicloudZonesServerAttachment.zones, [
            "0",
            "id",
          ])
        ),
        imageId: cdktf.Token.asString(
          cdktf.propertyAccess(dataAlicloudImagesServerAttachment.images, [
            "0",
            "id",
          ])
        ),
        instanceChargeType: "PostPaid",
        instanceName: slbServerGroupServerAttachment.stringValue,
        instanceType: cdktf.Token.asString(
          cdktf.propertyAccess(
            dataAlicloudInstanceTypesServerAttachment.instanceTypes,
            ["0", "id"]
          )
        ),
        internetChargeType: "PayByTraffic",
        internetMaxBandwidthOut: cdktf.Token.asNumber("10"),
        securityGroups: cdktf.Token.asList(
          cdktf.propertyAccess(alicloudSecurityGroupServerAttachment, [
            "*",
            "id",
          ])
        ),
        systemDiskCategory: "cloud_efficiency",
        vswitchId: cdktf.Token.asString(alicloudVswitchServerAttachment.id),
        count: alicloudInstanceServerAttachmentCount,
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudInstanceServerAttachment.overrideLogicalId("server_attachment");
    const alicloudSlbLoadBalancerServerAttachment =
      new alicloud.slbLoadBalancer.SlbLoadBalancer(
        this,
        "server_attachment_9",
        {
          addressType: "intranet",
          loadBalancerName: slbServerGroupServerAttachment.stringValue,
          loadBalancerSpec: "slb.s2.small",
          vswitchId: cdktf.Token.asString(alicloudVswitchServerAttachment.id),
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudSlbLoadBalancerServerAttachment.overrideLogicalId(
      "server_attachment"
    );
    const alicloudSlbServerGroupServerAttachment =
      new alicloud.slbServerGroup.SlbServerGroup(this, "server_attachment_10", {
        loadBalancerId: cdktf.Token.asString(
          alicloudSlbLoadBalancerServerAttachment.id
        ),
        name: slbServerGroupServerAttachment.stringValue,
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudSlbServerGroupServerAttachment.overrideLogicalId(
      "server_attachment"
    );
    /*In most cases loops should be handled in the programming language context and 
    not inside of the Terraform context. If you are looping over something external, e.g. a variable or a file input
    you should consider using a for loop. If you are looping over something only known to Terraform, e.g. a result of a data source
    you need to keep this like it is.*/
    const alicloudSlbServerGroupServerAttachmentServerAttachmentCount =
      cdktf.TerraformCount.of(slbServerGroupServerAttachmentCount.numberValue);
    const alicloudSlbServerGroupServerAttachmentServerAttachment =
      new alicloud.slbServerGroupServerAttachment.SlbServerGroupServerAttachment(
        this,
        "server_attachment_11",
        {
          port: 8080,
          serverGroupId: cdktf.Token.asString(
            alicloudSlbServerGroupServerAttachment.id
          ),
          serverId: cdktf.Token.asString(
            cdktf.propertyAccess(
              cdktf.propertyAccess(alicloudInstanceServerAttachment, [
                alicloudSlbServerGroupServerAttachmentServerAttachmentCount.index,
              ]),
              ["id"]
            )
          ),
          weight: 0,
          count: alicloudSlbServerGroupServerAttachmentServerAttachmentCount,
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudSlbServerGroupServerAttachmentServerAttachment.overrideLogicalId(
      "server_attachment"
    );
  }
}

```

## Argument Reference

The following arguments are supported:

* `serverGroupId` - (Required, ForceNew) The ID of the server group.
* `serverId` - (Required, ForceNew) The ID of the backend server. You can specify the ID of an Elastic Compute Service (ECS) instance or an elastic network interface (ENI).
* `port` - (Required, ForceNew) The port that is used by the backend server. Valid values: `1` to `65535`.
* `weight` - (Optional, ForceNew, Computed) The weight of the backend server. Valid values: `0` to `100`. Default value: `100`. If the value is set to `0`, no requests are forwarded to the backend server.
* `type` - (Optional, ForceNew, Computed) The type of backend server. Valid values: `ecs`, `eni`.
* `description` - (Optional, ForceNew, Computed) The description of the backend server.


## Attributes Reference

The following attributes are exported:

* `id` - The ID of the virtual server group server attachment. The value formats as `<server_group_id>:<server_id>:<port>`.

### Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/docs/configuration-0-11/resources.html#timeouts) for certain actions:

* `create` - (Defaults to 5 mins) Used when create the resource.
* `delete` - (Defaults to 5 mins) Used when delete the resource.


## Import

Load balancer backend server group server attachment can be imported using the id, e.g.

```shell
$ terraform import alicloud_slb_server_group_server_attachment.example <server_group_id>:<server_id>:<port>
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-029549e30ec664e61d39ec6382654a876b11e1db4fa9a968fb77f9e5499292de -->