---
subcategory: "Serverless App Engine (SAE)"
layout: "alicloud"
page_title: "Alicloud: alicloud_sae_config_map"
sidebar_current: "docs-alicloud-resource-sae-config-map"
description: |-
  Provides a Alicloud Serverless App Engine (SAE) Config Map resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_sae\_config\_map

Provides a Serverless App Engine (SAE) Config Map resource.

For information about Serverless App Engine (SAE) Config Map and how to use it, see [What is Config Map](https://help.aliyun.com/document_detail/97792.html).

-> **NOTE:** Available in v1.130.0+.

## Example Usage

Basic Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    /*Terraform Variables are not always the best fit for getting inputs in the context of Terraform CDK.
    You can read more about this at https://cdk.tf/variables*/
    const configMapName = new cdktf.TerraformVariable(this, "ConfigMapName", {
      default: "examplename",
    });
    const alicloudSaeNamespaceExample = new alicloud.saeNamespace.SaeNamespace(
      this,
      "example",
      {
        namespaceDescription: "your_description",
        namespaceId: "cn-hangzhou:yourname",
        namespaceName: "example_value",
      }
    );
    const alicloudSaeConfigMapExample = new alicloud.saeConfigMap.SaeConfigMap(
      this,
      "example_2",
      {
        data: cdktf.Fn.jsonencode({
          "env.home": "/root",
          "env.shell": "/bin/sh",
        }),
        name: configMapName.stringValue,
        namespaceId: cdktf.Token.asString(
          alicloudSaeNamespaceExample.namespaceId
        ),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudSaeConfigMapExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

The following arguments are supported:

* `data` - (Required) ConfigMap instance data.
* `description` - (Optional) The Description of ConfigMap.
* `name` - (Required, ForceNew) ConfigMap instance name.
* `namespaceId` - (Required, ForceNew) The NamespaceId of ConfigMap.It can contain 2 to 32 lowercase characters.The value is in format `{regionId}:{namespace}`

## Attributes Reference

The following attributes are exported:

* `id` - The resource ID in terraform of Config Map.

## Import

Serverless App Engine (SAE) Config Map can be imported using the id, e.g.

```shell
$ terraform import alicloud_sae_config_map.example <id>
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-3f8bbed3b1c302f7553c79cb65fb1d7356c9ec927f470def2d687f3c3c12eb4d -->