---
subcategory: "Cloud SSO"
layout: "alicloud"
page_title: "Alicloud: alicloud_cloud_sso_user_attachment"
sidebar_current: "docs-alicloud-resource-cloud-sso-user-attachment"
description: |-
  Provides a Alicloud Cloud SSO User Attachment resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_cloud\_sso\_user\_attachment

Provides a Cloud SSO User Attachment resource.

For information about Cloud SSO User Attachment and how to use it, see [What is User Attachment](https://www.alibabacloud.com/help/en/doc-detail/264683.htm).

-> **NOTE:** Available in v1.141.0+.

-> **NOTE:** Cloud SSO Only Support `cnShanghai` And `usWest1` Region

## Example Usage

Basic Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    /*Terraform Variables are not always the best fit for getting inputs in the context of Terraform CDK.
    You can read more about this at https://cdk.tf/variables*/
    const name = new cdktf.TerraformVariable(this, "name", {
      default: "example-name",
    });
    const dataAlicloudCloudSsoDirectoriesDefault =
      new alicloud.dataAlicloudCloudSsoDirectories.DataAlicloudCloudSsoDirectories(
        this,
        "default",
        {}
      );
    /*In most cases loops should be handled in the programming language context and 
    not inside of the Terraform context. If you are looping over something external, e.g. a variable or a file input
    you should consider using a for loop. If you are looping over something only known to Terraform, e.g. a result of a data source
    you need to keep this like it is.*/
    const alicloudCloudSsoDirectoryDefaultCount = cdktf.TerraformCount.of(
      cdktf.Token.asNumber(
        cdktf.conditional(
          cdktf.Op.gt(
            cdktf.Fn.lengthOf(dataAlicloudCloudSsoDirectoriesDefault.ids),
            0
          ),
          0,
          1
        )
      )
    );
    const alicloudCloudSsoDirectoryDefault =
      new alicloud.cloudSsoDirectory.CloudSsoDirectory(this, "default_2", {
        directoryName: name.stringValue,
        count: alicloudCloudSsoDirectoryDefaultCount,
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudCloudSsoDirectoryDefault.overrideLogicalId("default");
    const alicloudCloudSsoGroupDefault =
      new alicloud.cloudSsoGroup.CloudSsoGroup(this, "default_3", {
        description: name.stringValue,
        directoryId: cdktf.Token.asString(
          cdktf.conditional(
            cdktf.Op.gt(
              cdktf.Fn.lengthOf(dataAlicloudCloudSsoDirectoriesDefault.ids),
              0
            ),
            cdktf.propertyAccess(dataAlicloudCloudSsoDirectoriesDefault.ids, [
              "0",
            ]),
            cdktf.propertyAccess(
              cdktf.Fn.concat([
                cdktf.propertyAccess(alicloudCloudSsoDirectoryDefault, [
                  "*",
                  "id",
                ]),
                [""],
              ]),
              ["0"]
            )
          )
        ),
        groupName: name.stringValue,
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudCloudSsoGroupDefault.overrideLogicalId("default");
    const alicloudCloudSsoUserDefault = new alicloud.cloudSsoUser.CloudSsoUser(
      this,
      "default_4",
      {
        directoryId: cdktf.Token.asString(
          cdktf.conditional(
            cdktf.Op.gt(
              cdktf.Fn.lengthOf(dataAlicloudCloudSsoDirectoriesDefault.ids),
              0
            ),
            cdktf.propertyAccess(dataAlicloudCloudSsoDirectoriesDefault.ids, [
              "0",
            ]),
            cdktf.propertyAccess(
              cdktf.Fn.concat([
                cdktf.propertyAccess(alicloudCloudSsoDirectoryDefault, [
                  "*",
                  "id",
                ]),
                [""],
              ]),
              ["0"]
            )
          )
        ),
        userName: name.stringValue,
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudCloudSsoUserDefault.overrideLogicalId("default");
    const alicloudCloudSsoUserAttachmentDefault =
      new alicloud.cloudSsoUserAttachment.CloudSsoUserAttachment(
        this,
        "default_5",
        {
          directoryId: cdktf.Token.asString(
            cdktf.conditional(
              cdktf.Op.gt(
                cdktf.Fn.lengthOf(dataAlicloudCloudSsoDirectoriesDefault.ids),
                0
              ),
              cdktf.propertyAccess(dataAlicloudCloudSsoDirectoriesDefault.ids, [
                "0",
              ]),
              cdktf.propertyAccess(
                cdktf.Fn.concat([
                  cdktf.propertyAccess(alicloudCloudSsoDirectoryDefault, [
                    "*",
                    "id",
                  ]),
                  [""],
                ]),
                ["0"]
              )
            )
          ),
          groupId: cdktf.Token.asString(alicloudCloudSsoGroupDefault.groupId),
          userId: cdktf.Token.asString(alicloudCloudSsoUserDefault.userId),
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudCloudSsoUserAttachmentDefault.overrideLogicalId("default");
  }
}

```

## Argument Reference

The following arguments are supported:

* `directoryId` - (Required, ForceNew) The ID of the Directory.
* `groupId` - (Required, ForceNew) The Group ID.
* `userId` - (Required, ForceNew) The User ID.

## Attributes Reference

The following attributes are exported:

* `id` - The resource ID of User Attachment. The value formats as `<directory_id>:<group_id>:<user_id>`.

## Import

Cloud SSO User Attachment can be imported using the id, e.g.

```shell
$ terraform import alicloud_cloud_sso_user_attachment.example <directory_id>:<group_id>:<user_id>
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-d266f7dbcc06127cbb9ad33a295d49d5b121059587531c839e73fdab5c531690 -->