---
subcategory: "Global Accelerator (GA)"
layout: "alicloud"
page_title: "Alicloud: alicloud_ga_forwarding_rule"
sidebar_current: "docs-alicloud-resource-ga-forwarding-rule"
description: |-
  Provides a Alicloud Global Accelerator (GA) Forwarding Rule resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_ga\_forwarding\_rule

Provides a Global Accelerator (GA) Forwarding Rule resource.

For information about Global Accelerator (GA) Forwarding Rule and how to use it, see [What is Forwarding Rule](https://www.alibabacloud.com/help/zh/doc-detail/205815.htm).

-> **NOTE:** Available in v1.120.0+.

## Example Usage

Basic Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const alicloudEipAddressExample = new alicloud.eipAddress.EipAddress(
      this,
      "example",
      {
        bandwidth: "10",
        internetChargeType: "PayByBandwidth",
      }
    );
    const alicloudGaAcceleratorExample =
      new alicloud.gaAccelerator.GaAccelerator(this, "example_1", {
        acceleratorName: "ga-tf",
        autoRenewDuration: cdktf.Token.asNumber("2"),
        autoUseCoupon: false,
        description: "ga-tf description",
        duration: 3,
        renewalStatus: "AutoRenewal",
        spec: "2",
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudGaAcceleratorExample.overrideLogicalId("example");
    const alicloudGaBandwidthPackageExample =
      new alicloud.gaBandwidthPackage.GaBandwidthPackage(this, "example_2", {
        autoPay: true,
        autoUseCoupon: false,
        bandwidth: 20,
        bandwidthPackageName: "bandwidth_package_name_tf",
        bandwidthType: "Basic",
        description: "bandwidth_package_name_tf_description",
        duration: cdktf.Token.asString(1),
        paymentType: "Subscription",
        timeouts: [
          {
            create: "5m",
          },
        ],
        type: "Basic",
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudGaBandwidthPackageExample.overrideLogicalId("example");
    const alicloudGaBandwidthPackageAttachmentExample =
      new alicloud.gaBandwidthPackageAttachment.GaBandwidthPackageAttachment(
        this,
        "example_3",
        {
          acceleratorId: cdktf.Token.asString(alicloudGaAcceleratorExample.id),
          bandwidthPackageId: cdktf.Token.asString(
            alicloudGaBandwidthPackageExample.id
          ),
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudGaBandwidthPackageAttachmentExample.overrideLogicalId("example");
    const alicloudGaIpSetExample = new alicloud.gaIpSet.GaIpSet(
      this,
      "example_4",
      {
        accelerateRegionId: "cn-shanghai",
        acceleratorId: cdktf.Token.asString(alicloudGaAcceleratorExample.id),
        bandwidth: cdktf.Token.asNumber("20"),
        dependsOn: [alicloudGaBandwidthPackageAttachmentExample],
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudGaIpSetExample.overrideLogicalId("example");
    const alicloudGaListenerExample = new alicloud.gaListener.GaListener(
      this,
      "example_5",
      {
        acceleratorId: cdktf.Token.asString(alicloudGaAcceleratorExample.id),
        clientAffinity: "SOURCE_IP",
        dependsOn: [alicloudGaBandwidthPackageAttachmentExample],
        description: "alicloud_ga_listener_description",
        name: "alicloud_ga_listener_tf",
        portRanges: [
          {
            fromPort: 60,
            toPort: 60,
          },
        ],
        protocol: "HTTP",
        proxyProtocol: true,
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudGaListenerExample.overrideLogicalId("example");
    const alicloudGaEndpointGroupVirtual =
      new alicloud.gaEndpointGroup.GaEndpointGroup(this, "virtual", {
        acceleratorId: cdktf.Token.asString(alicloudGaAcceleratorExample.id),
        description: "alicloud_ga_endpoint_group_description",
        endpointConfigurations: [
          {
            enableClientipPreservation: true,
            endpoint: cdktf.Token.asString(alicloudEipAddressExample.ipAddress),
            type: "PublicIp",
            weight: cdktf.Token.asNumber("20"),
          },
        ],
        endpointGroupRegion: "cn-shanghai",
        endpointGroupType: "virtual",
        endpointRequestProtocol: "HTTPS",
        healthCheckIntervalSeconds: 4,
        healthCheckPath: "/path",
        listenerId: cdktf.Token.asString(alicloudGaListenerExample.id),
        name: "alicloud_ga_endpoint_group_name",
        portOverrides: {
          endpointPort: 80,
          listenerPort: 60,
        },
        thresholdCount: 4,
        trafficPercentage: 20,
      });
    const alicloudGaForwardingRuleExample =
      new alicloud.gaForwardingRule.GaForwardingRule(this, "example_7", {
        acceleratorId: cdktf.Token.asString(alicloudGaAcceleratorExample.id),
        forwardingRuleName: "forwarding_rule_name",
        listenerId: cdktf.Token.asString(alicloudGaListenerExample.id),
        priority: 2,
        ruleActions: [
          {
            forwardGroupConfig: {
              serverGroupTuples: [
                {
                  endpointGroupId: cdktf.Token.asString(
                    alicloudGaEndpointGroupVirtual.id
                  ),
                },
              ],
            },
            order: cdktf.Token.asNumber("40"),
            ruleActionType: "ForwardGroup",
          },
        ],
        ruleConditions: [
          {
            pathConfig: {
              values: ["/testpathconfig"],
            },
            ruleConditionType: "Path",
          },
          {
            hostConfig: [
              {
                values: ["www.test.com"],
              },
            ],
            ruleConditionType: "Host",
          },
        ],
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudGaForwardingRuleExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

The following arguments are supported:

* `priority` - (Optional) Forwarding policy priority.
* `forwardingRuleName` - (Optional) Forwarding policy name. The length of the name is 2-128 English or Chinese characters. It must start with uppercase and lowercase letters or Chinese characters. It can contain numbers, half width period (.), underscores (_) And dash (-).
* `ruleConditions` - (Required) Forwarding condition list.
* `ruleActions` - (Required) Forward action.
* `acceleratorId` - (Required, ForceNew) The ID of the Global Accelerator instance.
* `listenerId` - (Required, ForceNew) The ID of the listener.

#### Block rule_conditions

The rule_conditions supports the following:

* `ruleConditionType` (Required) Forwarding condition type. Valid value: `host`, `path`. 
* `pathConfig` (Optional) Path configuration information.
* `hostConfig` (Optional) Domain name configuration information.

#### Block path_config

The path_config supports the following:

* `values` (Optional) The length of the path is 1-128 characters. It must start with a forward slash (/), and can only contain letters, numbers, dollar sign ($), dash (-), and underscores (_) , half width full stop (.), plus sign (+), forward slash (/), and (&), wavy line (~), at (@), half width colon (:), apostrophe ('). It supports asterisk (*) and half width question mark (?) as wildcards.

#### Block host_config

The host_config supports the following:

* `values` (Optional) The domain name is 3-128 characters long, which can contain letters, numbers, dashes (-) and width period (.), and supports the use of asterisk (*) and width question mark (?) as wildcard characters.

#### Block rule_actions

The rule_actions supports the following:

* `order` (Required) Forwarding priority.
* `ruleActionType` (Required) Forward action type. Default: forwardgroup.
* `forwardGroupConfig` (Required) Forwarding configuration. 

#### Block forward_group_config

The forward_group_config supports the following:

* `serverGroupTuples` (Required) Terminal node group configuration.

#### Block server_group_tuples

The server_group_tuples supports the following:

* `endpointGroupId` (Required) Terminal node group ID.
                                                                        
## Attributes Reference

The following attributes are exported:

* `id` - The resource ID in terraform of Forwarding Rule. The value is formate as `<accelerator_id>:<listener_id>:<forwarding_rule_id>`.
* `forwardingRuleId` - Forwarding Policy ID.
* `forwardingRuleStatus` - Forwarding Policy Status.

### Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/docs/configuration-0-11/resources.html#timeouts) for certain actions:

* `create` - (Defaults to 3 mins) Used when create the Endpoint Forwarding Rule.
* `delete` - (Defaults to 3 mins) Used when delete the Endpoint Forwarding Rule.
* `update` - (Defaults to 3 mins) Used when update the Endpoint Forwarding Rule.

## Import

Ga Forwarding Rule can be imported using the id, e.g.

```shell
$ terraform import alicloud_ga_forwarding_rule.example <id>
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-a5c75fac9af000950c70de81e25dfaa5a183116fa78e5ec9619f944cd1d9a6a2 -->