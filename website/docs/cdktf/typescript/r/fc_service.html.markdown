---
subcategory: "Function Compute Service (FC)"
layout: "alicloud"
page_title: "Alicloud: alicloud_fc_service"
sidebar_current: "docs-alicloud-resource-fc"
description: |-
  Provides a Alicloud Function Compute Service resource. The resource is the base of launching Function and Trigger configuration.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_fc\_service

Provides a Alicloud Function Compute Service resource. The resource is the base of launching Function and Trigger configuration.
 For information about Service and how to use it, see [What is Function Compute](https://www.alibabacloud.com/help/doc-detail/52895.htm).

-> **NOTE:** The resource requires a provider field 'account_id'. [See account_id](https://www.terraform.io/docs/providers/alicloud/index.html#account_id).

-> **NOTE:** If you happen the error "Argument 'internetAccess' is not supported", you need to log on web console and click button "Apply VPC Function"
which is in the upper of [Function Service Web Console](https://fc.console.aliyun.com/) page.

-> **NOTE:** Currently not all regions support Function Compute Service.
For more details supported regions, see [Service endpoints](https://www.alibabacloud.com/help/doc-detail/52984.htm)

## Example Usage

Basic Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    /*Terraform Variables are not always the best fit for getting inputs in the context of Terraform CDK.
    You can read more about this at https://cdk.tf/variables*/
    const name = new cdktf.TerraformVariable(this, "name", {
      default: "tf-testaccalicloudfcservice",
    });
    const alicloudLogProjectFoo = new alicloud.logProject.LogProject(
      this,
      "foo",
      {
        name: name.stringValue,
      }
    );
    const alicloudLogStoreFoo = new alicloud.logStore.LogStore(this, "foo_2", {
      name: name.stringValue,
      project: cdktf.Token.asString(alicloudLogProjectFoo.name),
    });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudLogStoreFoo.overrideLogicalId("foo");
    const alicloudRamRoleRole = new alicloud.ramRole.RamRole(this, "role", {
      description: "this is a test",
      document:
        '  {\n      "Statement": [\n        {\n          "Action": "sts:AssumeRole",\n          "Effect": "Allow",\n          "Principal": {\n            "Service": [\n              "fc.aliyuncs.com"\n            ]\n          }\n        }\n      ],\n      "Version": "1"\n  }\n',
      force: true,
      name: name.stringValue,
    });
    const alicloudRamRolePolicyAttachmentAttach =
      new alicloud.ramRolePolicyAttachment.RamRolePolicyAttachment(
        this,
        "attach",
        {
          policyName: "AliyunLogFullAccess",
          policyType: "System",
          roleName: cdktf.Token.asString(alicloudRamRoleRole.name),
        }
      );
    const alicloudFcServiceFoo = new alicloud.fcService.FcService(
      this,
      "foo_5",
      {
        dependsOn: [alicloudRamRolePolicyAttachmentAttach],
        description: "tf unit test",
        logConfig: {
          enableInstanceMetrics: true,
          enableRequestMetrics: true,
          logstore: cdktf.Token.asString(alicloudLogStoreFoo.name),
          project: cdktf.Token.asString(alicloudLogProjectFoo.name),
        },
        name: name.stringValue,
        role: cdktf.Token.asString(alicloudRamRoleRole.arn),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudFcServiceFoo.overrideLogicalId("foo");
  }
}

```

## Module Support

You can use to the existing [fc module](https://registry.terraform.io/modules/terraform-alicloud-modules/fc/alicloud) to create a service and a function quickly and then set several triggers for it.

## Argument Reference

The following arguments are supported:

* `name` - (ForceNew) The Function Compute Service name. It is the only in one Alicloud account and is conflict with `namePrefix`.
* `namePrefix` - (ForceNew) Setting a prefix to get a only name. It is conflict with `name`.
* `description` - (Optional) The Function Compute Service description.
* `internetAccess` - (Optional) Whether to allow the Service to access Internet. Default to "true".
* `role` - (Optional) RAM role arn attached to the Function Compute Service. This governs both who / what can invoke your Function, as well as what resources our Function has access to. See [User Permissions](https://www.alibabacloud.com/help/doc-detail/52885.htm) for more details.
* `logConfig` - (Optional) Provide this to store your Function Compute Service logs. Fields documented below. See [Create a Service](https://www.alibabacloud.com/help/doc-detail/51924.htm). `logConfig` requires the following: (**NOTE:** If both `project` and `logstore` are empty, log_config is considered to be empty or unset.)
  * `project` - (Required) The project name of the Alicloud Simple Log Service.
  * `logstore` - (Required) The log store name of Alicloud Simple Log Service.
  * `enableRequestMetrics` - (Optional, available in 1.183.0+) Enable request level metrics.
  * `enableInstanceMetrics` - (Optional, available in 1.183.0+) Enable instance level metrics.
* `vpcConfig` - (Optional) Provide this to allow your Function Compute Service to access your VPC. Fields documented below. See [Function Compute Service in VPC](https://www.alibabacloud.com/help/faq-detail/72959.htm). `vpcConfig` requires the following: (**NOTE:** If both `vswitchIds` and `securityGroupId` are empty, vpc_config is considered to be empty or unset.)
  * `vswitchIds` - (Required) A list of vswitch IDs associated with the Function Compute Service.
  * `securityGroupId` - (Required) A security group ID associated with the Function Compute Service.
* `nasConfig` - (Optional, available in 1.96.0+) Provide [NAS configuration](https://www.alibabacloud.com/help/doc-detail/87401.htm) to allow Function Compute Service to access your NAS resources. `nasConfig` requires the following:
  * `userId` - (Required) The user id of your NAS file system.
  * `groupId` - (Required) The group id of your NAS file system.
  * `mountPoints` - (Required) Config the NAS mount points, including following attributes:
    * `serverAddr` - (Required) The address of the remote NAS directory.
    * `mountDir` - (Required) The local address where to mount your remote NAS directory.
* `tracingConfig` - (Optional, available in 1.183.0+) Provide this to allow your Function Compute to report tracing information. Fields documented below. See [Function Compute Tracing Config](https://help.aliyun.com/document_detail/189805.html). `tracingConfig` requires the following: (**NOTE:** If both `type` and `params` are empty, tracing_config is considered to be empty or unset.)
  * `type` - (Required) Tracing protocol type. Currently, only Jaeger is supported.
  * `params` - (Required) Tracing parameters, which type is map[string]string. When the protocol type is Jaeger, the key is "endpoint" and the value is your tracing intranet endpoint. For example endpoint: http://tracing-analysis-dc-hz.aliyuncs.com/adapt_xxx/api/traces.
* `publish` - (Optional, available in 1.101.0+) Whether to publish creation/change as new Function Compute Service Version. Defaults to `false`.

## Attributes Reference

The following arguments are exported:

* `id` - The ID of the FC Service. The value is the same as name.
* `serviceId` - The Function Compute Service ID.
* `lastModified` - The date this resource was last modified.
* `version` - The latest published version of your Function Compute Service.

## Import

Function Compute Service can be imported using the id or name, e.g.

```shell
$ terraform import alicloud_fc_service.foo my-fc-service
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-088a0d7799566629b030d9d40015e2338aac74e7b369f6ec1bdfff5ef1b9fb45 -->