---
subcategory: "Log Service (SLS)"
layout: "alicloud"
page_title: "Alicloud: alicloud_log_dashboard"
sidebar_current: "docs-alicloud-resource-log-dashboard"
description: |-
  Provides a Alicloud Log Dashboard resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_log\_dashboard
The dashboard is a real-time data analysis platform provided by the log service. You can display frequently used query and analysis statements in the form of charts and save statistical charts to the dashboard.
[Refer to details](https://www.alibabacloud.com/help/doc-detail/102530.htm).

-> **NOTE:** Available in 1.86.0, parameter "action" in char_list is supported since 1.164.0+. 

## Example Usage

Basic Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    new alicloud.logDashboard.LogDashboard(this, "example", {
      attribute: '{\\"type\\":\\"grid\\"}',
      charList:
        '  [\n    {\n      "action": {},\n      "title":"new_title",\n      "type":"map",\n      "search":{\n        "logstore":"tf-logstore",\n        "topic":"new_topic",\n        "query":"* | SELECT COUNT(name) as ct_name, COUNT(product) as ct_product, name,product GROUP BY name,product",\n        "start":"-86400s",\n        "end":"now"\n      },\n      "display":{\n        "xAxis":[\n          "ct_name"\n        ],\n        "yAxis":[\n          "ct_product"\n        ],\n        "xPos":0,\n        "yPos":0,\n        "width":10,\n        "height":12,\n        "displayName":"xixihaha911"\n      }\n    }\n  ]\n',
      dashboardName: "tf-dashboard",
      projectName: "tf-project",
    });
    new alicloud.logProject.LogProject(this, "default", {
      description: "tf unit test",
      name: "tf-project",
    });
    const alicloudLogStoreDefault = new alicloud.logStore.LogStore(
      this,
      "default_2",
      {
        name: "tf-logstore",
        project: "tf-project",
        retentionPeriod: cdktf.Token.asNumber("3000"),
        shardCount: 1,
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudLogStoreDefault.overrideLogicalId("default");
  }
}

```


## Argument Reference

The following arguments are supported:

* `projectName` - (Required, ForceNew) The name of the log project. It is the only in one Alicloud account.
* `dashboardName` - (Required, ForceNew) The name of the Log Dashboard.
* `charList` - (Required) Configuration of charts in the dashboard.
* `displayName` - (Optional) Dashboard alias.
* `attribute` - (Optional, Available in 1.183.0+) Dashboard attribute.

## Attributes Reference

The following attributes are exported:

* `id` - The ID of the Log Dashboard. It sames as its name.

## Import

Log Dashboard can be imported using the id or name, e.g.

```shell
$ terraform import alicloud_log_dashboard.example tf-project:tf-logstore:tf-dashboard
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-185a0caa6818f3edd8e4f32993a340051d3bb0fbc7d2e9d09a752749c8571ba4 -->