---
subcategory: "Hybrid Backup Recovery (HBR)"
layout: "alicloud"
page_title: "Alicloud: alicloud_hbr_nas_backup_plan"
sidebar_current: "docs-alicloud-resource-hbr-nas-backup-plan"
description: |-
  Provides a Alicloud Hybrid Backup Recovery (HBR) Nas Backup Plan resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_hbr\_nas\_backup\_plan

Provides a HBR Nas Backup Plan resource.

For information about HBR Nas Backup Plan and how to use it, see [What is Nas Backup Plan](https://www.alibabacloud.com/help/doc-detail/132248.htm).

-> **NOTE:** Available in v1.132.0+.

## Example Usage

Basic Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    /*Terraform Variables are not always the best fit for getting inputs in the context of Terraform CDK.
    You can read more about this at https://cdk.tf/variables*/
    const name = new cdktf.TerraformVariable(this, "name", {
      default: "tf-testAccHBRNas",
    });
    const alicloudHbrVaultDefault = new alicloud.hbrVault.HbrVault(
      this,
      "default",
      {
        vaultName: name.stringValue,
      }
    );
    const alicloudNasFileSystemDefault =
      new alicloud.nasFileSystem.NasFileSystem(this, "default_2", {
        description: name.stringValue,
        encryptType: cdktf.Token.asNumber("1"),
        protocolType: "NFS",
        storageType: "Performance",
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudNasFileSystemDefault.overrideLogicalId("default");
    const dataAlicloudNasFileSystemsDefault =
      new alicloud.dataAlicloudNasFileSystems.DataAlicloudNasFileSystems(
        this,
        "default_3",
        {
          descriptionRegex: cdktf.Token.asString(
            alicloudNasFileSystemDefault.description
          ),
          protocolType: "NFS",
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAlicloudNasFileSystemsDefault.overrideLogicalId("default");
    const alicloudHbrNasBackupPlanDefault =
      new alicloud.hbrNasBackupPlan.HbrNasBackupPlan(this, "default_4", {
        backupType: "COMPLETE",
        createTime: cdktf.Token.asString(
          cdktf.propertyAccess(dataAlicloudNasFileSystemsDefault.systems, [
            "0",
            "create_time",
          ])
        ),
        dependsOn: ["alicloud_nas_file_system.default"],
        fileSystemId: cdktf.Token.asString(alicloudNasFileSystemDefault.id),
        nasBackupPlanName: name.stringValue,
        path: ["/"],
        retention: "2",
        schedule: "I|1602673264|PT2H",
        vaultId: cdktf.Token.asString(alicloudHbrVaultDefault.id),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudHbrNasBackupPlanDefault.overrideLogicalId("default");
  }
}

```

## Argument Reference

The following arguments are supported:

* `nasBackupPlanName` - (Required) The name of the backup plan. 1~64 characters, the backup plan name of each data source type in a single warehouse required to be unique.
* `vaultId` - (Required, ForceNew) The ID of Backup vault.
* `retention` - (Required) Backup retention days, the minimum is 1.
* `schedule` - (Required) Backup strategy. Optional format: `i|{startTime}|{interval}`. It means to execute a backup task every `{interval}` starting from `{startTime}`. The backup task for the elapsed time will not be compensated. If the last backup task has not completed yet, the next backup task will not be triggered.
    * `startTime` Backup start time, UNIX time seconds.
    * `interval` ISO8601 time interval. E.g: `pt1H` means one hour apart. `p1D` means one day apart.
* `disabled` - (Optional) Whether to disable the backup task. Valid values: `true`, `false`.
* `backupType` - (Required, ForceNew) Backup type. Valid values: `complete`.
* `fileSystemId` - (Required, ForceNew) The File System ID of Nas.
* `createTime` - (Optional, Deprecated) This field has been deprecated from provider version 1.153.0+. The creation time of NAS file system. **Note** The time format of the API adopts the ISO 8601, such as `20210709T15:45:30Cst` or `20210709T07:45:30Z`.
* `options` - (Optional) This parameter specifies whether to use Windows VSS to define a backup path.
* `path` - (Required) List of backup path. Up to 65536 characters. e.g.`["/home", "/var"]`. **Note** You should at least specify a backup path, empty array not allowed here.
* `crossAccountType` - (Optional, ForceNew, Computed, Available in v1.189.0+) The type of the cross account backup. Valid values: `selfAccount`, `crossAccount`.
* `crossAccountUserId` - (Optional, ForceNew, Available in v1.189.0+) The original account ID of the cross account backup managed by the current account.
* `crossAccountRoleName` - (Optional, ForceNew, Available in v1.189.0+) The role name created in the original account RAM backup by the cross account managed by the current account.

-> **Note** `alicloudHbrNasBackupPlan` depends on the `alicloudNasFileSystem` and creates a mount point on the file system. If this dependency has not declared, the file system may not be deleted correctly.

## Attributes Reference

The following attributes are exported:

* `id` - The resource ID in terraform of Nas Backup Plan.

## Import

HBR Nas Backup Plan can be imported using the id, e.g.

```shell
$ terraform import alicloud_hbr_nas_backup_plan.example <id>
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-7f491e10c154b57b5ac9d7b799c0c7da492a1e6ac15732440eaa4c9362453315 -->