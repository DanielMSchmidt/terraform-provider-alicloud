---
subcategory: "Private Zone"
layout: "alicloud"
page_title: "Alicloud: alicloud_pvtz_zone_attachment"
sidebar_current: "docs-alicloud-resource-pvtz-zone-attachment"
description: |-
  Provides vpcs bound to Alicloud Private Zone resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_pvtz\_zone\_attachment

Provides vpcs bound to Alicloud Private Zone resource.

-> **NOTE:** Terraform will auto bind vpc to a Private Zone while it uses `alicloudPvtzZoneAttachment` to build a Private Zone and VPC binding resource.

## Example Usage

Using `vpcIds` to attach being in same region several vpc instances to a private zone

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const alicloudPvtzZoneZone = new alicloud.pvtzZone.PvtzZone(this, "zone", {
      name: "foo.test.com",
    });
    const alicloudVpcFirst = new alicloud.vpc.Vpc(this, "first", {
      cidrBlock: "172.16.0.0/12",
      name: "the-first-vpc",
    });
    const alicloudVpcSecond = new alicloud.vpc.Vpc(this, "second", {
      cidrBlock: "172.16.0.0/16",
      name: "the-second-vpc",
    });
    new alicloud.pvtzZoneAttachment.PvtzZoneAttachment(
      this,
      "zone-attachment",
      {
        vpcIds: [
          cdktf.Token.asString(alicloudVpcFirst.id),
          cdktf.Token.asString(alicloudVpcSecond.id),
        ],
        zoneId: cdktf.Token.asString(alicloudPvtzZoneZone.id),
      }
    );
  }
}

```

Using `vpcs` to attach being in same region several vpc instances to a private zone

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const alicloudPvtzZoneZone = new alicloud.pvtzZone.PvtzZone(this, "zone", {
      name: "foo.test.com",
    });
    const alicloudVpcFirst = new alicloud.vpc.Vpc(this, "first", {
      cidrBlock: "172.16.0.0/12",
      name: "the-first-vpc",
    });
    const alicloudVpcSecond = new alicloud.vpc.Vpc(this, "second", {
      cidrBlock: "172.16.0.0/16",
      name: "the-second-vpc",
    });
    new alicloud.pvtzZoneAttachment.PvtzZoneAttachment(
      this,
      "zone-attachment",
      {
        vpcs: [
          {
            vpcId: cdktf.Token.asString(alicloudVpcFirst.id),
          },
          {
            vpcId: cdktf.Token.asString(alicloudVpcSecond.id),
          },
        ],
        zoneId: cdktf.Token.asString(alicloudPvtzZoneZone.id),
      }
    );
  }
}

```

Using `vpcs` to attach being in different regions several vpc instances to a private zone


```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const alicloudEu = new alicloud.provider.AlicloudProvider(
      this,
      "alicloud",
      {
        alias: "eu",
        region: "eu-central-1",
      }
    );
    const alicloudPvtzZoneZone = new alicloud.pvtzZone.PvtzZone(this, "zone", {
      name: "foo.test.com",
    });
    const alicloudVpcFirst = new alicloud.vpc.Vpc(this, "first", {
      cidrBlock: "172.16.0.0/12",
      name: "the-first-vpc",
    });
    const alicloudVpcSecond = new alicloud.vpc.Vpc(this, "second", {
      cidrBlock: "172.16.0.0/16",
      name: "the-second-vpc",
    });
    const alicloudVpcThird = new alicloud.vpc.Vpc(this, "third", {
      cidrBlock: "172.16.0.0/16",
      name: "the-third-vpc",
      provider: alicloudEu,
    });
    new alicloud.pvtzZoneAttachment.PvtzZoneAttachment(
      this,
      "zone-attachment",
      {
        vpcs: [
          {
            vpcId: cdktf.Token.asString(alicloudVpcFirst.id),
          },
          {
            vpcId: cdktf.Token.asString(alicloudVpcSecond.id),
          },
          {
            regionId: "eu-central-1",
            vpcId: cdktf.Token.asString(alicloudVpcThird.id),
          },
        ],
        zoneId: cdktf.Token.asString(alicloudPvtzZoneZone.id),
      }
    );
  }
}

```

## Argument Reference

The following arguments are supported:

* `zoneId` - (Required, ForceNew) The name of the Private Zone Record.
* `vpcIds` - (Optional, Conflict with `vpcs`) The id List of the VPC with the same region, for example:["vpc-1","vpc-2"]. 
* `vpcs` - (Optional, Conflict with `vpcIds`, Available in 1.62.1+) The List of the VPC:
    * `vpcId` - (Required) The Id of the vpc.
    * `regionId` - (Optional) The region of the vpc. If not set, the current region will instead of.
    
    Recommend to use `vpcs`.

* `lang` - (Optional, ForceNew, Available in 1.62.1+) The language of code.
* `userClientIp` - (Optional, ForceNew, Available in 1.62.1+) The user custom IP address.

### Timeouts

-> **NOTE:** Available in 1.110.0+.

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/docs/configuration-0-11/resources.html#timeouts) for certain actions:

* `create` - (Defaults to 5 mins) Used when creating the Private Zone Attachment.
* `update` - (Defaults to 5 mins) Used when updating the Private Zone Attachment.
* `delete` - (Defaults to 5 mins) Used when terminating the Private Zone Attachment. 

## Attributes Reference

The following attributes are exported:

* `id` - The ID of the Private Zone VPC Attachment. It sames with `zoneId`.

## Import

Private Zone attachment can be imported using the id(same with `zoneId`), e.g.

```shell
$ terraform import alicloud_pvtz_zone_attachment.example abc123456
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-8df826793b5bd695374e482a2c695b542399272a30052090521346720334f16a -->