---
subcategory: "ECS"
layout: "alicloud"
page_title: "Alicloud: alicloud_image_export"
sidebar_current: "docs-alicloud-resource-image-export"
description: |-
  Provides an ECS image export resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_image\_export

Export a custom image to the OSS bucket in the same region as the custom image.

-> **NOTE:** If you create an ECS instance using a mirror image and create a system disk snapshot again, exporting a custom image created from the system disk snapshot is not supported.

-> **NOTE:** Support for exporting custom images that include data disk snapshot information in the image. The number of data disks cannot exceed 4 and the maximum capacity of a single data disk cannot exceed 500 GiB.

-> **NOTE:** Before exporting the image, you must authorize the cloud server ECS official service account to write OSS permissions through RAM.

-> **NOTE:** Available in 1.68.0+.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
import * as random from "./.gen/providers/random";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    /*The following providers are missing schema information and might need manual adjustments to synthesize correctly: random.
    For a more precise conversion please use the --provider flag in convert.*/
    const alicloudVpcDefault = new alicloud.vpc.Vpc(this, "default", {
      cidrBlock: "172.17.3.0/24",
      vpcName: "terraform-example",
    });
    const randomIntegerDefault = new random.integer.Integer(this, "default_1", {
      max: 99999,
      min: 10000,
    });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    randomIntegerDefault.overrideLogicalId("default");
    const dataAlicloudImagesDefault =
      new alicloud.dataAlicloudImages.DataAlicloudImages(this, "default_2", {
        nameRegex: "^ubuntu_[0-9]+_[0-9]+_x64*",
        owners: "system",
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAlicloudImagesDefault.overrideLogicalId("default");
    const dataAlicloudInstanceTypesDefault =
      new alicloud.dataAlicloudInstanceTypes.DataAlicloudInstanceTypes(
        this,
        "default_3",
        {
          instanceTypeFamily: "ecs.sn1ne",
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAlicloudInstanceTypesDefault.overrideLogicalId("default");
    const dataAlicloudZonesDefault =
      new alicloud.dataAlicloudZones.DataAlicloudZones(this, "default_4", {
        availableResourceCreation: "Instance",
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAlicloudZonesDefault.overrideLogicalId("default");
    const alicloudOssBucketDefault = new alicloud.ossBucket.OssBucket(
      this,
      "default_5",
      {
        bucket: "example-value-${" + randomIntegerDefault.result + "}",
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudOssBucketDefault.overrideLogicalId("default");
    const alicloudSecurityGroupDefault =
      new alicloud.securityGroup.SecurityGroup(this, "default_6", {
        name: "terraform-example",
        vpcId: cdktf.Token.asString(alicloudVpcDefault.id),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudSecurityGroupDefault.overrideLogicalId("default");
    const alicloudVswitchDefault = new alicloud.vswitch.Vswitch(
      this,
      "default_7",
      {
        cidrBlock: "172.17.3.0/24",
        vpcId: cdktf.Token.asString(alicloudVpcDefault.id),
        vswitchName: "terraform-example",
        zoneId: cdktf.Token.asString(
          cdktf.propertyAccess(dataAlicloudZonesDefault.zones, ["0", "id"])
        ),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudVswitchDefault.overrideLogicalId("default");
    const alicloudInstanceDefault = new alicloud.instance.Instance(
      this,
      "default_8",
      {
        availabilityZone: cdktf.Token.asString(
          cdktf.propertyAccess(dataAlicloudZonesDefault.zones, ["0", "id"])
        ),
        imageId: cdktf.Token.asString(
          cdktf.propertyAccess(dataAlicloudImagesDefault.ids, ["0"])
        ),
        instanceName: "terraform-example",
        instanceType: cdktf.Token.asString(
          cdktf.propertyAccess(dataAlicloudInstanceTypesDefault.ids, ["0"])
        ),
        internetMaxBandwidthOut: 10,
        securityGroups: [cdktf.Token.asString(alicloudSecurityGroupDefault.id)],
        vswitchId: cdktf.Token.asString(alicloudVswitchDefault.id),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudInstanceDefault.overrideLogicalId("default");
    const alicloudImageDefault = new alicloud.image.Image(this, "default_9", {
      description: "terraform-example",
      imageName: "terraform-example",
      instanceId: cdktf.Token.asString(alicloudInstanceDefault.id),
    });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudImageDefault.overrideLogicalId("default");
    const alicloudImageExportDefault = new alicloud.imageExport.ImageExport(
      this,
      "default_10",
      {
        imageId: cdktf.Token.asString(alicloudImageDefault.id),
        ossBucket: cdktf.Token.asString(alicloudOssBucketDefault.id),
        ossPrefix: "ecsExport",
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudImageExportDefault.overrideLogicalId("default");
  }
}

```

## Argument Reference

The following arguments are supported:

* `imageId` - (Required, ForceNew) The source image ID.
* `ossBucket` - (Required, ForceNew) Save the exported OSS bucket.
* `ossPrefix` - (Optional, ForceNew) The prefix of your OSS Object. It can be composed of numbers or letters, and the character length is 1 ~ 30.
   
## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/docs/configuration-0-11/resources.html#timeouts) for certain actions:

* `create` - (Defaults to 20 mins) Used when exporting the image (until it reaches the initial `available` status). 
   
   
## Attributes Reference0
 
 The following attributes are exported:
 
* `id` - ID of the image.

<!-- cache-key: cdktf-0.17.0-pre.15 input-3cc3dbb59dec60711d58ffadd329883f31bacb9e6728b3753196c0b3c6e9380b -->