---
subcategory: "ECS"
layout: "alicloud"
page_title: "Alicloud: alicloud_ecs_snapshot_group"
sidebar_current: "docs-alicloud-resource-ecs-snapshot-group"
description: |-
  Provides a Alicloud ECS Snapshot Group resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_ecs\_snapshot\_group

Provides a ECS Snapshot Group resource.

For information about ECS Snapshot Group and how to use it, see [What is Snapshot Group](https://www.alibabacloud.com/help/en/doc-detail/210939.html).

-> **NOTE:** Available in v1.160.0+.

## Example Usage

Basic Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const alicloudVpcDefault = new alicloud.vpc.Vpc(this, "default", {
      cidrBlock: "172.17.3.0/24",
      vpcName: "terraform-example",
    });
    const dataAlicloudImagesDefault =
      new alicloud.dataAlicloudImages.DataAlicloudImages(this, "default_1", {
        owners: "system",
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAlicloudImagesDefault.overrideLogicalId("default");
    const dataAlicloudZonesDefault =
      new alicloud.dataAlicloudZones.DataAlicloudZones(this, "default_2", {
        availableDiskCategory: "cloud_essd",
        availableResourceCreation: "Instance",
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAlicloudZonesDefault.overrideLogicalId("default");
    const alicloudEcsDiskDefault = new alicloud.ecsDisk.EcsDisk(
      this,
      "default_3",
      {
        category: "cloud_essd",
        description: "terraform-example",
        diskName: "terraform-example",
        size: cdktf.Token.asNumber("30"),
        zoneId: cdktf.Token.asString(
          cdktf.propertyAccess(dataAlicloudZonesDefault.zones, ["0", "id"])
        ),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudEcsDiskDefault.overrideLogicalId("default");
    const alicloudSecurityGroupDefault =
      new alicloud.securityGroup.SecurityGroup(this, "default_4", {
        name: "terraform-example",
        vpcId: cdktf.Token.asString(alicloudVpcDefault.id),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudSecurityGroupDefault.overrideLogicalId("default");
    const alicloudVswitchDefault = new alicloud.vswitch.Vswitch(
      this,
      "default_5",
      {
        cidrBlock: "172.17.3.0/24",
        vpcId: cdktf.Token.asString(alicloudVpcDefault.id),
        vswitchName: "terraform-example",
        zoneId: cdktf.Token.asString(
          cdktf.propertyAccess(dataAlicloudZonesDefault.zones, ["0", "id"])
        ),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudVswitchDefault.overrideLogicalId("default");
    const dataAlicloudInstanceTypesDefault =
      new alicloud.dataAlicloudInstanceTypes.DataAlicloudInstanceTypes(
        this,
        "default_6",
        {
          availabilityZone: cdktf.Token.asString(
            cdktf.propertyAccess(dataAlicloudZonesDefault.zones, ["0", "id"])
          ),
          systemDiskCategory: "cloud_essd",
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAlicloudInstanceTypesDefault.overrideLogicalId("default");
    const alicloudInstanceDefault = new alicloud.instance.Instance(
      this,
      "default_7",
      {
        availabilityZone: cdktf.Token.asString(
          cdktf.propertyAccess(dataAlicloudZonesDefault.zones, ["0", "id"])
        ),
        imageId: cdktf.Token.asString(
          cdktf.propertyAccess(dataAlicloudImagesDefault.images, ["0", "id"])
        ),
        instanceName: "terraform-example",
        instanceType: cdktf.Token.asString(
          cdktf.propertyAccess(dataAlicloudInstanceTypesDefault.instanceTypes, [
            "0",
            "id",
          ])
        ),
        internetMaxBandwidthOut: 10,
        securityGroups: [cdktf.Token.asString(alicloudSecurityGroupDefault.id)],
        vswitchId: cdktf.Token.asString(alicloudVswitchDefault.id),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudInstanceDefault.overrideLogicalId("default");
    const alicloudDiskAttachmentDefault =
      new alicloud.diskAttachment.DiskAttachment(this, "default_8", {
        diskId: cdktf.Token.asString(alicloudEcsDiskDefault.id),
        instanceId: cdktf.Token.asString(alicloudInstanceDefault.id),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudDiskAttachmentDefault.overrideLogicalId("default");
    const alicloudEcsSnapshotGroupDefault =
      new alicloud.ecsSnapshotGroup.EcsSnapshotGroup(this, "default_9", {
        description: "terraform-example",
        diskId: [cdktf.Token.asString(alicloudEcsDiskDefault.id)],
        instanceId: cdktf.Token.asString(alicloudInstanceDefault.id),
        instantAccess: true,
        instantAccessRetentionDays: 1,
        snapshotGroupName: "terraform-example",
        tags: {
          Created: "TF",
          For: "Acceptance",
        },
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudEcsSnapshotGroupDefault.overrideLogicalId("default");
  }
}

```

## Argument Reference

The following arguments are supported:

* `description` - (Optional) The description of the snapshot-consistent group. The description must be 2 to 256 characters in length and cannot start with http:// or https://.
* `instanceId` - (Optional, ForceNew) The ID of the instance.
* `instantAccess` - (Optional) Specifies whether to enable the instant access feature.
* `diskId` - (Optional) The ID of disk for which to create snapshots. You can specify multiple disk IDs across instances with the same zone.
* `excludeDiskId` - (Optional) The ID of disk N for which you do not need to create snapshots. After this parameter is specified, the created snapshot-consistent group does not contain snapshots of the disk.
* `instantAccessRetentionDays` - (Optional) Specify the number of days for which the instant access feature is available. Unit: days. Valid values: `1` to `65535`.
* `snapshotGroupName` - (Optional) The name of the snapshot-consistent group. The name must be `2` to `128` characters in length, and can contain letters, digits, periods (.), underscores (_), hyphens (-), and colons (:). It must start with a letter or a digit and cannot start with `http://` or `https://`.
* `tags` - (Optional) A mapping of tags to assign to the snapshot group.
* `resourceGroupId` - (Optional, Computed) The ID of the resource group to which the snapshot consistency group belongs.

## Attributes Reference

The following attributes are exported:

* `id` - The resource ID in terraform of Snapshot Group.
* `status` - The status of the resource.

### Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/docs/configuration-0-11/resources.html#timeouts) for certain actions:

* `create` - (Defaults to 10 mins) Used when create the Snapshot Group.
* `update` - (Defaults to 1 mins) Used when update the Snapshot Group.
* `delete` - (Defaults to 1 mins) Used when delete the Snapshot Group.

## Import

ECS Snapshot Group can be imported using the id, e.g.

```shell
$ terraform import alicloud_ecs_snapshot_group.example <id>
```
<!-- cache-key: cdktf-0.17.0-pre.15 input-63c27b89f9222bdf142e02f11a06228b816158f54867de6f486c182f06e12710 -->