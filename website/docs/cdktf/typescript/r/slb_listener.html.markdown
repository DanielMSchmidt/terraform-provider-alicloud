---
subcategory: "Classic Load Balancer (SLB)"
layout: "alicloud"
page_title: "Alicloud: alicloud_slb_listener"
sidebar_current: "docs-alicloud-resource-slb-listener"
description: |-
  Provides an Application Load Banlancer resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_slb\_listener

Provides an Application Load Balancer Listener resource.

For information about slb and how to use it, see [What is Server Load Balancer](https://www.alibabacloud.com/help/doc-detail/27539.htm).

For information about listener and how to use it, to see the following:

* [Configure a HTTP Listener](https://www.alibabacloud.com/help/doc-detail/27592.htm).
* [Configure a HTTPS Listener](https://www.alibabacloud.com/help/doc-detail/27593.htm).
* [Configure a TCP Listener](https://www.alibabacloud.com/help/doc-detail/27594.htm).
* [Configure a UDP Listener](https://www.alibabacloud.com/help/doc-detail/27595.htm).

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    /*Terraform Variables are not always the best fit for getting inputs in the context of Terraform CDK.
    You can read more about this at https://cdk.tf/variables*/
    const slbListenerName = new cdktf.TerraformVariable(
      this,
      "slb_listener_name",
      {
        default: "forSlbListener",
      }
    );
    const alicloudSlbAclListener = new alicloud.slbAcl.SlbAcl(
      this,
      "listener",
      {
        ipVersion: "ipv4",
        name: slbListenerName.stringValue,
      }
    );
    new alicloud.slbAclEntryAttachment.SlbAclEntryAttachment(this, "first", {
      aclId: cdktf.Token.asString(alicloudSlbAclListener.id),
      comment: "first",
      entry: "10.10.10.0/24",
    });
    new alicloud.slbAclEntryAttachment.SlbAclEntryAttachment(this, "second", {
      aclId: cdktf.Token.asString(alicloudSlbAclListener.id),
      comment: "second",
      entry: "168.10.10.0/24",
    });
    const alicloudSlbLoadBalancerListener =
      new alicloud.slbLoadBalancer.SlbLoadBalancer(this, "listener_4", {
        addressType: "internet",
        instanceChargeType: "PayByCLCU",
        internetChargeType: "PayByTraffic",
        loadBalancerName: "tf-testAccSlbListenerHttp",
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudSlbLoadBalancerListener.overrideLogicalId("listener");
    const alicloudSlbListenerListener = new alicloud.slbListener.SlbListener(
      this,
      "listener_5",
      {
        aclId: cdktf.Token.asString(alicloudSlbAclListener.id),
        aclStatus: "on",
        aclType: "white",
        backendPort: 80,
        bandwidth: 10,
        cookie: "testslblistenercookie",
        cookieTimeout: 86400,
        frontendPort: 80,
        healthCheck: "on",
        healthCheckConnectPort: 20,
        healthCheckDomain: "ali.com",
        healthCheckHttpCode: "http_2xx,http_3xx",
        healthCheckInterval: 5,
        healthCheckTimeout: 8,
        healthCheckUri: "/cons",
        healthyThreshold: 8,
        idleTimeout: 30,
        loadBalancerId: cdktf.Token.asString(
          alicloudSlbLoadBalancerListener.id
        ),
        protocol: "http",
        requestTimeout: 80,
        stickySession: "on",
        stickySessionType: "insert",
        unhealthyThreshold: 8,
        xForwardedFor: {
          retriveSlbId: true,
          retriveSlbIp: true,
        },
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudSlbListenerListener.overrideLogicalId("listener");
  }
}

```

## Argument Reference

The following arguments are supported:

* `loadBalancerId` - (Required, ForceNew) The Load Balancer ID which is used to launch a new listener.
* `frontendPort` - (Required, ForceNew) Port used by the Server Load Balancer instance frontend. Valid value range: [1-65535].
* `backendPort` - (Optional, ForceNew) Port used by the Server Load Balancer instance backend. Valid value range: [1-65535].
* `protocol` - (Required, ForceNew) The protocol to listen on. Valid values are [`http`, `https`, `tcp`, `udp`].
* `bandwidth` - (Optional, Computed) Bandwidth peak of Listener. For the public network instance charged per traffic consumed, the Bandwidth on Listener can be set to -1, indicating the bandwidth peak is unlimited. Valid values are [-1, 1-1000] in Mbps.
* `description` - (Optional, Available in 1.69.0+) The description of slb listener. This description can have a string of 1 to 80 characters. Default value: null.
* `scheduler` - (Optional) Scheduling algorithm,  Valid values: `wrr`, `rr`, `wlc`, `sch`, `tcp`, `qch`. Default to `wrr`. 
  Only when `protocol` is `tcp` or `udp`, `scheduler` can be set to `sch`. Only when instance is guaranteed-performance instance and `protocol` is `tcp` or `udp`, `scheduler` can be set to `tch`. Only when instance is guaranteed-performance instance and `protocol` is `udp`, `scheduler` can be set to `qch`.
* `stickySession` - (Optional) Whether to enable session persistence, Valid values are `on` and `off`. Default to `off`.
* `stickySessionType` - (Optional) Mode for handling the cookie. If `stickySession` is "on", it is mandatory. Otherwise, it will be ignored. Valid values are `insert` and `server`. `insert` means it is inserted from Server Load Balancer; `server` means the Server Load Balancer learns from the backend server.
* `cookieTimeout` - (Optional) Cookie timeout. It is mandatory when `stickySession` is "on" and `stickySessionType` is "insert". Otherwise, it will be ignored. Valid value range: [1-86400] in seconds.
* `cookie` - (Optional) The cookie configured on the server. It is mandatory when `stickySession` is "on" and `stickySessionType` is "server". Otherwise, it will be ignored. Valid value：String in line with RFC 2965, with length being 1- 200. It only contains characters such as ASCII codes, English letters and digits instead of the comma, semicolon or spacing, and it cannot start with $.
* `persistenceTimeout` - (Optional) Timeout of connection persistence. Valid value range: [0-3600] in seconds. Default to 0 and means closing it.
* `healthCheck` - (Optional) Whether to enable health check. Valid values are`on` and `off`. TCP and UDP listener's HealthCheck is always on, so it will be ignore when launching TCP or UDP listener.
* `healthCheckType` - (Optional) Type of health check. Valid values are: `tcp` and `http`. Default to `tcp` . TCP supports TCP and HTTP health check mode, you can select the particular mode depending on your application.
* `healthCheckDomain` - (Optional) Domain name used for health check. When it used to launch TCP listener, `healthCheckType` must be "http". Its length is limited to 1-80 and only characters such as letters, digits, ‘-‘ and ‘.’ are allowed. When it is not set or empty,  Server Load Balancer uses the private network IP address of each backend server as Domain used for health check.
* `healthCheckUri` - (Optional) URI used for health check. When it used to launch TCP listener, `healthCheckType` must be "http". Its length is limited to 1-80 and it must start with /. Only characters such as letters, digits, ‘-’, ‘/’, ‘.’, ‘%’, ‘?’, #’ and ‘&’ are allowed.
* `healthCheckConnectPort` - (Optional) The port that is used for health checks. Valid value range: [0-65535]. Default to `0` means that the port on a backend server is used for health checks.
* `healthyThreshold` - (Optional) The number of health checks that an unhealthy backend server must consecutively pass before it can be declared healthy. In this case, the health check state is changed from fail to success. It is required when `healthCheck` is on. Valid value range: [2-10] in seconds. Default to 3. **NOTE:** This parameter takes effect only if the `healthCheck` parameter is set to `on`.
* `unhealthyThreshold` - (Optional) The number of health checks that a healthy backend server must consecutively fail before it can be declared unhealthy. In this case, the health check state is changed from success to fail. It is required when `healthCheck` is on. Valid value range: [2-10] in seconds. Default to 3. **NOTE:** This parameter takes effect only if the `healthCheck` parameter is set to `on`.
* `healthCheckTimeout` - (Optional) Maximum timeout of each health check response. It is required when `healthCheck` is on. Valid value range: [1-300] in seconds. Default to 5. Note: If `healthCheckTimeout` < `healthCheckInterval`, its will be replaced by `healthCheckInterval`.
* `healthCheckInterval` - (Optional) Time interval of health checks. It is required when `healthCheck` is on. Valid value range: [1-50] in seconds. Default to 2.
* `healthCheckHttpCode` - (Optional) Regular health check HTTP status code. Multiple codes are segmented by “,”. It is required when `healthCheck` is on. Default to `http2Xx`.  Valid values are: `http2Xx`,  `http3Xx`, `http4Xx` and `http5Xx`.
* `healthCheckMethod` - (Optional, Available in 1.70.0+) HealthCheckMethod used for health check.Valid values: ["head", "get"] `http` and `https` support regions ap-northeast-1, ap-southeast-1, ap-southeast-2, ap-southeast-3, us-east-1, us-west-1, eu-central-1, ap-south-1, me-east-1, cn-huhehaote, cn-zhangjiakou, ap-southeast-5, cn-shenzhen, cn-hongkong, cn-qingdao, cn-chengdu, eu-west-1, cn-hangzhou", cn-beijing, cn-shanghai.This function does not support the TCP protocol .
* `sslCertificateId` - (Deprecated) SLB Server certificate ID. It has been deprecated from 1.59.0 and using `serverCertificateId` instead. 
* `serverCertificateId` - (Optional, Available in 1.59.0+) SLB Server certificate ID. It is required when `protocol` is `https`. The `serverCertificateId` is also required when the value of the `sslCertificateId`  is Empty.
* `caCertificateId` - (Optional, Available in 1.104) SLB CA certificate ID. Only when `protocol` is `https` can be specified.
* `gzip` - (Optional) Whether to enable "Gzip Compression". If enabled, files of specific file types will be compressed, otherwise, no files will be compressed. Default to true. Available in v1.13.0+.
* `xForwardedFor` - (Optional) Whether to set additional HTTP Header field "X-Forwarded-For" (documented below). Available in v1.13.0+. The details see Block `xForwardedFor`.
* `aclStatus` - (Optional) Whether to enable "acl(access control list)", the acl is specified by `aclId`. Valid values are `on` and `off`. Default to `off`.
* `aclType` - (Optional) Mode for handling the acl specified by acl_id. If `aclStatus` is "on", it is mandatory. Otherwise, it will be ignored. Valid values are `white` and `black`. `white` means the Listener can only be accessed by client ip belongs to the acl; `black` means the Listener can not be accessed by client ip belongs to the acl.
* `aclId` - (Optional) the id of access control list to be apply on the listener, is the id of resource alicloud_slb_acl. If `aclStatus` is "on", it is mandatory. Otherwise, it will be ignored.
* `establishedTimeout` - (Optional) Timeout of tcp listener established connection idle timeout. Valid value range: [10-900] in seconds. Default to 900.
* `idleTimeout` - (Optional) Timeout of http or https listener established connection idle timeout. Valid value range: [1-60] in seconds. Default to 15.
* `requestTimeout` - (Optional) Timeout of http or https listener request (which does not get response from backend) timeout. Valid value range: [1-180] in seconds. Default to 60.
* `enableHttp2` - (Optional) Whether to enable https listener support http2 or not. Valid values are `on` and `off`. Default to `on`.
* `tlsCipherPolicy` - (Optional)  Https listener TLS cipher policy. Valid values are `tlsCipherPolicy10`, `tlsCipherPolicy11`, `tlsCipherPolicy12`, `tlsCipherPolicy12Strict`. Default to `tlsCipherPolicy10`. Currently the `tlsCipherPolicy` can not be updated when load balancer instance is "Shared-Performance".
* `serverGroupId` - (Optional) the id of server group to be apply on the listener, is the id of resource `alicloudSlbServerGroup`.
* `listenerForward` - (Optional, ForceNew, Available in 1.40.0+) Whether to enable http redirect to https, Valid values are `on` and `off`. Default to `off`.
* `masterSlaveServerGroupId` - (Optional) The ID of the master slave server group.
* `forwardPort` - (Optional, ForceNew, Available in 1.40.0+) The port that http redirect to https.
* `deleteProtectionValidation` - (Optional, Available in 1.63.0+) Checking DeleteProtection of SLB instance before deleting. If true, this resource will not be deleted when its SLB instance enabled DeleteProtection. Default to false.
* `proxyProtocolV2Enabled` - (Optional, Available in 1.187.0+) Whether to support carrying the client source address to the backend server through the Proxy Protocol. Valid values are `true` and `false`. Default to `false`.

-> **NOTE:** Once enable the http redirect to https function, any parameters excepted forward_port,listener_forward,load_balancer_id,frontend_port,protocol will be ignored. More info, please refer to [Redirect http to https](https://www.alibabacloud.com/help/doc-detail/89151.htm?spm=a2c63.p38356.b99.186.42f66384mpjUTB).

-> **NOTE:** Advantanced feature such as `tlsCipherPolicy`, can not be updated when load balancer instance is "Shared-Performance". More info, please refer to [Configure a HTTPS Listener](https://www.alibabacloud.com/help/doc-detail/27593.htm).

### Block x_forwarded_for

The x_forwarded_for mapping supports the following:

* `retriveSlbIp` - (Optional) Whether to use the XForwardedFor_SLBIP header to obtain the public IP address of the SLB instance. Default to false.
* `retriveSlbId` - (Optional) Whether to use the XForwardedFor header to obtain the ID of the SLB instance. Default to false.
* `retriveSlbProto` - (Optional) Whether to use the XForwardedFor_proto header to obtain the protocol used by the listener. Default to false.

## Listener fields and protocol mapping

load balance support 4 protocol to listen on, they are `http`,`https`,`tcp`,`udp`, the every listener support which portocal following:

listener parameter | support protocol | value range |
------------- | ------------- | ------------- | 
backend_port | http & https & tcp & udp | 1-65535 | 
frontend_port | http & https & tcp & udp | 1-65535 |
protocol | http & https & tcp & udp |
bandwidth | http & https & tcp & udp | -1 / 1-1000 |
scheduler | http & https & tcp & udp | wrr, rr, wlc, tch, qch |
sticky_session | http & https | on or off |
sticky_session_type | http & https | insert or server | 
cookie_timeout | http & https | 1-86400  | 
cookie | http & https |   | 
persistence_timeout | tcp & udp | 0-3600 | 
health_check | http & https | on or off | 
health_check_type | tcp | tcp or http | 
health_check_domain | http & https & tcp | 
health_check_method | http & https & tcp | 
health_check_uri | http & https & tcp |  | 
health_check_connect_port | http & https & tcp & udp | 1-65535 or -520 | 
healthy_threshold | http & https & tcp & udp | 1-10 | 
unhealthy_threshold | http & https & tcp & udp | 1-10 | 
health_check_timeout | http & https & tcp & udp | 1-300 |
health_check_interval | http & https & tcp & udp | 1-50 |
health_check_http_code | http & https & tcp | http_2xx,http_3xx,http_4xx,http_5xx | 
server_certificate_id | https |  |
gzip | http & https | true or false  |
x_forwarded_for | http & https |  |
acl_status | http & https & tcp & udp | on or off |
acl_type   | http & https & tcp & udp | white or black |
acl_id     | http & https & tcp & udp | the id of resource alicloud_slb_acl|
established_timeout | tcp       | 10-900|
idle_timeout |http & https      | 1-60  |
request_timeout |http & https   | 1-180 |
enable_http2    |https          | on or off |
tls_cipher_policy |https        |  tls_cipher_policy_1_0, tls_cipher_policy_1_1, tls_cipher_policy_1_2, tls_cipher_policy_1_2_strict |
server_group_id    | http & https & tcp & udp | the id of resource alicloud_slb_server_group |

The listener mapping supports the following:

## Attributes Reference

The following attributes are exported:

* `id` - The ID of the load balancer listener. Its format as `<load_balancer_id>:<protocol>:<frontend_port>`. Before verson 1.57.1, the foramt as `<load_balancer_id>:<frontend_port>`.
* `loadBalancerId` - The Load Balancer ID which is used to launch a new listener.
* `frontendPort` - Port used by the Server Load Balancer instance frontend.
* `backendPort` - Port used by the Server Load Balancer instance backend.
* `protocol` - The protocol to listen on.
* `bandwidth` - Bandwidth peak of Listener.
* `scheduler` - Scheduling algorithm.
* `stickySession` - Whether to enable session persistence.
* `stickySessionType` - Mode for handling the cookie.
* `cookieTimeout` - Cookie timeout.
* `cookie` - The cookie configured on the server.
* `persistenceTimeout` - Timeout of connection persistence.
* `healthCheck` - Whether to enable health check.
* `healthCheckType` - Type of health check.
* `healthCheckDomain` - Domain name used for health check.
* `healthCheckMethod` - HealthCheckMethod used for health check.
* `healthCheckUri` - URI used for health check.
* `healthCheckConnectPort` - Port used for health check.
* `healthyThreshold` - Threshold determining the result of the health check is success.
* `unhealthyThreshold` - Threshold determining the result of the health check is fail.
* `healthCheckTimeout` - Maximum timeout of each health check response.
* `healthCheckInterval` - Time interval of health checks.
* `healthCheckHttpCode` - Regular health check HTTP status code.
* `serverCertificateId` - (Optional) Security certificate ID.

## Import

Load balancer listener can be imported using the id, e.g.

```shell
$ terraform import alicloud_slb_listener.example "lb-abc123456:tcp:22"
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-e538db9a6d831a513d846c1d429cedd04f5f3e75d32f2bfc80e925c6771b489e -->