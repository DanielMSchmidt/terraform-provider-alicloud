---
subcategory: "Click House"
layout: "alicloud"
page_title: "Alicloud: alicloud_click_house_account"
sidebar_current: "docs-alicloud-resource-click-house-account"
description: |-
  Provides a Alicloud Click House Account resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_click\_house\_account

Provides a Click House Account resource.

For information about Click House Account and how to use it, see [What is Account](https://www.alibabacloud.com/product/clickhouse).

-> **NOTE:** Available in v1.134.0+.

## Example Usage

Basic Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    /*Terraform Variables are not always the best fit for getting inputs in the context of Terraform CDK.
    You can read more about this at https://cdk.tf/variables*/
    const name = new cdktf.TerraformVariable(this, "name", {
      default: "testaccountname",
    });
    const pwd = new cdktf.TerraformVariable(this, "pwd", {
      default: "Tf-testpwd",
    });
    const dataAlicloudClickHouseRegionsDefault =
      new alicloud.dataAlicloudClickHouseRegions.DataAlicloudClickHouseRegions(
        this,
        "default",
        {
          current: true,
        }
      );
    const dataAlicloudVpcsDefault =
      new alicloud.dataAlicloudVpcs.DataAlicloudVpcs(this, "default_3", {
        nameRegex: "default-NODELETING",
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAlicloudVpcsDefault.overrideLogicalId("default");
    const dataAlicloudVswitchesDefault =
      new alicloud.dataAlicloudVswitches.DataAlicloudVswitches(
        this,
        "default_4",
        {
          vpcId: cdktf.Token.asString(
            cdktf.propertyAccess(dataAlicloudVpcsDefault.ids, ["0"])
          ),
          zoneId: cdktf.Token.asString(
            cdktf.propertyAccess(dataAlicloudClickHouseRegionsDefault.regions, [
              "0",
              "zone_ids",
              "0",
              "zone_id",
            ])
          ),
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAlicloudVswitchesDefault.overrideLogicalId("default");
    const alicloudClickHouseDbClusterDefault =
      new alicloud.clickHouseDbCluster.ClickHouseDbCluster(this, "default_5", {
        category: "Basic",
        dbClusterClass: "S8",
        dbClusterDescription: name.stringValue,
        dbClusterNetworkType: "vpc",
        dbClusterVersion: "20.3.10.75",
        dbNodeGroupCount: 1,
        dbNodeStorage: "500",
        paymentType: "PayAsYouGo",
        storageType: "cloud_essd",
        vswitchId: cdktf.Token.asString(
          cdktf.propertyAccess(dataAlicloudVswitchesDefault.vswitches, [
            "0",
            "id",
          ])
        ),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudClickHouseDbClusterDefault.overrideLogicalId("default");
    const alicloudClickHouseAccountDefault =
      new alicloud.clickHouseAccount.ClickHouseAccount(this, "default_6", {
        accountDescription: "your_description",
        accountName: name.stringValue,
        accountPassword: pwd.stringValue,
        dbClusterId: cdktf.Token.asString(
          alicloudClickHouseDbClusterDefault.id
        ),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudClickHouseAccountDefault.overrideLogicalId("default");
  }
}

```

## Argument Reference

The following arguments are supported:

* `accountDescription` - (Optional) In Chinese, English letter. May contain Chinese and English characters, lowercase letters, numbers, and underscores (_), the dash (-). Cannot start with http:// and https:// at the beginning. Length is from 2 to 256 characters.
* `accountName` - (Required, ForceNew) Account name: lowercase letters, numbers, underscores, lowercase letter; length no more than 16 characters.
* `accountPassword` - (Required) The account password: uppercase letters, lowercase letters, lowercase letters, numbers, and special characters (special character! #$%^& author (s):_+-=) in a length of 8-32 bit.
* `dbClusterId` - (Required, ForceNew) The db cluster id.
* `dmlAuthority` - (Optional, Available in v1.163.0+) Specifies whether to grant DML permissions to the database account. Valid values: `all` and `readOnly,modify`.
* `ddlAuthority` - (Optional, Available in v1.163.0+) Specifies whether to grant DDL permissions to the database account. Valid values: `true` and `false`.
  -`true`: grants DDL permissions to the database account.
  -`false`: does not grant DDL permissions to the database account.
* `allowDatabases` - (Optional, Available in v1.163.0+) The list of databases to which you want to grant permissions. Separate databases with commas (,).
* `totalDatabases` - (Optional, Available in v1.163.0+) The list of all databases. Separate databases with commas (,).
* `allowDictionaries` - (Optional, Available in v1.163.0+) The list of dictionaries to which you want to grant permissions. Separate dictionaries with commas (,).
* `totalDictionaries` - (Optional, Available in v1.163.0+) The list of all dictionaries. Separate dictionaries with commas (,).


## Attributes Reference

The following attributes are exported:

* `id` - The resource ID of Account. The value formats as `<db_cluster_id>:<account_name>`.
* `status` - The status of the resource. Valid Status: `creating`,`available`,`deleting`.
* `type` - The type of the database account. Valid values: `normal` or `super`.

### Timeouts

-> **NOTE:** Available in 1.163.0+.

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/docs/configuration-0-11/resources.html#timeouts) for certain actions:

* `create` - (Defaults to 1 mins) Used when create the Click House Account.
* `update` - (Defaults to 1 mins) Used when update the Click House Account.
* `delete` - (Defaults to 1 mins) Used when delete the Click House Account.

## Import

Click House Account can be imported using the id, e.g.

```shell
$ terraform import alicloud_click_house_account.example <db_cluster_id>:<account_name>
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-c0e7994d3ce646cdaa560f351030f787a6a6eeb86a7911f3331dffcba66539d6 -->