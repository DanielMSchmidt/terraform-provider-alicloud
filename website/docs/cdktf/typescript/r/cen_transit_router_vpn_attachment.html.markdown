---
subcategory: "Cloud Enterprise Network (CEN)"
layout: "alicloud"
page_title: "Alicloud: alicloud_cen_transit_router_vpn_attachment"
sidebar_current: "docs-alicloud-resource-cen-transit-router-vpn-attachment"
description: |-
  Provides a Alicloud Cloud Enterprise Network (CEN) Transit Router Vpn Attachment resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_cen\_transit\_router\_vpn\_attachment

Provides a Cloud Enterprise Network (CEN) Transit Router Vpn Attachment resource.

For information about Cloud Enterprise Network (CEN) Transit Router Vpn Attachment and how to use it, see [What is Transit Router Vpn Attachment](https://help.aliyun.com/document_detail/443993.html).

-> **NOTE:** Available in v1.183.0+.

## Example Usage

### Basic Example

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const alicloudCenInstanceDefault = new alicloud.cenInstance.CenInstance(
      this,
      "default",
      {
        cenInstanceName: "tf-example",
      }
    );
    const alicloudCenTransitRouterDefault =
      new alicloud.cenTransitRouter.CenTransitRouter(this, "default_1", {
        cenId: cdktf.Token.asString(alicloudCenInstanceDefault.id),
        transitRouterDescription: "tf-example-description",
        transitRouterName: "tf-example-name",
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudCenTransitRouterDefault.overrideLogicalId("default");
    const alicloudVpnCustomerGatewayDefault =
      new alicloud.vpnCustomerGateway.VpnCustomerGateway(this, "default_2", {
        asn: "45014",
        description: "testAccVpnConnectionDesc",
        ipAddress: "42.104.22.210",
        name: "tf-example-name",
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudVpnCustomerGatewayDefault.overrideLogicalId("default");
    const alicloudVpnGatewayVpnAttachmentDefault =
      new alicloud.vpnGatewayVpnAttachment.VpnGatewayVpnAttachment(
        this,
        "default_3",
        {
          bgpConfig: {
            enable: true,
            localAsn: 45014,
            localBgpIp: "169.254.11.1",
            tunnelCidr: "169.254.11.0/30",
          },
          customerGatewayId: cdktf.Token.asString(
            alicloudVpnCustomerGatewayDefault.id
          ),
          effectImmediately: false,
          enableDpd: true,
          enableNatTraversal: true,
          healthCheckConfig: {
            dip: "10.0.0.1",
            enable: true,
            interval: 10,
            policy: "revoke_route",
            retry: 10,
            sip: "192.168.1.1",
          },
          ikeConfig: {
            ikeAuthAlg: "md5",
            ikeEncAlg: "des",
            ikeLifetime: 86400,
            ikeMode: "main",
            ikePfs: "group1",
            ikeVersion: "ikev2",
            localId: "testalice2",
            psk: "tf-testvpn2",
            remoteId: "testbob2",
          },
          ipsecConfig: {
            ipsecAuthAlg: "md5",
            ipsecEncAlg: "des",
            ipsecLifetime: 86400,
            ipsecPfs: "group5",
          },
          localSubnet: "0.0.0.0/0",
          networkType: "public",
          remoteSubnet: "0.0.0.0/0",
          vpnAttachmentName: "tf-example-name",
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudVpnGatewayVpnAttachmentDefault.overrideLogicalId("default");
    const dataAlicloudCenTransitRouterAvailableResourcesDefault =
      new alicloud.dataAlicloudCenTransitRouterAvailableResources.DataAlicloudCenTransitRouterAvailableResources(
        this,
        "default_4",
        {}
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAlicloudCenTransitRouterAvailableResourcesDefault.overrideLogicalId(
      "default"
    );
    const alicloudCenTransitRouterVpnAttachmentDefault =
      new alicloud.cenTransitRouterVpnAttachment.CenTransitRouterVpnAttachment(
        this,
        "default_5",
        {
          autoPublishRouteEnabled: false,
          cenId: cdktf.Token.asString(alicloudCenTransitRouterDefault.cenId),
          transitRouterAttachmentDescription: "tf-example-description",
          transitRouterAttachmentName: "tf-example-name",
          transitRouterId: cdktf.Token.asString(
            alicloudCenTransitRouterDefault.transitRouterId
          ),
          vpnId: cdktf.Token.asString(
            alicloudVpnGatewayVpnAttachmentDefault.id
          ),
          zone: [
            {
              zoneId: cdktf.Token.asString(
                cdktf.propertyAccess(
                  dataAlicloudCenTransitRouterAvailableResourcesDefault.resources,
                  ["0", "master_zones", "0"]
                )
              ),
            },
          ],
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudCenTransitRouterVpnAttachmentDefault.overrideLogicalId("default");
  }
}

```

### Example Create a Transit Router Vpn Attachment with Transit Router Cidr

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const alicloudCenInstanceDefault = new alicloud.cenInstance.CenInstance(
      this,
      "default",
      {
        cenInstanceName: "tf-example",
      }
    );
    const alicloudCenTransitRouterDefault =
      new alicloud.cenTransitRouter.CenTransitRouter(this, "default_1", {
        cenId: cdktf.Token.asString(alicloudCenInstanceDefault.id),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudCenTransitRouterDefault.overrideLogicalId("default");
    const alicloudCenTransitRouterCidrDefault =
      new alicloud.cenTransitRouterCidr.CenTransitRouterCidr(
        this,
        "default_2",
        {
          cidr: "192.168.0.0/16",
          description: "tf-example-description",
          publishCidrRoute: true,
          transitRouterCidrName: "tf-example-name",
          transitRouterId: cdktf.Token.asString(
            alicloudCenTransitRouterDefault.transitRouterId
          ),
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudCenTransitRouterCidrDefault.overrideLogicalId("default");
    const alicloudVpnCustomerGatewayDefault =
      new alicloud.vpnCustomerGateway.VpnCustomerGateway(this, "default_3", {
        asn: "45014",
        ipAddress: "42.104.22.210",
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudVpnCustomerGatewayDefault.overrideLogicalId("default");
    const alicloudVpnGatewayVpnAttachmentDefault =
      new alicloud.vpnGatewayVpnAttachment.VpnGatewayVpnAttachment(
        this,
        "default_4",
        {
          bgpConfig: {
            enable: true,
            localAsn: 45014,
            localBgpIp: "169.254.11.1",
            tunnelCidr: "169.254.11.0/30",
          },
          customerGatewayId: cdktf.Token.asString(
            alicloudVpnCustomerGatewayDefault.id
          ),
          effectImmediately: false,
          enableDpd: true,
          enableNatTraversal: true,
          healthCheckConfig: {
            dip: "10.0.0.1",
            enable: true,
            interval: 10,
            policy: "revoke_route",
            retry: 10,
            sip: "192.168.1.1",
          },
          ikeConfig: {
            ikeAuthAlg: "md5",
            ikeEncAlg: "des",
            ikeLifetime: 86400,
            ikeMode: "main",
            ikePfs: "group1",
            ikeVersion: "ikev2",
            localId: "testalice2",
            psk: "tf-testvpn2",
            remoteId: "testbob2",
          },
          ipsecConfig: {
            ipsecAuthAlg: "md5",
            ipsecEncAlg: "des",
            ipsecLifetime: 86400,
            ipsecPfs: "group5",
          },
          localSubnet: "0.0.0.0/0",
          networkType: "public",
          remoteSubnet: "0.0.0.0/0",
          vpnAttachmentName: "tf-example-name",
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudVpnGatewayVpnAttachmentDefault.overrideLogicalId("default");
    const dataAlicloudCenTransitRouterAvailableResourcesDefault =
      new alicloud.dataAlicloudCenTransitRouterAvailableResources.DataAlicloudCenTransitRouterAvailableResources(
        this,
        "default_5",
        {}
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAlicloudCenTransitRouterAvailableResourcesDefault.overrideLogicalId(
      "default"
    );
    const alicloudCenTransitRouterVpnAttachmentDefault =
      new alicloud.cenTransitRouterVpnAttachment.CenTransitRouterVpnAttachment(
        this,
        "default_6",
        {
          autoPublishRouteEnabled: false,
          cenId: cdktf.Token.asString(alicloudCenTransitRouterDefault.cenId),
          transitRouterAttachmentDescription: "tf-example-description",
          transitRouterAttachmentName: "tf-example-name",
          transitRouterId: cdktf.Token.asString(
            alicloudCenTransitRouterCidrDefault.transitRouterId
          ),
          vpnId: cdktf.Token.asString(
            alicloudVpnGatewayVpnAttachmentDefault.id
          ),
          zone: [
            {
              zoneId: cdktf.Token.asString(
                cdktf.propertyAccess(
                  dataAlicloudCenTransitRouterAvailableResourcesDefault.resources,
                  ["0", "master_zones", "0"]
                )
              ),
            },
          ],
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudCenTransitRouterVpnAttachmentDefault.overrideLogicalId("default");
  }
}

```

## Argument Reference

The following arguments are supported:

* `autoPublishRouteEnabled` - (Optional, Computed) Whether to allow the forwarding router instance to automatically publish routing entries to IPsec connections.
* `cenId` - (Optional, ForceNew) The id of the cen.
* `transitRouterAttachmentDescription` - (Optional) The description of the VPN connection. The description can contain `2` to `256` characters. The description must start with English letters, but cannot start with `http://` or `https://`.
* `transitRouterAttachmentName` - (Optional) The name of the VPN connection. The name must be `2` to `128` characters in length, and can contain digits, underscores (_), and hyphens (-). It must start with a letter.
* `transitRouterId` - (Required, ForceNew) The ID of the forwarding router instance.
* `vpnId` - (Required, ForceNew) The id of the vpn.
* `vpnOwnerId` - (Optional, Computed, ForceNew) The owner id of vpn. **NOTE:** You must set `vpnOwnerId`, if you want to connect the transit router to an IPsec-VPN connection that belongs to another Alibaba Cloud account.
* `zone` - (Required, ForceNew) The list of zone mapping. See the following `Block zone`.
* `tags` - (Optional, Available in v1.193.1+) A mapping of tags to assign to the resource.

#### zone Block

The `zone` supports the following:

* `zoneId` - (Required, ForceNew) The id of the zone.

## Attributes Reference

The following attributes are exported:

* `id` - The resource ID in terraform of Transit Router Vpn Attachment.
* `status` - The associating status of the network.

### Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/docs/configuration-0-11/resources.html#timeouts) for certain actions:

* `create` - (Defaults to 40 mins) Used when create the Transit Router Vpn Attachment.
* `update` - (Defaults to 1 mins) Used when update the Transit Router Vpn Attachment.
* `delete` - (Defaults to 30 mins) Used when delete the Transit Router Vpn Attachment.

## Import

Cloud Enterprise Network (CEN) Transit Router Vpn Attachment can be imported using the id, e.g.

```shell
$ terraform import alicloud_cen_transit_router_vpn_attachment.example <id>
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-c116c850d99b3359100bb489eb59aedd4ec1b1d7f42f420bf1d99d7eb93e3f1e -->