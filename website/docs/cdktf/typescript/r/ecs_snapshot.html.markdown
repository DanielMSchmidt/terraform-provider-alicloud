---
subcategory: "ECS"
layout: "alicloud"
page_title: "Alicloud: alicloud_ecs_snapshot"
sidebar_current: "docs-alicloud-resource-ecs-snapshot"
description: |-
  Provides a Alicloud ECS Snapshot resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_ecs\_snapshot

Provides a ECS Snapshot resource.

For information about ECS Snapshot and how to use it, see [What is Snapshot](https://www.alibabacloud.com/help/en/doc-detail/25524.htm).

-> **NOTE:** Available in v1.120.0+.

## Example Usage

Basic Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const alicloudVpcExample = new alicloud.vpc.Vpc(this, "example", {
      cidrBlock: "172.17.3.0/24",
      vpcName: "terraform-example",
    });
    const dataAlicloudImagesExample =
      new alicloud.dataAlicloudImages.DataAlicloudImages(this, "example_1", {
        nameRegex: "^ubuntu_[0-9]+_[0-9]+_x64*",
        owners: "system",
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAlicloudImagesExample.overrideLogicalId("example");
    const dataAlicloudZonesExample =
      new alicloud.dataAlicloudZones.DataAlicloudZones(this, "example_2", {
        availableResourceCreation: "Instance",
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAlicloudZonesExample.overrideLogicalId("example");
    const alicloudSecurityGroupExample =
      new alicloud.securityGroup.SecurityGroup(this, "example_3", {
        description: "New security group",
        name: "terraform-example",
        vpcId: cdktf.Token.asString(alicloudVpcExample.id),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudSecurityGroupExample.overrideLogicalId("example");
    const alicloudVswitchExample = new alicloud.vswitch.Vswitch(
      this,
      "example_4",
      {
        cidrBlock: "172.17.3.0/24",
        vpcId: cdktf.Token.asString(alicloudVpcExample.id),
        vswitchName: "terraform-example",
        zoneId: cdktf.Token.asString(
          cdktf.propertyAccess(dataAlicloudZonesExample.zones, ["0", "id"])
        ),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudVswitchExample.overrideLogicalId("example");
    const dataAlicloudInstanceTypesExample =
      new alicloud.dataAlicloudInstanceTypes.DataAlicloudInstanceTypes(
        this,
        "example_5",
        {
          availabilityZone: cdktf.Token.asString(
            cdktf.propertyAccess(dataAlicloudZonesExample.zones, ["0", "id"])
          ),
          cpuCoreCount: 1,
          memorySize: 2,
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAlicloudInstanceTypesExample.overrideLogicalId("example");
    const alicloudEcsDiskExample = new alicloud.ecsDisk.EcsDisk(
      this,
      "example_6",
      {
        category: "cloud_efficiency",
        diskName: "terraform-example",
        size: cdktf.Token.asNumber("20"),
        zoneId: cdktf.Token.asString(
          cdktf.propertyAccess(dataAlicloudInstanceTypesExample.instanceTypes, [
            "0",
            "availability_zones",
            "0",
          ])
        ),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudEcsDiskExample.overrideLogicalId("example");
    const alicloudEcsSnapshotExample = new alicloud.ecsSnapshot.EcsSnapshot(
      this,
      "example_7",
      {
        category: "standard",
        description: "terraform-example",
        diskId: cdktf.Token.asString(alicloudEcsDiskExample.id),
        retentionDays: cdktf.Token.asNumber("20"),
        snapshotName: "terraform-example",
        tags: {
          Created: "TF",
          For: "example",
        },
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudEcsSnapshotExample.overrideLogicalId("example");
    const alicloudInstanceExample = new alicloud.instance.Instance(
      this,
      "example_8",
      {
        availabilityZone: cdktf.Token.asString(
          cdktf.propertyAccess(dataAlicloudZonesExample.zones, ["0", "id"])
        ),
        imageId: cdktf.Token.asString(
          cdktf.propertyAccess(dataAlicloudImagesExample.images, ["0", "id"])
        ),
        instanceName: "terraform-example",
        instanceType: cdktf.Token.asString(
          cdktf.propertyAccess(dataAlicloudInstanceTypesExample.instanceTypes, [
            "0",
            "id",
          ])
        ),
        securityGroups: [cdktf.Token.asString(alicloudSecurityGroupExample.id)],
        vswitchId: cdktf.Token.asString(alicloudVswitchExample.id),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudInstanceExample.overrideLogicalId("example");
    const alicloudEcsDiskAttachmentExample =
      new alicloud.ecsDiskAttachment.EcsDiskAttachment(this, "example_9", {
        diskId: cdktf.Token.asString(alicloudEcsDiskExample.id),
        instanceId: cdktf.Token.asString(alicloudInstanceExample.id),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudEcsDiskAttachmentExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

The following arguments are supported:

* `category` - (Optional, ForceNew) The category of the snapshot. Valid Values: `standard` and `flash`.
* `description` - (Optional) The description of the snapshot.
* `diskId` - (Required, ForceNew) The ID of the disk.
* `force` - (Optional) Specifies whether to forcibly delete the snapshot that has been used to create disks.
* `instantAccess` - (Optional) Specifies whether to enable the instant access feature.
* `instantAccessRetentionDays` - (Optional, ForceNew) Specifies the retention period of the instant access feature. After the retention period ends, the snapshot is automatically released.
* `resourceGroupId` - (Optional, ForceNew) The resource group id.
* `retentionDays` - (Optional, ForceNew) The retention period of the snapshot.
* `snapshotName` - (Optional) The name of the snapshot.
* `name` - (Optional, Deprecated from v1.120.0+) Field `name` has been deprecated from provider version 1.120.0. New field `snapshotName` instead. 
* `tags` - (Optional) A mapping of tags to assign to the snapshot.

-> **NOTE:** If `force` is true, After an snapshot is deleted, the disks created from this snapshot cannot be re-initialized.

## Attributes Reference

The following attributes are exported:

* `id` - The resource ID in terraform of Snapshot.
* `status` - The status of snapshot.

## Import

ECS Snapshot can be imported using the id, e.g.

```shell
$ terraform import alicloud_ecs_snapshot.example <id>
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-c4bf6abc117c1223569df4182126fb2f082228d3ee807e25454abcfdc676e088 -->