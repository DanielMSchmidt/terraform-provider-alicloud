---
subcategory: "Data Security Center (SDDP)"
layout: "alicloud"
page_title: "Alicloud: alicloud_sddp_data_limit"
sidebar_current: "docs-alicloud-resource-sddp-data-limit"
description: |-
  Provides a Alicloud Data Security Center Data Limit resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_sddp\_data\_limit

Provides a Data Security Center Data Limit resource.

For information about Data Security Center Data Limit and how to use it, see [What is Data Limit](https://www.alibabacloud.com/help/en/doc-detail/158987.html).

-> **NOTE:** Available in v1.159.0+.

## Example Usage

Basic Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    /*Terraform Variables are not always the best fit for getting inputs in the context of Terraform CDK.
    You can read more about this at https://cdk.tf/variables*/
    const databaseName = new cdktf.TerraformVariable(this, "database_name", {
      default: "tftestdatabase",
    });
    const name = new cdktf.TerraformVariable(this, "name", {
      default: "tfaccxinmutes",
    });
    const password = new cdktf.TerraformVariable(this, "password", {
      default: "Test12345",
    });
    const region = new cdktf.TerraformVariable(this, "region", {
      default: "cn-hangzhou",
    });
    const dataAlicloudDbInstanceClassesDefault =
      new alicloud.dataAlicloudDbInstanceClasses.DataAlicloudDbInstanceClasses(
        this,
        "default",
        {
          engine: "MySQL",
          engineVersion: "5.6",
        }
      );
    const dataAlicloudDbZonesDefault =
      new alicloud.dataAlicloudDbZones.DataAlicloudDbZones(
        this,
        "default_5",
        {}
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAlicloudDbZonesDefault.overrideLogicalId("default");
    const dataAlicloudVpcsDefault =
      new alicloud.dataAlicloudVpcs.DataAlicloudVpcs(this, "default_6", {
        nameRegex: "default-NODELETING",
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAlicloudVpcsDefault.overrideLogicalId("default");
    const dataAlicloudVswitchesDefault =
      new alicloud.dataAlicloudVswitches.DataAlicloudVswitches(
        this,
        "default_7",
        {
          vpcId: cdktf.Token.asString(
            cdktf.propertyAccess(dataAlicloudVpcsDefault.ids, ["0"])
          ),
          zoneId: cdktf.Token.asString(
            cdktf.propertyAccess(dataAlicloudDbZonesDefault.zones, ["0", "id"])
          ),
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAlicloudVswitchesDefault.overrideLogicalId("default");
    const alicloudDbInstanceDefault = new alicloud.dbInstance.DbInstance(
      this,
      "default_8",
      {
        engine: "MySQL",
        engineVersion: "5.6",
        instanceName: name.stringValue,
        instanceStorage: cdktf.Token.asNumber("10"),
        instanceType: cdktf.Token.asString(
          cdktf.propertyAccess(
            dataAlicloudDbInstanceClassesDefault.instanceClasses,
            ["0", "instance_class"]
          )
        ),
        vswitchId: cdktf.Token.asString(
          cdktf.propertyAccess(dataAlicloudVswitchesDefault.ids, ["0"])
        ),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudDbInstanceDefault.overrideLogicalId("default");
    const alicloudRdsAccountDefault = new alicloud.rdsAccount.RdsAccount(
      this,
      "default_9",
      {
        accountName: databaseName.stringValue,
        accountPassword: password.stringValue,
        dbInstanceId: cdktf.Token.asString(alicloudDbInstanceDefault.id),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudRdsAccountDefault.overrideLogicalId("default");
    const parentId = cdktf.Fn.join(
      ".",
      cdktf.Token.asList([alicloudDbInstanceDefault.id, databaseName.value])
    );
    const alicloudDbDatabaseDefault = new alicloud.dbDatabase.DbDatabase(
      this,
      "default_10",
      {
        instanceId: cdktf.Token.asString(alicloudDbInstanceDefault.id),
        name: databaseName.stringValue,
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudDbDatabaseDefault.overrideLogicalId("default");
    const alicloudDbAccountPrivilegeDefault =
      new alicloud.dbAccountPrivilege.DbAccountPrivilege(this, "default_11", {
        accountName: cdktf.Token.asString(alicloudRdsAccountDefault.name),
        dbNames: [cdktf.Token.asString(alicloudDbDatabaseDefault.name)],
        instanceId: cdktf.Token.asString(alicloudDbInstanceDefault.id),
        privilege: "ReadWrite",
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudDbAccountPrivilegeDefault.overrideLogicalId("default");
    const alicloudSddpDataLimitDefault =
      new alicloud.sddpDataLimit.SddpDataLimit(this, "default_12", {
        auditStatus: 0,
        dependsOn: [alicloudDbAccountPrivilegeDefault],
        engineType: "MySQL",
        parentId: parentId,
        password: password.stringValue,
        port: 3306,
        resourceType: "RDS",
        serviceRegionId: region.stringValue,
        userName: databaseName.stringValue,
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudSddpDataLimitDefault.overrideLogicalId("default");
  }
}

```

## Argument Reference

The following arguments are supported:

* `auditStatus` - (Optional, Computed)  Whether to enable the log auditing feature. Valid values: `0`, `1`.
* `engineType` - (Optional, ForceNew) The type of the database. Valid values: `mySql`, `sqlServer`.
* `lang` - (Optional) The lang.
* `logStoreDay` - (Optional) The retention period of raw logs after you enable the log auditing feature. Unit: day. Valid values: `180`, `30`, `365`, `90`. **NOTE:** The`logStoreDay` is valid when the `auditStatus` is `1`.
* `parentId` - (Optional, ForceNew) The ID of the data asset.
* `password` - (Optional, ForceNew) The password that is used to connect to the database.
* `port` - (Optional, ForceNew) The port that is used to connect to the database.
* `resourceType` - (Required, ForceNew) The type of the service to which the data asset belongs. Valid values: `maxCompute`, `oss`, `rds`.
* `serviceRegionId` - (Optional, ForceNew) The region ID of the data asset.
* `userName` - (Optional, ForceNew) The name of the service to which the data asset belongs.

## Attributes Reference

The following attributes are exported:

* `id` - The resource ID in terraform of Data Limit.

## Import

Data Security Center Data Limit can be imported using the id, e.g.

```shell
$ terraform import alicloud_sddp_data_limit.example <id>
```
<!-- cache-key: cdktf-0.17.0-pre.15 input-6fc6a9059472900097dd9cff25c91af7ffced8f0e470272eab00f8af8e4f7726 -->