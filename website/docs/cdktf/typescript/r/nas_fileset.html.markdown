---
subcategory: "Network Attached Storage (NAS)"
layout: "alicloud"
page_title: "Alicloud: alicloud_nas_fileset"
sidebar_current: "docs-alicloud-resource-nas-fileset"
description: |-
  Provides a Alicloud Network Attached Storage (NAS) Fileset resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_nas\_fileset

Provides a Network Attached Storage (NAS) Fileset resource.

For information about Network Attached Storage (NAS) Fileset and how to use it, see [What is Fileset](https://www.alibabacloud.com/help/en/doc-detail/27530.html).

-> **NOTE:** Available in v1.153.0+.

## Example Usage

Basic Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const alicloudVpcExample = new alicloud.vpc.Vpc(this, "example", {
      cidrBlock: "172.17.3.0/24",
      vpcName: "terraform-example",
    });
    const dataAlicloudNasZonesExample =
      new alicloud.dataAlicloudNasZones.DataAlicloudNasZones(
        this,
        "example_1",
        {
          fileSystemType: "cpfs",
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAlicloudNasZonesExample.overrideLogicalId("example");
    const alicloudVswitchExample = new alicloud.vswitch.Vswitch(
      this,
      "example_2",
      {
        cidrBlock: "172.17.3.0/24",
        vpcId: cdktf.Token.asString(alicloudVpcExample.id),
        vswitchName: "terraform-example",
        zoneId: cdktf.Token.asString(
          cdktf.propertyAccess(dataAlicloudNasZonesExample.zones, [
            "1",
            "zone_id",
          ])
        ),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudVswitchExample.overrideLogicalId("example");
    const alicloudNasFileSystemExample =
      new alicloud.nasFileSystem.NasFileSystem(this, "example_3", {
        capacity: 3600,
        description: "terraform-example",
        fileSystemType: "cpfs",
        protocolType: "cpfs",
        storageType: "advance_200",
        vpcId: cdktf.Token.asString(alicloudVpcExample.id),
        vswitchId: cdktf.Token.asString(alicloudVswitchExample.id),
        zoneId: cdktf.Token.asString(
          cdktf.propertyAccess(dataAlicloudNasZonesExample.zones, [
            "1",
            "zone_id",
          ])
        ),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudNasFileSystemExample.overrideLogicalId("example");
    const alicloudNasFilesetExample = new alicloud.nasFileset.NasFileset(
      this,
      "example_4",
      {
        description: "terraform-example",
        fileSystemId: cdktf.Token.asString(alicloudNasFileSystemExample.id),
        fileSystemPath: "/example_path/",
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudNasFilesetExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

The following arguments are supported:

* `description` - (Optional) The description of the Fileset. It must be `2` to `128` characters in length and must start with a letter or Chinese, but cannot start with `https://` or `https://`.
* `dryRun` - (Optional) The dry run.
* `fileSystemId` - (Required, ForceNew) The ID of the file system.
* `fileSystemPath` - (Required, ForceNew) The path of the fileset.

## Attributes Reference

The following attributes are exported:

* `id` - The resource ID of the file set. The value formats as `<file_system_id>:<fileset_id>`.
* `filesetId` - The first ID of the resource.
* `status` - The status of the fileset. 

### Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/docs/configuration-0-11/resources.html#timeouts) for certain actions:

* `create` - (Defaults to 1 mins) Used when create the fileset.
* `delete` - (Defaults to 1 mins) Used when delete the fileset.

## Import

Network Attached Storage (NAS) Fileset can be imported using the id, e.g.

```shell
$ terraform import alicloud_nas_fileset.example <file_system_id>:<fileset_id>
```
<!-- cache-key: cdktf-0.17.0-pre.15 input-fae072e8583622f27ea755755441e20db626adfb9fcde82aeb0571ab4239fe75 -->