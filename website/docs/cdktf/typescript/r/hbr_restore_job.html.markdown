---
subcategory: "Hybrid Backup Recovery (HBR)"
layout: "alicloud"
page_title: "Alicloud: alicloud_hbr_restore_job"
sidebar_current: "docs-alicloud-resource-hbr-restore-job"
description: |-
  Provides a Alicloud Hybrid Backup Recovery (HBR) Restore Job resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_hbr\_restore\_job

Provides a Hybrid Backup Recovery (HBR) Restore Job resource.

For information about Hybrid Backup Recovery (HBR) Restore Job and how to use it, see [What is Restore Job](https://www.alibabacloud.com/help/doc-detail/186575.htm).

-> **NOTE:** Available in v1.133.0+.

## Example Usage

Basic Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const dataAlicloudHbrEcsBackupPlansDefault =
      new alicloud.dataAlicloudHbrEcsBackupPlans.DataAlicloudHbrEcsBackupPlans(
        this,
        "default",
        {
          nameRegex: "plan-tf-used-dont-delete",
        }
      );
    const dataAlicloudHbrNasBackupPlansDefault =
      new alicloud.dataAlicloudHbrNasBackupPlans.DataAlicloudHbrNasBackupPlans(
        this,
        "default_1",
        {
          nameRegex: "plan-tf-used-dont-delete",
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAlicloudHbrNasBackupPlansDefault.overrideLogicalId("default");
    const dataAlicloudHbrOssBackupPlansDefault =
      new alicloud.dataAlicloudHbrOssBackupPlans.DataAlicloudHbrOssBackupPlans(
        this,
        "default_2",
        {
          nameRegex: "plan-tf-used-dont-delete",
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAlicloudHbrOssBackupPlansDefault.overrideLogicalId("default");
    const dataAlicloudHbrSnapshotsEcsSnapshots =
      new alicloud.dataAlicloudHbrSnapshots.DataAlicloudHbrSnapshots(
        this,
        "ecs_snapshots",
        {
          instanceId: cdktf.Token.asString(
            cdktf.propertyAccess(dataAlicloudHbrEcsBackupPlansDefault.plans, [
              "0",
              "instance_id",
            ])
          ),
          sourceType: "ECS_FILE",
          vaultId: cdktf.Token.asString(
            cdktf.propertyAccess(dataAlicloudHbrEcsBackupPlansDefault.plans, [
              "0",
              "vault_id",
            ])
          ),
        }
      );
    const dataAlicloudHbrSnapshotsNasSnapshots =
      new alicloud.dataAlicloudHbrSnapshots.DataAlicloudHbrSnapshots(
        this,
        "nas_snapshots",
        {
          createTime: cdktf.Token.asString(
            cdktf.propertyAccess(dataAlicloudHbrNasBackupPlansDefault.plans, [
              "0",
              "create_time",
            ])
          ),
          fileSystemId: cdktf.Token.asString(
            cdktf.propertyAccess(dataAlicloudHbrNasBackupPlansDefault.plans, [
              "0",
              "file_system_id",
            ])
          ),
          sourceType: "NAS",
          vaultId: cdktf.Token.asString(
            cdktf.propertyAccess(dataAlicloudHbrNasBackupPlansDefault.plans, [
              "0",
              "vault_id",
            ])
          ),
        }
      );
    const dataAlicloudHbrSnapshotsOssSnapshots =
      new alicloud.dataAlicloudHbrSnapshots.DataAlicloudHbrSnapshots(
        this,
        "oss_snapshots",
        {
          bucket: cdktf.Token.asString(
            cdktf.propertyAccess(dataAlicloudHbrOssBackupPlansDefault.plans, [
              "0",
              "bucket",
            ])
          ),
          sourceType: "OSS",
          vaultId: cdktf.Token.asString(
            cdktf.propertyAccess(dataAlicloudHbrOssBackupPlansDefault.plans, [
              "0",
              "vault_id",
            ])
          ),
        }
      );
    new alicloud.hbrRestoreJob.HbrRestoreJob(this, "ecsJob", {
      restoreType: "ECS_FILE",
      snapshotHash: cdktf.Token.asString(
        cdktf.propertyAccess(dataAlicloudHbrSnapshotsEcsSnapshots.snapshots, [
          "0",
          "snapshot_hash",
        ])
      ),
      snapshotId: cdktf.Token.asString(
        cdktf.propertyAccess(dataAlicloudHbrSnapshotsEcsSnapshots.snapshots, [
          "0",
          "snapshot_id",
        ])
      ),
      sourceType: "ECS_FILE",
      targetInstanceId: cdktf.Token.asString(
        cdktf.propertyAccess(dataAlicloudHbrEcsBackupPlansDefault.plans, [
          "0",
          "instance_id",
        ])
      ),
      targetPath: "/",
      vaultId: cdktf.Token.asString(
        cdktf.propertyAccess(dataAlicloudHbrEcsBackupPlansDefault.plans, [
          "0",
          "vault_id",
        ])
      ),
    });
    new alicloud.hbrRestoreJob.HbrRestoreJob(this, "nasJob", {
      options: '    {"includes":[], "excludes":[]}\n',
      restoreType: "NAS",
      snapshotHash: cdktf.Token.asString(
        cdktf.propertyAccess(dataAlicloudHbrSnapshotsNasSnapshots.snapshots, [
          "0",
          "snapshot_hash",
        ])
      ),
      snapshotId: cdktf.Token.asString(
        cdktf.propertyAccess(dataAlicloudHbrSnapshotsNasSnapshots.snapshots, [
          "0",
          "snapshot_id",
        ])
      ),
      sourceType: "NAS",
      targetCreateTime: cdktf.Token.asString(
        cdktf.propertyAccess(dataAlicloudHbrNasBackupPlansDefault.plans, [
          "0",
          "create_time",
        ])
      ),
      targetFileSystemId: cdktf.Token.asString(
        cdktf.propertyAccess(dataAlicloudHbrNasBackupPlansDefault.plans, [
          "0",
          "file_system_id",
        ])
      ),
      targetPath: "/",
      vaultId: cdktf.Token.asString(
        cdktf.propertyAccess(dataAlicloudHbrNasBackupPlansDefault.plans, [
          "0",
          "vault_id",
        ])
      ),
    });
    new alicloud.hbrRestoreJob.HbrRestoreJob(this, "ossJob", {
      options: '    {"includes":[], "excludes":[]}\n',
      restoreType: "OSS",
      snapshotHash: cdktf.Token.asString(
        cdktf.propertyAccess(dataAlicloudHbrSnapshotsOssSnapshots.snapshots, [
          "0",
          "snapshot_hash",
        ])
      ),
      snapshotId: cdktf.Token.asString(
        cdktf.propertyAccess(dataAlicloudHbrSnapshotsOssSnapshots.snapshots, [
          "0",
          "snapshot_id",
        ])
      ),
      sourceType: "OSS",
      targetBucket: cdktf.Token.asString(
        cdktf.propertyAccess(dataAlicloudHbrOssBackupPlansDefault.plans, [
          "0",
          "bucket",
        ])
      ),
      targetPrefix: "",
      vaultId: cdktf.Token.asString(
        cdktf.propertyAccess(dataAlicloudHbrOssBackupPlansDefault.plans, [
          "0",
          "vault_id",
        ])
      ),
    });
  }
}

```

-> **NOTE:** This resource can only be created, cannot be modified or deleted. Therefore, any modification of the resource attribute will not affect exist resource.

## Argument Reference

The following arguments are supported:

* `restoreJobId` - (Optional, Computed, ForceNew) Restore Job ID. It's the unique key of this resource, if you want to set this argument by yourself, you must specify a unique keyword that never appears.
* `vaultId` - (Required, ForceNew) The ID of backup vault.
* `sourceType` - (Required, ForceNew) The type of data source. Valid values: `ecsFile`, `nas`, `oss`,`otsTable`,`udmEcs`.
* `restoreType` - (Required, ForceNew) The type of recovery destination. Valid values: `ecsFile`, `nas`, `oss`,`otsTable`,`udmEcsRollback`. **Note**: Currently, there is a one-to-one correspondence between the data source type with the recovery destination type.
* `snapshotId` - (Required, ForceNew) The ID of Snapshot.
* `snapshotHash` - (Required, ForceNew) The hashcode of Snapshot.
* `options` - (Optional, ForceNew) Recovery options. **NOTE:** Required while source_type equals `oss` or `nas`, invalid while source_type equals `ecsFile`. It's a json string with format:`"{"includes":[],"excludes":[]}",`. Recovery options. When restores OTS_TABLE and real target time is the rangEnd time of the snapshot, it should be a string with format: `{"uiTargetTime":1650032529018}`.
* `exclude` - (Optional) The exclude path. **NOTE:** Invalid while source_type equals `oss` or `nas`. It's a json string with format:`["/excludePath]`, up to 255 characters. **WARNING:** If this value filled in incorrectly, the task may not start correctly, so please check the parameters before executing the plan.
* `include` - (Optional) The include path. **NOTE:** Invalid while source_type equals `oss` or `nas`. It's a json string with format:`["/includePath"]`, Up to 255 characters. **WARNING:** The field is required while source_type equals `otsTable` which means source table name. If this value filled in incorrectly, the task may not start correctly, so please check the parameters before executing the plan. 
* `targetBucket` - (Optional, ForceNew) The target name of OSS bucket. **NOTE:** Required while source_type equals `oss`,
* `targetPrefix` - (Optional, ForceNew) The target prefix of the OSS object. **WARNING:** Required while source_type equals `oss`. If this value filled in incorrectly, the task may not start correctly, so please check the parameters before executing the plan.
* `targetFileSystemId` - (Optional, ForceNew) The ID of destination File System. **NOTE:** Required while source_type equals `nas`
* `targetCreateTime` - (Optional, ForceNew) The creation time of destination File System. **NOTE:** While source_type equals `nas`, this parameter must be set. **Note:** The time format of the API adopts the ISO 8601 format, such as `20210709T15:45:30Cst` or `20210709T07:45:30Z`.
* `targetPath` - (Optional, ForceNew) The target file path of (ECS) instance. **WARNING:** Required while source_type equals `nas` or `ecsFile`, If this value filled in incorrectly, the task may not start correctly, so please check the parameters before executing the plan.
* `targetInstanceId` - (Optional, ForceNew)  The target ID of ECS instance. **NOTE:** Required while source_type equals `ecsFile`
* `targetClientId` - (Optional, ForceNew) The target client ID.
* `targetDataSourceId` - (Optional, ForceNew) The target data source ID.
* `targetTime` - (Optional, Available in v1.164.0) The time when data is restored to the Table store instance. This value is a UNIX timestamp. Unit: seconds. **WARNING:** Required while source_type equals `otsTable`. **Note:** The time when data is restored to the Tablestore instance. It should be 0 if restores data at the End time of the snapshot.
* `udmDetail` - (Optional, Available in v1.164.0) The full machine backup details.
* `targetInstanceName` - (Optional, Available in v1.164.0) The name of the Table store instance to which you want to restore data.**WARNING:** Required while source_type equals `otsTable`.
* `targetTableName` - (Optional, Available in v1.164.0) The name of the table that stores the restored data. **WARNING:** Required while source_type equals `otsTable`.
* `otsDetail` - (Optional, Computed, Available in v1.186.0) The details about the Tablestore instance. See the following `Block ots_detail`.
* `crossAccountType` - (Optional, ForceNew, Computed, Available in v1.189.0+) The type of the cross account backup. Valid values: `selfAccount`, `crossAccount`.
* `crossAccountUserId` - (Optional, ForceNew, Available in v1.189.0+) The original account ID of the cross account backup managed by the current account.
* `crossAccountRoleName` - (Optional, ForceNew, Available in v1.189.0+) The role name created in the original account RAM backup by the cross account managed by the current account.

#### Block ots_detail

The ots_detail supports the following:
* `overwriteExisting` - (Optional, ForceNew, Computed) Whether to overwrite the existing table storage recovery task. Valid values: `true`, `false`.

## Attributes Reference

The following attributes are exported:

* `id` - The resource ID of Restore Job. The value formats as `<restore_job_id>:<restore_type>`.
* `status` - The Restore Job Status.

### Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/docs/configuration-0-11/resources.html#timeouts) for certain actions:

* `create` - (Defaults to 3 mins) Used when create the Restore Job.

## Import

Hybrid Backup Recovery (HBR) Restore Job can be imported using the id. Format to `<restore_job_id>:<restore_type>`, e.g.

```shell
$ terraform import alicloud_hbr_restore_job.example your_restore_job_id:your_restore_type
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-71682356301d4a90c14187a2957ed78bc9fb0f7c7ea951a949c4d9a108bb2423 -->