---
subcategory: "RDS"
layout: "alicloud"
page_title: "Alicloud: alicloud_rds_db_proxy"
sidebar_current: "docs-alicloud-resource-rds-db-proxy"
description: |-
  Provides an RDS instance read write splitting connection resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_rds\_db\_proxy

Information about RDS database exclusive agent and its usage, see [Dedicated proxy (read/write splitting).](https://www.alibabacloud.com/help/en/apsaradb-for-rds/latest/dedicated-proxy).
-> **NOTE:** Available in 1.193.0+.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    /*Terraform Variables are not always the best fit for getting inputs in the context of Terraform CDK.
    You can read more about this at https://cdk.tf/variables*/
    const creation = new cdktf.TerraformVariable(this, "creation", {
      default: "Rds",
    });
    const name = new cdktf.TerraformVariable(this, "name", {
      default: "dbInstancevpc",
    });
    const alicloudVpcDefault = new alicloud.vpc.Vpc(this, "default", {
      cidrBlock: "172.16.0.0/16",
      vpcName: name.stringValue,
    });
    const dataAlicloudZonesDefault =
      new alicloud.dataAlicloudZones.DataAlicloudZones(this, "default_3", {
        availableResourceCreation: creation.stringValue,
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAlicloudZonesDefault.overrideLogicalId("default");
    const alicloudVswitchDefault = new alicloud.vswitch.Vswitch(
      this,
      "default_4",
      {
        cidrBlock: "172.16.0.0/24",
        vpcId: cdktf.Token.asString(alicloudVpcDefault.id),
        vswitchName: name.stringValue,
        zoneId: cdktf.Token.asString(
          cdktf.propertyAccess(dataAlicloudZonesDefault.zones, ["0", "id"])
        ),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudVswitchDefault.overrideLogicalId("default");
    const alicloudDbInstanceDefault = new alicloud.dbInstance.DbInstance(
      this,
      "default_5",
      {
        dbInstanceStorageType: "local_ssd",
        engine: "MySQL",
        engineVersion: "5.7",
        instanceChargeType: "Postpaid",
        instanceName: name.stringValue,
        instanceStorage: cdktf.Token.asNumber("20"),
        instanceType: "rds.mysql.c1.large",
        vswitchId: cdktf.Token.asString(alicloudVswitchDefault.id),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudDbInstanceDefault.overrideLogicalId("default");
    const alicloudDbReadonlyInstanceDefault =
      new alicloud.dbReadonlyInstance.DbReadonlyInstance(this, "default_6", {
        engineVersion: cdktf.Token.asString(
          alicloudDbInstanceDefault.engineVersion
        ),
        instanceName: "${" + name.value + "}ro",
        instanceStorage: cdktf.Token.asNumber("20"),
        instanceType: "rds.mysql.s3.large",
        masterDbInstanceId: cdktf.Token.asString(alicloudDbInstanceDefault.id),
        vswitchId: cdktf.Token.asString(alicloudVswitchDefault.id),
        zoneId: cdktf.Token.asString(alicloudDbInstanceDefault.zoneId),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudDbReadonlyInstanceDefault.overrideLogicalId("default");
    const alicloudRdsDbProxyDefault = new alicloud.rdsDbProxy.RdsDbProxy(
      this,
      "default_7",
      {
        dbProxyConnectStringPort: 3306,
        dbProxyConnectionPrefix: "ttest001",
        dbProxyEndpointReadWriteMode: "ReadWrite",
        dbProxyFeatures:
          "TransactionReadSqlRouteOptimizeStatus:1;ConnectionPersist:1;ReadWriteSpliting:1",
        dbProxyInstanceNum: 2,
        instanceId: cdktf.Token.asString(alicloudDbInstanceDefault.id),
        instanceNetworkType: "VPC",
        readOnlyInstanceDistributionType: "Custom",
        readOnlyInstanceMaxDelayTime: 90,
        readOnlyInstanceWeight: [
          {
            instanceId: cdktf.Token.asString(alicloudDbInstanceDefault.id),
            weight: "100",
          },
          {
            instanceId: cdktf.Token.asString(
              alicloudDbReadonlyInstanceDefault.id
            ),
            weight: "500",
          },
        ],
        vpcId: cdktf.Token.asString(alicloudDbInstanceDefault.vpcId),
        vswitchId: cdktf.Token.asString(alicloudDbInstanceDefault.vswitchId),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudRdsDbProxyDefault.overrideLogicalId("default");
  }
}

```

-> **NOTE:** Resource `alicloudRdsDbProxy` should be created after `alicloudDbReadonlyInstance`, so the `dependsOn` statement is necessary.

## Argument Reference

The following arguments are supported:

* `instanceId` - (Required, ForceNew) The Id of instance that can run database.
* `dbProxyInstanceNum` - (Required)The number of proxy instances that are enabled. Valid values: 1 to 60.
* `instanceNetworkType` - (Required, ForceNew)The network type of the instance. Set the value to VPC.
* `vpcId` - (Required, ForceNew)The ID of the virtual private cloud (VPC) to which the instance belongs.
* `vswitchId` - (Required, ForceNew)The ID of the vSwitch that is associated with the specified VPC.
* `dbProxyConnectionPrefix` - (Optional)The new prefix of the proxy endpoint. Enter a prefix.
* `dbProxyConnectStringPort` - (Optional)The port number that is associated with the proxy endpoint.
* `effectiveTime` - (Optional)When modifying the number of proxy instances,The time when you want to apply the new database proxy settings.Valid values:
  - Immediate: ApsaraDB RDS immediately applies the new settings.
  - MaintainTime: ApsaraDB RDS applies the new settings during the maintenance window that you specified. For more information, see Modify the maintenance window.
  - SpecificTime: ApsaraDB RDS applies the new settings at a specified point in time.

-> **NOTE:** Note If you set the EffectiveTime parameter to SpecificTime, you must specify the EffectiveSpecificTime parameter.

* `effectiveSpecificTime` - (Optional) The point in time at which you want to apply the new database proxy settings. Specify the time in the ISO 8601 standard in the yyyy-MM-ddTHH:mm:ssZ format. The time must be in UTC.
* `readOnlyInstanceMaxDelayTime` - (Optional) The maximum latency threshold that is allowed for read/write splitting. If the latency on a read-only instance exceeds the threshold that you specified, ApsaraDB RDS no longer forwards read requests to the read-only instance. If you do not specify this parameter, the default value of this parameter is retained. Unit: seconds. Valid values: 0 to 3600.

-> **NOTE:** Note If the instance runs PostgreSQL, you can enable only the read/write splitting feature, which is specified by ReadWriteSpliting.

* `dbProxyFeatures` - (Optional) The features that you want to enable for the proxy endpoint. If you specify more than one feature, separate the features with semicolons (;). Format: Feature 1:Status;Feature 2:Status;.... Do not add a semicolon (;) at the end of the last value. Valid feature values:
  - ReadWriteSpliting: read/write splitting.
  - ConnectionPersist: connection pooling.
  - TransactionReadSqlRouteOptimizeStatus: transaction splitting.
    Valid status values:
    - 1: enabled.
    - 0: disabled.

-> **NOTE:** Note You must specify this parameter only when the read/write splitting feature is enabled.

* `readOnlyInstanceDistributionType` - (Optional) The policy that is used to allocate read weights. Valid values:
  - Standard: ApsaraDB RDS automatically allocates read weights to the instance and its read-only instances based on the specifications of the instances.
  - Custom: You must manually allocate read weights to the instance and its read-only instances.

-> **NOTE:** Note If you set the ReadOnlyInstanceDistributionType parameter to Custom, you must specify the ReadOnlyInstanceWeight parameter.

* `readOnlyInstanceWeight` - (Optional) A list of the read weights of the instance and its read-only instances.  It contains two sub-fields(instance_id and weight). Read weights increase in increments of 100, and the maximum read weight is 10000.
* `dbProxyEndpointReadWriteMode` - (Optional) The read and write attributes of the proxy terminal. Valid values:
  - ReadWrite: The proxy terminal connects to the primary instance and can receive both read and write requests.
  - ReadOnly: The proxy terminal does not connect to the primary instance and can receive only read requests. This is the default value.

-> **NOTE:** Note This setting causes your instance to restart. Proceed with caution.

* `dbProxySslEnabled` - (Optional) The SSL configuration setting that you want to apply on the instance. Valid values:
  - Close: disables SSL encryption.
  - Open: enables SSL encryption or modifies the endpoint that requires SSL encryption.
  - Update: updates the validity period of the SSL certificate.
* `upgradeTime` - (Optional) The time when you want to upgrade the database proxy version of the instance. Valid values:
  - MaintainTime: ApsaraDB RDS performs the upgrade during the maintenance window that you specified. This is the default value. For more information, see Modify the maintenance window.
  - Immediate: ApsaraDB RDS immediately performs the upgrade.
  - SpecificTime: ApsaraDB RDS performs the upgrade at a specified point in time.  
* `switchTime` - (Optional) The point in time at which you want to upgrade the database proxy version of the instance. Specify the time in the ISO 8601 standard in the yyyy-MM-ddTHH:mm:ssZ format. The time must be in UTC.
* `resourceGroupId` - (Optional) The ID of the resource group.

## Block read_only_instance_weight

The read_only_instance_weight mapping supports the following:

* `instanceId` - (Required) The Id of the instance and its read-only instances that can run database.
* `weight` - (Required) Weight of instances that can run the database and their read-only instances. Read weights increase in increments of 100, and the maximum read weight is 10000.

## Attributes Reference

The following attributes are exported:

* `id` - The Id of DB instance.
* `netType` - Network type of proxy connection address.
* `dbProxyEndpointAliases` - Remarks of agent terminal.
* `dbProxyEndpointId` - Proxy connection address ID.
* `dbProxyConnectionString` - Connection instance string.
* `sslExpiredTime` - The time when the certificate expires.

### Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/docs/configuration-0-11/resources.html#timeouts) for certain actions:

* `create` - (Defaults to 60 mins) Use when opening exclusive agent (until it reaches the initial `running` status).
* `update` - (Defaults to 30 mins) Used when updating exclusive agent (until it reaches the initial `running` status).
* `delete` - (Defaults to 20 mins) Use when closing exclusive agent.

## Import

RDS database proxy feature can be imported using the id, e.g.

```shell
$ terraform import alicloud_rds_db_proxy.example abc12345678
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-826edcdc6cd7dd752b44f0a9403d83e8c90787537223e05fbb74fa189421716b -->