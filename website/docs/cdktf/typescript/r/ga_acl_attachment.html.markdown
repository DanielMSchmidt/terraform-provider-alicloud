---
subcategory: "Global Accelerator (GA)"
layout: "alicloud"
page_title: "Alicloud: alicloud_ga_acl_attachment"
sidebar_current: "docs-alicloud-resource-ga-acl-attachment"
description: |-
  Provides a Alicloud Global Accelerator (GA) Acl Attachment resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_ga\_acl\_attachment

Provides a Global Accelerator (GA) Acl Attachment resource.

For information about Global Accelerator (GA) Acl Attachment and how to use it, see [What is Acl Attachment](https://www.alibabacloud.com/help/en/doc-detail/258295.html).

-> **NOTE:** Available in v1.150.0+.

## Example Usage

Basic Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    /*Terraform Variables are not always the best fit for getting inputs in the context of Terraform CDK.
    You can read more about this at https://cdk.tf/variables*/
    const name = new cdktf.TerraformVariable(this, "name", {
      default: "tf-testacc-ga",
    });
    const alicloudGaAclDefault = new alicloud.gaAcl.GaAcl(this, "default", {
      aclEntries: [
        {
          entry: "192.168.1.0/24",
          entryDescription: "tf-test1",
        },
      ],
      aclName: name.stringValue,
      addressIpVersion: "IPv4",
    });
    const dataAlicloudGaAcceleratorsDefault =
      new alicloud.dataAlicloudGaAccelerators.DataAlicloudGaAccelerators(
        this,
        "default_2",
        {
          status: "active",
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAlicloudGaAcceleratorsDefault.overrideLogicalId("default");
    const dataAlicloudGaBandwidthPackagesDefault =
      new alicloud.dataAlicloudGaBandwidthPackages.DataAlicloudGaBandwidthPackages(
        this,
        "default_3",
        {
          status: "active",
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAlicloudGaBandwidthPackagesDefault.overrideLogicalId("default");
    /*In most cases loops should be handled in the programming language context and 
    not inside of the Terraform context. If you are looping over something external, e.g. a variable or a file input
    you should consider using a for loop. If you are looping over something only known to Terraform, e.g. a result of a data source
    you need to keep this like it is.*/
    const alicloudGaAcceleratorDefaultCount = cdktf.TerraformCount.of(
      cdktf.Token.asNumber(
        cdktf.conditional(
          cdktf.Op.gt(
            cdktf.Fn.lengthOf(dataAlicloudGaAcceleratorsDefault.accelerators),
            0
          ),
          0,
          1
        )
      )
    );
    const alicloudGaAcceleratorDefault =
      new alicloud.gaAccelerator.GaAccelerator(this, "default_4", {
        autoUseCoupon: true,
        duration: 1,
        spec: "1",
        count: alicloudGaAcceleratorDefaultCount,
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudGaAcceleratorDefault.overrideLogicalId("default");
    /*In most cases loops should be handled in the programming language context and 
    not inside of the Terraform context. If you are looping over something external, e.g. a variable or a file input
    you should consider using a for loop. If you are looping over something only known to Terraform, e.g. a result of a data source
    you need to keep this like it is.*/
    const alicloudGaBandwidthPackageDefaultCount = cdktf.TerraformCount.of(
      cdktf.Token.asNumber(
        cdktf.conditional(
          cdktf.Op.gt(
            cdktf.Fn.lengthOf(dataAlicloudGaBandwidthPackagesDefault.packages),
            0
          ),
          0,
          1
        )
      )
    );
    const alicloudGaBandwidthPackageDefault =
      new alicloud.gaBandwidthPackage.GaBandwidthPackage(this, "default_5", {
        autoPay: true,
        autoUseCoupon: true,
        bandwidth: 20,
        bandwidthType: "Basic",
        duration: cdktf.Token.asString(1),
        ratio: 30,
        type: "Basic",
        count: alicloudGaBandwidthPackageDefaultCount,
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudGaBandwidthPackageDefault.overrideLogicalId("default");
    const acceleratorId = cdktf.conditional(
      cdktf.Op.gt(
        cdktf.Fn.lengthOf(dataAlicloudGaAcceleratorsDefault.accelerators),
        0
      ),
      cdktf.propertyAccess(dataAlicloudGaAcceleratorsDefault.accelerators, [
        "0",
        "id",
      ]),
      cdktf.propertyAccess(alicloudGaAcceleratorDefault, ["0", "id"])
    );
    const bandwidthPackageId = cdktf.conditional(
      cdktf.Op.gt(
        cdktf.Fn.lengthOf(dataAlicloudGaBandwidthPackagesDefault.packages),
        0
      ),
      cdktf.propertyAccess(dataAlicloudGaBandwidthPackagesDefault.packages, [
        "0",
        "id",
      ]),
      cdktf.propertyAccess(alicloudGaBandwidthPackageDefault, ["0", "id"])
    );
    const alicloudGaBandwidthPackageAttachmentDefault =
      new alicloud.gaBandwidthPackageAttachment.GaBandwidthPackageAttachment(
        this,
        "default_6",
        {
          acceleratorId: acceleratorId,
          bandwidthPackageId: bandwidthPackageId,
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudGaBandwidthPackageAttachmentDefault.overrideLogicalId("default");
    const alicloudGaListenerDefault = new alicloud.gaListener.GaListener(
      this,
      "default_7",
      {
        acceleratorId: acceleratorId,
        dependsOn: [alicloudGaBandwidthPackageAttachmentDefault],
        portRanges: [
          {
            fromPort: 60,
            toPort: 70,
          },
        ],
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudGaListenerDefault.overrideLogicalId("default");
    const alicloudGaAclAttachmentDefault =
      new alicloud.gaAclAttachment.GaAclAttachment(this, "default_8", {
        aclId: cdktf.Token.asString(alicloudGaAclDefault.id),
        aclType: "white",
        listenerId: cdktf.Token.asString(alicloudGaListenerDefault.id),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudGaAclAttachmentDefault.overrideLogicalId("default");
  }
}

```

## Argument Reference

The following arguments are supported:

* `aclId` - (Required, ForceNew) The ID of an ACL.
* `aclType` - (Required, ForceNew) The type of the ACL. Valid values: `white`, `black`. 
  - `white`: Only requests from IP addresses or address segments in the selected access control list are forwarded. The whitelist applies to scenarios where applications only allow specific IP addresses. There are certain business risks in setting up a whitelist. Once the whitelist is set, only the IP addresses in the whitelist can access global acceleration listeners. If whitelist access is enabled, but no IP is added to the access policy group, the global acceleration listener will not forward the request.
  - `black`: All requests from IP addresses or address segments in the selected access control list are not forwarded. Blacklists are applicable to scenarios where applications restrict access to specific IP addresses. If blacklist access is enabled and no IP is added to the access policy group, the global acceleration listener forwards all requests.
* `dryRun` - (Optional) The dry run.
* `listenerId` - (Required, ForceNew) The ID of the listener.

## Attributes Reference

The following attributes are exported:

* `id` - The resource ID of Acl Attachment. The value formats as `<listener_id>:<acl_id>`.
* `status` - The status of the resource. 

### Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/docs/configuration-0-11/resources.html#timeouts) for certain actions:

* `create` - (Defaults to 5 mins) Used when create the Acl Attachment.
* `delete` - (Defaults to 5 mins) Used when delete the Acl Attachment.

## Import

Global Accelerator (GA) Acl Attachment can be imported using the id. Format to `<listener_id>:<acl_id>`, e.g.

```shell
$ terraform import alicloud_ga_acl_attachment.example your_listener_id:your_acl_id
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-fea2a6c4eb97f50cfd9b8e365af1bb0facd0ba191e2a6c0ecb8c2dfa06acf746 -->