---
subcategory: "VPC"
layout: "alicloud"
page_title: "Alicloud: alicloud_vpc_peer_connection"
sidebar_current: "docs-alicloud-resource-vpc-peer-connection"
description: |-
  Provides a Alicloud VPC Peer Connection resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_vpc\_peer\_connection

Provides a VPC Peer Connection resource.

For information about VPC Peer Connection and how to use it, see [What is Peer Connection](https://www.alibabacloud.com/help/en/virtual-private-cloud/latest/createvpcpeer).

-> **NOTE:** Available in v1.186.0+.

## Example Usage

Basic Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    /*Terraform Variables are not always the best fit for getting inputs in the context of Terraform CDK.
    You can read more about this at https://cdk.tf/variables*/
    const alicloudLocal = new alicloud.provider.AlicloudProvider(
      this,
      "alicloud",
      {
        alias: "local",
        region: "cn-hangzhou",
      }
    );
    const acceptingRegion = new cdktf.TerraformVariable(
      this,
      "accepting_region",
      {
        default: "cn-beijing",
      }
    );
    const alicloudVpcLocalVpc = new alicloud.vpc.Vpc(this, "local_vpc", {
      cidrBlock: "172.17.3.0/24",
      provider: alicloudLocal,
      vpcName: "terraform-example",
    });
    const dataAlicloudAccountDefault =
      new alicloud.dataAlicloudAccount.DataAlicloudAccount(this, "default", {});
    const alicloudAccepting = new alicloud.provider.AlicloudProvider(
      this,
      "alicloud_4",
      {
        alias: "accepting",
        region: acceptingRegion.stringValue,
      }
    );
    const alicloudVpcAcceptingVpc = new alicloud.vpc.Vpc(
      this,
      "accepting_vpc",
      {
        cidrBlock: "172.17.3.0/24",
        provider: alicloudAccepting,
        vpcName: "terraform-example",
      }
    );
    const alicloudVpcPeerConnectionDefault =
      new alicloud.vpcPeerConnection.VpcPeerConnection(this, "default_6", {
        acceptingAliUid: cdktf.Token.asNumber(dataAlicloudAccountDefault.id),
        acceptingRegionId: acceptingRegion.stringValue,
        acceptingVpcId: cdktf.Token.asString(alicloudVpcAcceptingVpc.id),
        description: "terraform-example",
        peerConnectionName: "terraform-example",
        provider: alicloudLocal,
        vpcId: cdktf.Token.asString(alicloudVpcLocalVpc.id),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudVpcPeerConnectionDefault.overrideLogicalId("default");
  }
}

```

## Argument Reference

The following arguments are supported:

* `acceptingAliUid` - (Required, ForceNew) The ID of the Alibaba Cloud account (primary account) of the receiving end of the VPC peering connection to be created.
  - Enter the ID of your Alibaba Cloud account to create a peer-to-peer connection to the VPC account.
  - Enter the ID of another Alibaba Cloud account to create a cross-account VPC peer-to-peer connection.
  - If the recipient account is a RAM user (sub-account), enter the ID of the Alibaba Cloud account corresponding to the RAM user.
* `acceptingRegionId` - (Required, ForceNew) The region ID of the recipient of the VPC peering connection to be created.
  - When creating a VPC peer-to-peer connection in the same region, enter the same region ID as the region ID of the initiator.
  - When creating a cross-region VPC peer-to-peer connection, enter a region ID that is different from the region ID of the initiator.
* `acceptingVpcId` - (Required, ForceNew) The VPC ID of the receiving end of the VPC peer connection.
* `bandwidth` - (Optional, Computed) The bandwidth of the VPC peering connection to be modified. Unit: Mbps. The value range is an integer greater than 0.
* `description` - (Optional) The description of the VPC peer connection to be created. It must be 2 to 256 characters in length and must start with a letter or Chinese, but cannot start with `http://` or `https://`.
* `dryRun` - (Optional) The dry run.
* `peerConnectionName` - (Optional) The name of the resource. The name must be 2 to 128 characters in length, and must start with a letter. It can contain digits, underscores (_), and hyphens (-).
* `vpcId` - (Required, ForceNew) The ID of the requester VPC.

## Attributes Reference

The following attributes are exported:

* `id` - The resource ID in terraform of Peer Connection.
* `status` - The status of the resource.

### Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/docs/configuration-0-11/resources.html#timeouts) for certain actions:

* `create` - (Defaults to 1 mins) Used when create the Peer Connection.
* `delete` - (Defaults to 1 mins) Used when delete the Peer Connection.
* `update` - (Defaults to 1 mins) Used when update the Peer Connection.

## Import

VPC Peer Connection can be imported using the id, e.g.

```shell
$ terraform import alicloud_vpc_peer_connection.example <id>
```
<!-- cache-key: cdktf-0.17.0-pre.15 input-ecbabade461f4bb11f8694b6190c6c1a4b9e6a0abcb3a1db35ee42f7327dca62 -->