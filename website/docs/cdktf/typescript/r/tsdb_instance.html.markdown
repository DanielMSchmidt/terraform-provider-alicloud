---
subcategory: "Time Series Database (TSDB)"
layout: "alicloud"
page_title: "Alicloud: alicloud_tsdb_instance"
sidebar_current: "docs-alicloud-resource-tsdb-instance"
description: |-
  Provides a Alicloud Time Series Database (TSDB) Instance resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_tsdb\_instance

Provides a Time Series Database (TSDB) Instance resource.

For information about Time Series Database (TSDB) Instance and how to use it, see [What is Time Series Database (TSDB)](https://www.alibabacloud.com/help/en/doc-detail/55652.htm).

-> **NOTE:** Available in v1.112.0+.

## Example Usage

Basic Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const alicloudVpcExample = new alicloud.vpc.Vpc(this, "example", {
      cidrBlock: "192.168.0.0/16",
      name: "tf-testaccTsdbInstance",
    });
    const dataAlicloudTsdbZonesExample =
      new alicloud.dataAlicloudTsdbZones.DataAlicloudTsdbZones(
        this,
        "example_1",
        {}
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAlicloudTsdbZonesExample.overrideLogicalId("example");
    const alicloudVswitchExample = new alicloud.vswitch.Vswitch(
      this,
      "example_2",
      {
        availabilityZone: cdktf.Token.asString(
          cdktf.propertyAccess(dataAlicloudTsdbZonesExample.ids, ["0"])
        ),
        cidrBlock: "192.168.1.0/24",
        vpcId: cdktf.Token.asString(alicloudVpcExample.id),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudVswitchExample.overrideLogicalId("example");
    const alicloudTsdbInstanceExample = new alicloud.tsdbInstance.TsdbInstance(
      this,
      "example_3",
      {
        engineType: "tsdb_tsdb",
        instanceAlias: "tf-testaccTsdbInstance",
        instanceClass: "tsdb.1x.basic",
        instanceStorage: "50",
        paymentType: "PayAsYouGo",
        vswitchId: cdktf.Token.asString(alicloudVswitchExample.id),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudTsdbInstanceExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

The following arguments are supported:

* `appKey` - (Optional) The app key.
* `diskCategory` - (Optional, ForceNew) The disk type of instance. Valid when the engine type is `tsdbInfluxdb`. `cloudSsd` refers to SSD disk, `cloudEfficiency` refers to efficiency disk, `cloudEssd` refers to ESSD PL1 disk. Valid values: `cloudEfficiency`, `cloudEssd`, `cloudSsd`.
* `duration` - (Optional, ForceNew) The duration.
* `engineType` - (Optional, ForceNew) The engine type of instance Enumerative: `tsdbTsdb` refers to TSDB, `tsdbInfluxdb` refers to TSDB for InfluxDB️.
* `instanceAlias` - (Optional) The alias of the instance.
* `instanceClass` - (Required) The specification of the instance. 
    - Following enumerative value for TSDB for InfluxDB️ standart edition:
    - `influxdataN1Mxlarge` refers to 2 CPU 8GB memory;
    - `influxdataN1Xlarge` refers to 4 CPU 16GB memory;
    - `influxdataN12Xlarge` refers to 8 CPU 32 GB memory;
    - `influxdataN14Xlarge` refers to 16 CPU 64 GB memory;
    - `influxdataN18Xlarge` refers to 32 CPU 128 GB memory;
    - `influxdataN116Xlarge` refers to 64 CPU 256 GB memory. 
    - Following enumerative value for TSDB for InfluxDB High-availability edition:
    - `influxdataN1MxlargeHa` refers to 2 CPU 8GB memory;
    - `influxdataN1XlargeHa` refers to 4 CPU 16GB memory;
    - `influxdataN12XlargeHa` refers to 8 CPU 32 GB memory;
    - `influxdataN14XlargeHa` refers to 16 CPU 64 GB memory;
    - `influxdataN18XlargeHa` refers to 32 CPU 128 GB memory;
    - `influxdataN116XlargeHa` refers to 64 CPU 256 GB memory. 
    - Following enumerative value for TSDB:
    - `tsdb1XBasic` refers to basic edition I;
    - `tsdb3XBasic` refers to basic edition II; 
    - `tsdb4XBasic` refers to basic edtion III;
    - `tsdb12XStandard` refers to standard edition I; 
    - `tsdb24XStandard` refers to standard edition II; 
    - `tsdb48XLarge` refers to ultimate edition I;
    - `tsdb96XLarge` refers to ultimate edition II.
* `instanceStorage` - (Required) The storage capacity of the instance. Unit: GB. For example, the value 50 indicates 50 GB. Does not support shrink storage.
* `paymentType` - (Required, ForceNew) The billing method. Valid values: `payAsYouGo` and `subscription`. The `payAsYouGo` value indicates the pay-as-you-go method, and the `subscription` value indicates the subscription method.
* `vswitchId` - (Required, ForceNew) The vswitch id.
* `zoneId` - (Optional, Computed, ForceNew) The zone ID of the instance.

## Attributes Reference

The following attributes are exported:

* `id` - The resource ID in terraform of Instance.
* `status` - Instance status, enumerative: `activation`, `deleted`, `creating`, `classChanging`, `locked`.

### Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/docs/configuration-0-11/resources.html#timeouts) for certain actions:

* `create` - (Defaults to 31 mins) Used when create the Instance.
* `update` - (Defaults to 31 mins) Used when update the Instance.

## Import

TSDB Instance can be imported using the id, e.g.

```shell
$ terraform import alicloud_tsdb_instance.example <id>
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-732f011956811cd42d40be9e801550002681d73e4c82ad05c543ba31c810dafd -->