---
subcategory: "RDS"
layout: "alicloud"
page_title: "Alicloud: alicloud_rds_backup"
sidebar_current: "docs-alicloud-resource-rds-backup"
description: |-
  Provides a Alicloud RDS Backup resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_rds\_backup

Provides a RDS Backup resource.

For information about RDS Backup and how to use it, see [What is Backup](https://www.alibabacloud.com/help/doc-detail/26272.htm).

-> **NOTE:** Available in v1.149.0+.

## Example Usage

Basic Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const alicloudDbInstanceExample = new alicloud.dbInstance.DbInstance(
      this,
      "example",
      {
        dbInstanceStorageType: "local_ssd",
        engine: "MySQL",
        engineVersion: "5.6",
        instanceChargeType: "Postpaid",
        instanceStorage: cdktf.Token.asNumber("30"),
        instanceType: "rds.mysql.t1.small",
      }
    );
    const alicloudRdsBackupExample = new alicloud.rdsBackup.RdsBackup(
      this,
      "example_1",
      {
        dbInstanceId: cdktf.Token.asString(alicloudDbInstanceExample.id),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudRdsBackupExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

The following arguments are supported:

* `backupMethod` - (Optional, Computed) The type of backup that you want to perform. Default value: `physical`. Valid values: `logical`, `physical` and `snapshot`.
* `backupStrategy` - (Optional) The policy that you want to use for the backup task. Valid values:
  * **db**: specifies to perform a database-level backup.
  * **instance**: specifies to perform an instance-level backup.
* `backupType` - (Optional, Computed) The method that you want to use for the backup task. Default value: `auto`. Valid values:
  * **Auto**: specifies to automatically perform a full or incremental backup.
  * **FullBackup**: specifies to perform a full backup.
* `dbInstanceId` - (Required, ForceNew) The db instance id.
* `dbName` - (Optional) The names of the databases whose data you want to back up. Separate the names of the databases with commas (,).
* `removeFromState` - (Optional) Remove form state when resource cannot be deleted. Valid values: `true` and `false`.

## Attributes Reference

The following attributes are exported:

* `id` - The resource ID in terraform of Backup.
* `backupId` - The backup id.
* `storeStatus` - Indicates whether the data backup file can be deleted. Valid values: `enabled` and `disabled`.

### Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/docs/configuration-0-11/resources.html#timeouts) for certain actions:

* `create` - (Defaults to 20 mins) Used when creating the backup.
* `delete` - (Defaults to 20 mins) Used when deleting the backup.

## Import

RDS Backup can be imported using the id, e.g.

```shell
$ terraform import alicloud_rds_backup.example <db_instance_id>:<backup_id>
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-b64a793b23219fb212b360ea9cc28ff08e5036c278d94d3772ee353bc2bdcef9 -->