---
subcategory: "VPC"
layout: "alicloud"
page_title: "Alicloud: alicloud_havip_attachment"
sidebar_current: "docs-alicloud-resource-havip-attachment"
description: |-
  Provides an Alicloud HaVip Attachment resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_havip\_attachment

Provides an Alicloud HaVip Attachment resource for associating HaVip to ECS Instance.

-> **NOTE:** Terraform will auto build havip attachment while it uses `alicloudHavipAttachment` to build a havip attachment resource.

## Example Usage

Basic Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    /*Terraform Variables are not always the best fit for getting inputs in the context of Terraform CDK.
    You can read more about this at https://cdk.tf/variables*/
    const name = new cdktf.TerraformVariable(this, "name", {
      default: "test_havip_attachment",
    });
    const alicloudVpcFoo = new alicloud.vpc.Vpc(this, "foo", {
      cidrBlock: "172.16.0.0/12",
      name: name.stringValue,
    });
    const dataAlicloudImagesDefault =
      new alicloud.dataAlicloudImages.DataAlicloudImages(this, "default", {
        mostRecent: true,
        nameRegex: "^ubuntu_18.*64",
        owners: "system",
      });
    const dataAlicloudZonesDefault =
      new alicloud.dataAlicloudZones.DataAlicloudZones(this, "default_3", {
        availableResourceCreation: "VSwitch",
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAlicloudZonesDefault.overrideLogicalId("default");
    const alicloudSecurityGroupTfTestFoo =
      new alicloud.securityGroup.SecurityGroup(this, "tf_test_foo", {
        description: "foo",
        name: name.stringValue,
        vpcId: cdktf.Token.asString(alicloudVpcFoo.id),
      });
    const alicloudVswitchFoo = new alicloud.vswitch.Vswitch(this, "foo_5", {
      cidrBlock: "172.16.0.0/21",
      name: name.stringValue,
      vpcId: cdktf.Token.asString(alicloudVpcFoo.id),
      zoneId: cdktf.Token.asString(
        cdktf.propertyAccess(dataAlicloudZonesDefault.zones, ["0", "id"])
      ),
    });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudVswitchFoo.overrideLogicalId("foo");
    const dataAlicloudInstanceTypesDefault =
      new alicloud.dataAlicloudInstanceTypes.DataAlicloudInstanceTypes(
        this,
        "default_6",
        {
          availabilityZone: cdktf.Token.asString(
            cdktf.propertyAccess(dataAlicloudZonesDefault.zones, ["0", "id"])
          ),
          cpuCoreCount: 1,
          memorySize: 2,
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAlicloudInstanceTypesDefault.overrideLogicalId("default");
    const alicloudHavipFoo = new alicloud.havip.Havip(this, "foo_7", {
      description: name.stringValue,
      vswitchId: cdktf.Token.asString(alicloudVswitchFoo.id),
    });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudHavipFoo.overrideLogicalId("foo");
    const alicloudInstanceFoo = new alicloud.instance.Instance(this, "foo_8", {
      availabilityZone: cdktf.Token.asString(
        cdktf.propertyAccess(dataAlicloudZonesDefault.zones, ["0", "id"])
      ),
      imageId: cdktf.Token.asString(
        cdktf.propertyAccess(dataAlicloudImagesDefault.images, ["0", "id"])
      ),
      instanceName: name.stringValue,
      instanceType: cdktf.Token.asString(
        cdktf.propertyAccess(dataAlicloudInstanceTypesDefault.instanceTypes, [
          "0",
          "id",
        ])
      ),
      internetChargeType: "PayByTraffic",
      internetMaxBandwidthOut: 5,
      securityGroups: [cdktf.Token.asString(alicloudSecurityGroupTfTestFoo.id)],
      systemDiskCategory: "cloud_efficiency",
      userData: "echo 'net.ipv4.ip_forward=1'>> /etc/sysctl.conf",
      vswitchId: cdktf.Token.asString(alicloudVswitchFoo.id),
    });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudInstanceFoo.overrideLogicalId("foo");
    const alicloudHavipAttachmentFoo =
      new alicloud.havipAttachment.HavipAttachment(this, "foo_9", {
        havipId: cdktf.Token.asString(alicloudHavipFoo.id),
        instanceId: cdktf.Token.asString(alicloudInstanceFoo.id),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudHavipAttachmentFoo.overrideLogicalId("foo");
  }
}

```
## Argument Reference

The following arguments are supported:

* `havipId` - (Required, ForceNew) The havip_id of the havip attachment, the field can't be changed.
* `instanceId` - (Required, ForceNew) The instance_id of the havip attachment, the field can't be changed.
* `force` - (Optional, Available in v1.200.0+) Specifies whether to forcefully disassociate the HAVIP from the ECS instance or ENI. Default value: `false`. Valid values: `true` and `false`.
* `instanceType` - (Optional, Available in v1.201.0+) The Type of instance to bind HaVip to. Valid values: `ecsInstance` and `networkInterface`. When the HaVip instance is bound to a resilient NIC, the resilient NIC instance must be filled in.

## Attributes Reference

The following attributes are exported:

* `id` - The ID of the havip attachment id and formates as `<havip_id>:<instance_id>`.
* `status` - (Available in v1.201.0+) The status of the HaVip instance.

#### Timeouts

-> **NOTE:** Available in 1.194.0+.

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/docs/configuration-0-11/resources.html#timeouts) for certain actions:

* `create` - (Defaults to 5 mins) Used when create the HaVip Attachment.
* `delete` - (Defaults to 5 mins) Used when delete the HaVip Attachment.

## Import

The havip attachment can be imported using the id, e.g.

```shell
$ terraform import alicloud_havip_attachment.foo havip-abc123456:i-abc123456
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-330deb0284e2b627d31ac910f3f899e6c143ef3525d0acd8c3233f5aabfeee0b -->