---
subcategory: "VPN Gateway"
layout: "alicloud"
page_title: "Alicloud: alicloud_vpn_route_entry"
sidebar_current: "docs-alicloud-resource-vpn-route-entry"
description: |-
  Provides a Alicloud VPN Route Entry resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_vpn_route_entry

Provides a VPN Route Entry resource.

-> **NOTE:** Terraform will build vpn route entry instance while it uses `alicloudVpnRouteEntry` to build a VPN Route Entry resource.

-> **NOTE:** Available in 1.57.0+.

For information about VPN Route Entry and how to use it, see [What is VPN Route Entry](https://www.alibabacloud.com/help/en/doc-detail/127250.html).


## Example Usage

Basic Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const alicloudVpcDefault = new alicloud.vpc.Vpc(this, "default", {
      cidrBlock: "10.1.0.0/21",
      vpcName: "terraform-example",
    });
    const alicloudVpnCustomerGatewayDefault =
      new alicloud.vpnCustomerGateway.VpnCustomerGateway(this, "default_1", {
        ipAddress: "192.168.1.1",
        name: "terraform-example",
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudVpnCustomerGatewayDefault.overrideLogicalId("default");
    const dataAlicloudZonesDefault =
      new alicloud.dataAlicloudZones.DataAlicloudZones(this, "default_2", {
        availableDiskCategory: "cloud_efficiency",
        availableResourceCreation: "VSwitch",
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAlicloudZonesDefault.overrideLogicalId("default");
    const alicloudVswitchDefault = new alicloud.vswitch.Vswitch(
      this,
      "default_3",
      {
        cidrBlock: "10.1.0.0/24",
        vpcId: cdktf.Token.asString(alicloudVpcDefault.id),
        vswitchName: "terraform-example",
        zoneId: cdktf.Token.asString(
          cdktf.propertyAccess(dataAlicloudZonesDefault.zones, ["0", "id"])
        ),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudVswitchDefault.overrideLogicalId("default");
    const alicloudVpnGatewayDefault = new alicloud.vpnGateway.VpnGateway(
      this,
      "default_4",
      {
        bandwidth: 10,
        enableSsl: false,
        instanceChargeType: "PrePaid",
        name: "terraform-example",
        vpcId: cdktf.Token.asString(alicloudVpcDefault.id),
        vswitchId: cdktf.Token.asString(alicloudVswitchDefault.id),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudVpnGatewayDefault.overrideLogicalId("default");
    const alicloudVpnConnectionDefault =
      new alicloud.vpnConnection.VpnConnection(this, "default_5", {
        customerGatewayId: cdktf.Token.asString(
          alicloudVpnCustomerGatewayDefault.id
        ),
        localSubnet: ["192.168.2.0/24"],
        name: "terraform-example",
        remoteSubnet: ["192.168.3.0/24"],
        vpnGatewayId: cdktf.Token.asString(alicloudVpnGatewayDefault.id),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudVpnConnectionDefault.overrideLogicalId("default");
    const alicloudVpnRouteEntryDefault =
      new alicloud.vpnRouteEntry.VpnRouteEntry(this, "default_6", {
        nextHop: cdktf.Token.asString(alicloudVpnConnectionDefault.id),
        publishVpc: false,
        routeDest: "10.0.0.0/24",
        vpnGatewayId: cdktf.Token.asString(alicloudVpnGatewayDefault.id),
        weight: 0,
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudVpnRouteEntryDefault.overrideLogicalId("default");
  }
}

```
## Argument Reference

The following arguments are supported:

* `vpnGatewayId` - (Required, ForceNew) The id of the vpn gateway.
* `nextHop` - (Required, ForceNew) The next hop of the destination route.
* `publishVpc` - (Required) Whether to issue the destination route to the VPC.
* `routeDest` - (Required, ForceNew) The destination network segment of the destination route.
* `weight` - (Required) The value should be 0 or 100.

## Attributes Reference

The following attributes are exported:

* `id` - The combination id of the vpn route entry.
* `routeEntryType` - (Available in 1.161.0+) The type of the vpn route entry.
* `status` - (Available in 1.161.0+) The status of the vpn route entry.

#### Timeouts

-> **NOTE:** Available in 1.161.0+.

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/docs/configuration-0-11/resources.html#timeouts) for certain actions:

* `create` - (Defaults to 5 mins) Used when create the vpn route entry.
* `update` - (Defaults to 5 mins) Used when update the vpn route entry.
* `delete` - (Defaults to 5 mins) Used when delete the vpn route entry.

## Import

VPN route entry can be imported using the id(VpnGatewayId +":"+ NextHop +":"+ RouteDest), e.g.

```shell
$ terraform import alicloud_vpn_route_entry.example vpn-abc123456:vco-abc123456:10.0.0.10/24
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-04e1b10a377750ad05f5193f703ee76312ab729ae9da8a4884ae6e7f7670cd28 -->