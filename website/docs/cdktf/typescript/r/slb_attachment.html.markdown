---
subcategory: "Classic Load Balancer (SLB)"
layout: "alicloud"
page_title: "Alicloud: alicloud_slb_attachment"
sidebar_current: "docs-alicloud-resource-slb-attachment"
description: |-
  Provides an Application Load Banlancer Attachment resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_slb\_attachment

-> **DEPRECATED:** This resource has been deprecated from v1.153.0 and using [alicloud_backend_server](https://www.terraform.io/docs/providers/alicloud/r/slb_backend_server.html) instead.

Add a group of backend servers (ECS instance) to the Server Load Balancer or remove them from it.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    /*Terraform Variables are not always the best fit for getting inputs in the context of Terraform CDK.
    You can read more about this at https://cdk.tf/variables*/
    const name = new cdktf.TerraformVariable(this, "name", {
      default: "slbattachmenttest",
    });
    const alicloudVpcDefault = new alicloud.vpc.Vpc(this, "default", {
      cidrBlock: "172.16.0.0/16",
      name: name.stringValue,
    });
    const dataAlicloudImagesDefault =
      new alicloud.dataAlicloudImages.DataAlicloudImages(this, "default_2", {
        mostRecent: true,
        nameRegex: "^ubuntu_18.*64",
        owners: "system",
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAlicloudImagesDefault.overrideLogicalId("default");
    const dataAlicloudZonesDefault =
      new alicloud.dataAlicloudZones.DataAlicloudZones(this, "default_3", {
        availableDiskCategory: "cloud_efficiency",
        availableResourceCreation: "VSwitch",
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAlicloudZonesDefault.overrideLogicalId("default");
    const alicloudSecurityGroupDefault =
      new alicloud.securityGroup.SecurityGroup(this, "default_4", {
        name: name.stringValue,
        vpcId: cdktf.Token.asString(alicloudVpcDefault.id),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudSecurityGroupDefault.overrideLogicalId("default");
    const alicloudVswitchDefault = new alicloud.vswitch.Vswitch(
      this,
      "default_5",
      {
        cidrBlock: "172.16.0.0/16",
        vpcId: cdktf.Token.asString(alicloudVpcDefault.id),
        vswitchName: name.stringValue,
        zoneId: cdktf.Token.asString(
          cdktf.propertyAccess(dataAlicloudZonesDefault.zones, ["0", "id"])
        ),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudVswitchDefault.overrideLogicalId("default");
    const dataAlicloudInstanceTypesDefault =
      new alicloud.dataAlicloudInstanceTypes.DataAlicloudInstanceTypes(
        this,
        "default_6",
        {
          availabilityZone: cdktf.Token.asString(
            cdktf.propertyAccess(dataAlicloudZonesDefault.zones, ["0", "id"])
          ),
          cpuCoreCount: 1,
          memorySize: 2,
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAlicloudInstanceTypesDefault.overrideLogicalId("default");
    const alicloudInstanceDefault = new alicloud.instance.Instance(
      this,
      "default_7",
      {
        imageId: cdktf.Token.asString(
          cdktf.propertyAccess(dataAlicloudImagesDefault.images, ["0", "id"])
        ),
        instanceName: name.stringValue,
        instanceType: cdktf.Token.asString(
          cdktf.propertyAccess(dataAlicloudInstanceTypesDefault.instanceTypes, [
            "0",
            "id",
          ])
        ),
        internetChargeType: "PayByTraffic",
        internetMaxBandwidthOut: cdktf.Token.asNumber("5"),
        securityGroups: [cdktf.Token.asString(alicloudSecurityGroupDefault.id)],
        systemDiskCategory: "cloud_efficiency",
        vswitchId: cdktf.Token.asString(alicloudVswitchDefault.id),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudInstanceDefault.overrideLogicalId("default");
    const alicloudSlbLoadBalancerDefault =
      new alicloud.slbLoadBalancer.SlbLoadBalancer(this, "default_8", {
        loadBalancerName: name.stringValue,
        vswitchId: cdktf.Token.asString(alicloudVswitchDefault.id),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudSlbLoadBalancerDefault.overrideLogicalId("default");
    const alicloudSlbAttachmentDefault =
      new alicloud.slbAttachment.SlbAttachment(this, "default_9", {
        instanceIds: [cdktf.Token.asString(alicloudInstanceDefault.id)],
        loadBalancerId: cdktf.Token.asString(alicloudSlbLoadBalancerDefault.id),
        weight: 90,
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudSlbAttachmentDefault.overrideLogicalId("default");
  }
}

```

## Argument Reference

The following arguments are supported:

* `loadBalancerId` - (Required) ID of the load balancer.
* `instanceIds` - (Required) A list of instance ids to added backend server in the SLB.
* `weight` - (Optional) Weight of the instances. Valid value range: [0-100]. Default to 100.
* `serverType` - (Optional, Available in 1.60.0+) Type of the instances. Valid value ecs, eni. Default to ecs.
* `deleteProtectionValidation` - (Optional, Available in 1.63.0+) Checking DeleteProtection of SLB instance before deleting. If true, this resource will not be deleted when its SLB instance enabled DeleteProtection. Default to false.

## Attributes Reference

The following attributes are exported:

* `id` - ID of the resource.
* `loadBalancerId` - ID of the load balancer.
* `instanceIds` - A list of instance ids that have been added in the SLB.
* `weight` - Weight of the instances.
* `backendServers` - The backend servers of the load balancer.
* `serverType` - Type of the instances.

## Import

Load balancer attachment can be imported using the id or load balancer id, e.g.

```shell
$ terraform import alicloud_slb_attachment.example lb-abc123456
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-aa7c319a1605f5fd190b873692b47046a8e63da5052b7f5975e07f5c213fef5a -->