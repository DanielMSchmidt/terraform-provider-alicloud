---
subcategory: "MongoDB"
layout: "alicloud"
page_title: "Alicloud: alicloud_mongodb_serverless_instance"
sidebar_current: "docs-alicloud-resource-mongodb-serverless-instance"
description: |-
  Provides a Alicloud MongoDB Serverless Instance resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_mongodb\_serverless\_instance

Provides a MongoDB Serverless Instance resource.

For information about MongoDB Serverless Instance and how to use it, see [What is Serverless Instance](https://www.alibabacloud.com/help/doc-detail/26558.html).

-> **NOTE:** Available in v1.148.0+.

## Example Usage

Basic Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const dataAlicloudMongodbZonesDefault =
      new alicloud.dataAlicloudMongodbZones.DataAlicloudMongodbZones(
        this,
        "default",
        {}
      );
    const dataAlicloudResourceManagerResourceGroupsDefault =
      new alicloud.dataAlicloudResourceManagerResourceGroups.DataAlicloudResourceManagerResourceGroups(
        this,
        "default_1",
        {}
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAlicloudResourceManagerResourceGroupsDefault.overrideLogicalId(
      "default"
    );
    const dataAlicloudVpcsDefault =
      new alicloud.dataAlicloudVpcs.DataAlicloudVpcs(this, "default_2", {
        nameRegex: "default-NODELETING",
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAlicloudVpcsDefault.overrideLogicalId("default");
    const dataAlicloudVswitchesDefault =
      new alicloud.dataAlicloudVswitches.DataAlicloudVswitches(
        this,
        "default_3",
        {
          vpcId: cdktf.Token.asString(
            cdktf.propertyAccess(dataAlicloudVpcsDefault.ids, ["0"])
          ),
          zoneId: cdktf.Token.asString(
            cdktf.propertyAccess(dataAlicloudMongodbZonesDefault.zones, [
              "0",
              "id",
            ])
          ),
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAlicloudVswitchesDefault.overrideLogicalId("default");
    new alicloud.mongodbServerlessInstance.MongodbServerlessInstance(
      this,
      "example",
      {
        accountPassword: "Abc12345",
        capacityUnit: 100,
        dbInstanceDescription: "example_value",
        dbInstanceStorage: 5,
        engine: "MongoDB",
        engineVersion: "4.2",
        period: 1,
        periodPriceType: "Month",
        resourceGroupId: cdktf.Token.asString(
          cdktf.propertyAccess(
            dataAlicloudResourceManagerResourceGroupsDefault.groups,
            ["0", "id"]
          )
        ),
        securityIpGroups: [
          {
            securityIpGroupAttribute: "example_value",
            securityIpGroupName: "example_value",
            securityIpList: "192.168.0.1",
          },
        ],
        storageEngine: "WiredTiger",
        tags: {
          Created: "MongodbServerlessInstance",
          For: "TF",
        },
        vpcId: cdktf.Token.asString(
          cdktf.propertyAccess(dataAlicloudVpcsDefault.ids, ["0"])
        ),
        vswitchId: cdktf.Token.asString(
          cdktf.propertyAccess(dataAlicloudVswitchesDefault.ids, ["0"])
        ),
        zoneId: cdktf.Token.asString(
          cdktf.propertyAccess(dataAlicloudMongodbZonesDefault.zones, [
            "0",
            "id",
          ])
        ),
      }
    );
  }
}

```

## Argument Reference

The following arguments are supported:

* `accountPassword` - (Required, Sensitive) The password of the database logon account.
    * The password length is `8` to `32` bits.
    * The password consists of at least any three of uppercase letters, lowercase letters, numbers, and special characters. The special character is `!#$%^&*()_+-=`. The MongoDB Serverless instance provides a default database login account. This account cannot be modified. You can only set or modify the password for this account.
* `autoRenew` - (Optional) Set whether the instance is automatically renewed.
* `capacityUnit` - (Required) The I/O throughput consumed by the instance. Valid values: `100` to `8000`.
* `dbInstanceDescription` - (Optional) The db instance description.
* `dbInstanceStorage` - (Required) The db instance storage. Valid values: `1` to `100`.
* `engine` - (Optional) The database engine of the instance. Valid values: `mongoDb`.
* `engineVersion` - (Required) The database version number. Valid values: `42`.
* `maintainEndTime` - (Optional) The end time of the maintenance window. Specify the time in the `hh:mmZ` format. The time must be in UTC. **NOTE:** The difference between the start time and end time must be one hour. For example, if `maintainStartTime` is `01:00Z`, `maintainEndTime` must be `02:00Z`.
* `maintainStartTime` - (Optional) The start time of the maintenance window. Specify the time in the `hh:mmZ` format. The time must be in UTC.
* `period` - (Optional) The purchase duration of the instance, in months. Valid values: `1` to `9`, `12`, `24`, `36`, `60`.
* `periodPriceType` - (Optional) The period price type. Valid values: `day`, `month`.
* `resourceGroupId` - (Optional, ForceNew) The ID of the resource group.
* `securityIpGroups` - (Optional) An array that consists of the information of IP whitelists.
* `storageEngine` - (Optional) The storage engine used by the instance. Valid values: `wiredTiger`.
* `vswitchId` - (Required, ForceNew) The of the vswitch.
* `zoneId` - (Required, ForceNew) The ID of the zone. Use this parameter to specify the zone created by the instance.
* `vpcId` - (Required, ForceNew) The ID of the VPC network.
* `tags` - (Optional) A mapping of tags to assign to the resource.

#### Block security_ip_groups

The security_ip_groups supports the following:

* `securityIpGroupAttribute` - (Optional) The attribute of the IP whitelist. This parameter is empty by default.
* `securityIpGroupName` - (Optional) The name of the IP whitelist.
* `securityIpList` - (Optional) The IP addresses in the whitelist.

## Attributes Reference

The following attributes are exported:

* `id` - The resource ID in terraform of Serverless Instance.
* `status` - The instance status. For more information, see the instance Status Table.

### Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/docs/configuration-0-11/resources.html#timeouts) for certain actions:

* `create` - (Defaults to 10 mins) Used when create the Serverless Instance.
* `update` - (Defaults to 10 mins) Used when update the Serverless Instance.

## Import

MongoDB Serverless Instance can be imported using the id, e.g.

```shell
$ terraform import alicloud_mongodb_serverless_instance.example <id>
```
<!-- cache-key: cdktf-0.17.0-pre.15 input-51ebb9c097bd292e9fedab45aa523c97aa5adc702e21f9daaf8df89d666f3088 -->