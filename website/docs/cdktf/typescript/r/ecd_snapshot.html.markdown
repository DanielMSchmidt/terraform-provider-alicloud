---
subcategory: "Elastic Desktop Service (ECD)"
layout: "alicloud"
page_title: "Alicloud: alicloud_ecd_snapshot"
sidebar_current: "docs-alicloud-resource-ecd-snapshot"
description: |-
  Provides a Alicloud ECD Snapshot resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_ecd\_snapshot

Provides a ECD Snapshot resource.

For information about ECD Snapshot and how to use it, see [What is Snapshot](https://www.alibabacloud.com/help/en/elastic-desktop-service/latest/createsnapshot).

-> **NOTE:** Available in v1.169.0+.

## Example Usage

Basic Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    /*Terraform Variables are not always the best fit for getting inputs in the context of Terraform CDK.
    You can read more about this at https://cdk.tf/variables*/
    const name = new cdktf.TerraformVariable(this, "name", {
      default: "example_value",
    });
    const alicloudEcdPolicyGroupDefault =
      new alicloud.ecdPolicyGroup.EcdPolicyGroup(this, "default", {
        authorizeAccessPolicyRules: [
          {
            cidrIp: "1.2.3.4/24",
            description: "example_value",
          },
        ],
        authorizeSecurityPolicyRules: [
          {
            cidrIp: "0.0.0.0/0",
            description: "example_value",
            ipProtocol: "TCP",
            policy: "accept",
            portRange: "80/80",
            priority: "1",
            type: "inflow",
          },
        ],
        clipboard: "readwrite",
        localDrive: "read",
        policyGroupName: name.stringValue,
      });
    const alicloudEcdSimpleOfficeSiteDefault =
      new alicloud.ecdSimpleOfficeSite.EcdSimpleOfficeSite(this, "default_2", {
        cidrBlock: "172.16.0.0/12",
        desktopAccessType: "Internet",
        enableInternetAccess: false,
        officeSiteName: name.stringValue,
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudEcdSimpleOfficeSiteDefault.overrideLogicalId("default");
    const dataAlicloudEcdBundlesDefault =
      new alicloud.dataAlicloudEcdBundles.DataAlicloudEcdBundles(
        this,
        "default_3",
        {
          bundleType: "SYSTEM",
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAlicloudEcdBundlesDefault.overrideLogicalId("default");
    const alicloudEcdDesktopDefault = new alicloud.ecdDesktop.EcdDesktop(
      this,
      "default_4",
      {
        bundleId: cdktf.Token.asString(
          cdktf.propertyAccess(dataAlicloudEcdBundlesDefault.bundles, [
            "0",
            "id",
          ])
        ),
        desktopName: name.stringValue,
        officeSiteId: cdktf.Token.asString(
          alicloudEcdSimpleOfficeSiteDefault.id
        ),
        policyGroupId: cdktf.Token.asString(alicloudEcdPolicyGroupDefault.id),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudEcdDesktopDefault.overrideLogicalId("default");
    const alicloudEcdSnapshotDefault = new alicloud.ecdSnapshot.EcdSnapshot(
      this,
      "default_5",
      {
        description: name.stringValue,
        desktopId: cdktf.Token.asString(alicloudEcdDesktopDefault.id),
        snapshotName: name.stringValue,
        sourceDiskType: "SYSTEM",
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudEcdSnapshotDefault.overrideLogicalId("default");
  }
}

```

## Argument Reference

The following arguments are supported:

* `description` - (Optional, ForceNew) The description of the Snapshot.
* `desktopId` - (Required, ForceNew) The ID of the Desktop.
* `snapshotName` - (Required, ForceNew) The name of the Snapshot.
* `sourceDiskType` - (Required, ForceNew) The type of the disk for which to create a snapshot. Valid values: `system`, `data`.

## Attributes Reference

The following attributes are exported:

* `id` - The resource ID in terraform of Snapshot.
* `status` - The status of the snapshot.

### Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/docs/configuration-0-11/resources.html#timeouts) for certain actions:

* `create` - (Defaults to 10 mines) Used when create the Snapshot.
* `delete` - (Defaults to 1 mines) Used when delete the Snapshot.

## Import

ECD Snapshot can be imported using the id, e.g.

```shell
$ terraform import alicloud_ecd_snapshot.example <id>
```
<!-- cache-key: cdktf-0.17.0-pre.15 input-2a1d1441e61c83ef506d3e9a07c49654faac0ece0199755637edc2e037386dcb -->