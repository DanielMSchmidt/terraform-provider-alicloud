---
subcategory: "Elastic Desktop Service (ECD)"
layout: "alicloud"
page_title: "Alicloud: alicloud_ecd_image"
sidebar_current: "docs-alicloud-resource-ecd-image"
description: |-
  Provides a Alicloud ECD Image resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_ecd\_image

Provides a ECD Image resource.

For information about ECD Image and how to use it, see [What is Image](https://help.aliyun.com/document_detail/188382.html).

-> **NOTE:** Available in v1.146.0+.

## Example Usage

Basic Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const alicloudEcdPolicyGroupDefault =
      new alicloud.ecdPolicyGroup.EcdPolicyGroup(this, "default", {
        authorizeAccessPolicyRules: [
          {
            cidrIp: "1.2.3.4/24",
            description: "example_value",
          },
        ],
        authorizeSecurityPolicyRules: [
          {
            cidrIp: "0.0.0.0/0",
            description: "example_value",
            ipProtocol: "TCP",
            policy: "accept",
            portRange: "80/80",
            priority: "1",
            type: "inflow",
          },
        ],
        clipboard: "readwrite",
        localDrive: "read",
        policyGroupName: "your_policy_group_name",
      });
    const alicloudEcdSimpleOfficeSiteDefault =
      new alicloud.ecdSimpleOfficeSite.EcdSimpleOfficeSite(this, "default_1", {
        cidrBlock: "172.16.0.0/12",
        desktopAccessType: "Internet",
        officeSiteName: "your_simple_office_site_name",
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudEcdSimpleOfficeSiteDefault.overrideLogicalId("default");
    const dataAlicloudEcdBundlesDefault =
      new alicloud.dataAlicloudEcdBundles.DataAlicloudEcdBundles(
        this,
        "default_2",
        {
          bundleType: "SYSTEM",
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAlicloudEcdBundlesDefault.overrideLogicalId("default");
    const alicloudEcdDesktopDefault = new alicloud.ecdDesktop.EcdDesktop(
      this,
      "default_3",
      {
        bundleId: cdktf.Token.asString(
          cdktf.propertyAccess(dataAlicloudEcdBundlesDefault.bundles, [
            "1",
            "id",
          ])
        ),
        desktopName: "your_desktop_name",
        officeSiteId: cdktf.Token.asString(
          alicloudEcdSimpleOfficeSiteDefault.id
        ),
        policyGroupId: cdktf.Token.asString(alicloudEcdPolicyGroupDefault.id),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudEcdDesktopDefault.overrideLogicalId("default");
    const alicloudEcdImageDefault = new alicloud.ecdImage.EcdImage(
      this,
      "default_4",
      {
        description: "example_value",
        desktopId: cdktf.Token.asString(alicloudEcdDesktopDefault.id),
        imageName: "your_image_name",
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudEcdImageDefault.overrideLogicalId("default");
  }
}

```

## Argument Reference

The following arguments are supported:

* `description` - (Optional) The description of the image.
* `desktopId` - (Required) The desktop id of the desktop.
* `imageName` - (Optional) The name of the image.

## Attributes Reference

The following attributes are exported:

* `id` - The resource ID in terraform of Image.
* `status` - The status of the image. Valid values: `creating`, `available`, `createFailed`.
### Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/docs/configuration-0-11/resources.html#timeouts) for certain actions:

* `create` - (Defaults to 15 mines) Used when create the Image.
* `delete` - (Defaults to 5 mines) Used when delete the Image.

## Import

ECD Image can be imported using the id, e.g.

```shell
$ terraform import alicloud_ecd_image.example <id>
```
<!-- cache-key: cdktf-0.17.0-pre.15 input-b20393d9735a3edd14a07f03d491580d47fcc3de4bfa15f93779b34ae0b0f47f -->