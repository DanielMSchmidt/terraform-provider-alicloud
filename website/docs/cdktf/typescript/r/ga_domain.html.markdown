---
subcategory: "Global Accelerator (GA)"
layout: "alicloud"
page_title: "Alicloud: alicloud_ga_domain"
sidebar_current: "docs-alicloud-resource-ga-domain"
description: |-
  Provides a Alicloud Ga Domain resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud_ga_domain

Provides a Ga Domain resource.

For information about Ga Domain and how to use it, see [What is Domain](https://www.alibabacloud.com/help/en/global-accelerator/latest/createdomain).

-> **NOTE:** Available in v1.197.0+.

## Example Usage

Basic Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const dataAlicloudGaAcceleratorsDefault =
      new alicloud.dataAlicloudGaAccelerators.DataAlicloudGaAccelerators(
        this,
        "default",
        {
          status: "active",
        }
      );
    /*In most cases loops should be handled in the programming language context and 
    not inside of the Terraform context. If you are looping over something external, e.g. a variable or a file input
    you should consider using a for loop. If you are looping over something only known to Terraform, e.g. a result of a data source
    you need to keep this like it is.*/
    const alicloudGaAcceleratorDefaultCount = cdktf.TerraformCount.of(
      cdktf.Token.asNumber(
        cdktf.conditional(
          cdktf.Op.gt(
            cdktf.Fn.lengthOf(dataAlicloudGaAcceleratorsDefault.accelerators),
            0
          ),
          0,
          1
        )
      )
    );
    const alicloudGaAcceleratorDefault =
      new alicloud.gaAccelerator.GaAccelerator(this, "default_1", {
        autoUseCoupon: true,
        duration: 1,
        spec: "1",
        count: alicloudGaAcceleratorDefaultCount,
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudGaAcceleratorDefault.overrideLogicalId("default");
    const acceleratorId = cdktf.conditional(
      cdktf.Op.gt(
        cdktf.Fn.lengthOf(dataAlicloudGaAcceleratorsDefault.accelerators),
        0
      ),
      cdktf.propertyAccess(dataAlicloudGaAcceleratorsDefault.accelerators, [
        "0",
        "id",
      ]),
      cdktf.propertyAccess(alicloudGaAcceleratorDefault, ["0", "id"])
    );
    const alicloudGaDomainDefault = new alicloud.gaDomain.GaDomain(
      this,
      "default_2",
      {
        acceleratorId: acceleratorId,
        domain: "your_domain",
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudGaDomainDefault.overrideLogicalId("default");
  }
}

```

## Argument Reference

The following arguments are supported:
* `acceleratorId` - (Required,ForceNew) The ID of the global acceleration instance.
* `domain` - (Required,ForceNew) The accelerated domain name to be added. only top-level domain names are supported, such as 'example.com'.

## Attributes Reference

The following attributes are exported:
* `id` - The `key` of the resource supplied above. The value is formulated as `<accelerator_id>:<domain>`.
* `status` - The status of the resource

### Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/docs/configuration-0-11/resources.html#timeouts) for certain actions:
* `create` - (Defaults to 5 mins) Used when create the Domain.
* `delete` - (Defaults to 5 mins) Used when delete the Domain.

## Import

Ga Domain can be imported using the id, e.g.

```shell
$ terraform import alicloud_ga_domain.example <accelerator_id>:<domain>
```
<!-- cache-key: cdktf-0.17.0-pre.15 input-85be4ccc1c7f8215ded9839b7a9508c818decbf30e40ebf38fe5c31d3a6044cb -->