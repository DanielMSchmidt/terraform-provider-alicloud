---
subcategory: "Hybrid Backup Recovery (HBR)"
layout: "alicloud"
page_title: "Alicloud: alicloud_hbr_ecs_backup_client"
sidebar_current: "docs-alicloud-resource-hbr-ecs-backup-client"
description: |-
  Provides a Alicloud Hybrid Backup Recovery (HBR) Ecs Backup Client resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_hbr\_ecs\_backup\_client

Provides a Hybrid Backup Recovery (HBR) Ecs Backup Client resource.

For information about Hybrid Backup Recovery (HBR) Ecs Backup Client and how to use it, see [What is Ecs Backup Client](https://www.alibabacloud.com/help/doc-detail/186570.htm).

-> **NOTE:** Available in v1.132.0+.

## Example Usage

Basic Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const dataAlicloudInstancesDefault =
      new alicloud.dataAlicloudInstances.DataAlicloudInstances(
        this,
        "default",
        {
          nameRegex: "ecs_instance_name",
          status: "Running",
        }
      );
    new alicloud.hbrEcsBackupClient.HbrEcsBackupClient(this, "example", {
      dataNetworkType: "PUBLIC",
      dataProxySetting: "USE_CONTROL_PROXY",
      instanceId: cdktf.Token.asString(
        cdktf.propertyAccess(dataAlicloudInstancesDefault.instances, [
          "0",
          "id",
        ])
      ),
      maxCpuCore: cdktf.Token.asString(2),
      maxWorker: cdktf.Token.asString(4),
      proxyHost: "192.168.11.101",
      proxyPassword: "password",
      proxyPort: cdktf.Token.asString(80),
      proxyUser: "user",
      useHttps: false,
    });
  }
}

```

## Argument Reference

The following arguments are supported:

* `instanceId` - (Required, ForceNew) The ID of ECS instance.
* `useHttps` - (Optional) Indicates whether to use the HTTPS protocol. Valid values: `true`, `false`.
* `status` - (Optional, Computed) Status of client. Valid values: `activated`, `stopped`. You can start or stop the client by specifying the status.
* `dataNetworkType` - (Optional) The data plane access point type. Valid values: `classic`, `public`, `vpc`. **NOTE:** The value of `classic` has been deprecated in v1.161.0+.
* `dataProxySetting` - (Optional, Computed) The data plane proxy settings. Valid values: `custom`, `disable`, `useControlProxy`.
* `maxCpuCore` - (Optional) The number of CPU cores used by a single backup task, 0 means no restrictions.
* `maxWorker` - (Optional) The number of concurrent jobs for a single backup task, 0 means no restrictions.
* `proxyHost` - (Optional) Custom data plane proxy server host address.
* `proxyPort` - (Optional) Custom data plane proxy server host port.
* `proxyUser` - (Optional) The username of custom data plane proxy server.
* `proxyPassword` - (Optional) The password of custom data plane proxy server.

## Attributes Reference

The following attributes are exported:

* `id` - The resource ID in terraform of Ecs Backup Client.

## Notice

-> **Note:** Please read the following precautions carefully before deleting a client:
1. You cannot delete active clients that have received heartbeat packets within one hour.
2. You can make the client inactive by change the status of client to `stopped`.
3. The resources bound to the client will be deleted in cascade, including:
    - Backup plan
    - Backup task (Running in the background)
    - Snapshot


## Import

Hybrid Backup Recovery (HBR) Ecs Backup Client can be imported using the id, e.g.

```shell
$ terraform import alicloud_hbr_ecs_backup_client.example <id>
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-1b5575f5b697cc5fd71c3e7d9c26134360622ec7abf22b981d0e25d8fd7f098d -->