---
subcategory: "ECS"
layout: "alicloud"
page_title: "Alicloud: alicloud_auto_provisioning_group"
sidebar_current: "docs-alicloud-resource-auto-provisioning-group"
description: |-
  Provides a ECS Auto Provisioning group resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_auto\_provisioning\_group

Provides a ECS auto provisioning group resource which is a solution that uses preemptive instances and pay_as_you_go instances to rapidly deploy clusters.

-> **NOTE:** Available in 1.79.0+


## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    /*Terraform Variables are not always the best fit for getting inputs in the context of Terraform CDK.
    You can read more about this at https://cdk.tf/variables*/
    const name = new cdktf.TerraformVariable(this, "name", {
      default: "auto_provisioning_group",
    });
    const alicloudVpcDefault = new alicloud.vpc.Vpc(this, "default", {
      cidrBlock: "172.16.0.0/16",
      vpcName: name.stringValue,
    });
    const dataAlicloudImagesDefault =
      new alicloud.dataAlicloudImages.DataAlicloudImages(this, "default_2", {
        mostRecent: true,
        nameRegex: "^ubuntu_18.*64",
        owners: "system",
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAlicloudImagesDefault.overrideLogicalId("default");
    const dataAlicloudZonesDefault =
      new alicloud.dataAlicloudZones.DataAlicloudZones(this, "default_3", {
        availableDiskCategory: "cloud_efficiency",
        availableResourceCreation: "VSwitch",
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAlicloudZonesDefault.overrideLogicalId("default");
    const alicloudSecurityGroupDefault =
      new alicloud.securityGroup.SecurityGroup(this, "default_4", {
        name: name.stringValue,
        vpcId: cdktf.Token.asString(alicloudVpcDefault.id),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudSecurityGroupDefault.overrideLogicalId("default");
    const alicloudVswitchDefault = new alicloud.vswitch.Vswitch(
      this,
      "default_5",
      {
        cidrBlock: "172.16.0.0/24",
        vpcId: cdktf.Token.asString(alicloudVpcDefault.id),
        vswitchName: name.stringValue,
        zoneId: cdktf.Token.asString(
          cdktf.propertyAccess(dataAlicloudZonesDefault.zones, ["0", "id"])
        ),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudVswitchDefault.overrideLogicalId("default");
    const alicloudEcsLaunchTemplateTemplate =
      new alicloud.ecsLaunchTemplate.EcsLaunchTemplate(this, "template", {
        imageId: cdktf.Token.asString(
          cdktf.propertyAccess(dataAlicloudImagesDefault.images, ["0", "id"])
        ),
        instanceType: "ecs.n1.tiny",
        name: name.stringValue,
        securityGroupId: cdktf.Token.asString(alicloudSecurityGroupDefault.id),
      });
    const alicloudAutoProvisioningGroupDefault =
      new alicloud.autoProvisioningGroup.AutoProvisioningGroup(
        this,
        "default_7",
        {
          launchTemplateConfig: [
            {
              instanceType: "ecs.n1.small",
              maxPrice: "2",
              vswitchId: cdktf.Token.asString(alicloudVswitchDefault.id),
              weightedCapacity: "2",
            },
          ],
          launchTemplateId: cdktf.Token.asString(
            alicloudEcsLaunchTemplateTemplate.id
          ),
          payAsYouGoTargetCapacity: "1",
          spotTargetCapacity: "2",
          totalTargetCapacity: "4",
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudAutoProvisioningGroupDefault.overrideLogicalId("default");
  }
}

```


## Argument Reference

The following arguments are supported:

* `launchTemplateId` - (Required, ForceNew) The ID of the instance launch template associated with the auto provisioning group.
* `totalTargetCapacity` - (Required) The total target capacity of the auto provisioning group. The target capacity consists of the following three parts:PayAsYouGoTargetCapacity,SpotTargetCapacity and the supplemental capacity besides PayAsYouGoTargetCapacity and SpotTargetCapacity.
* `autoProvisioningGroupName` - (Optional) The name of the auto provisioning group to be created. It must be 2 to 128 characters in length. It must start with a letter but cannot start with http:// or https://. It can contain letters, digits, colons (:), underscores (_), and hyphens (-)
* `autoProvisioningGroupType` - (Optional, ForceNew) The type of the auto provisioning group. Valid values:`request` and `maintain`,Default value: `maintain`.
* `spotAllocationStrategy` - (Optional, ForceNew) The scale-out policy for preemptible instances. Valid values:`lowestPrice` and `diversified`,Default value: `lowestPrice`.
* `spotTargetCapacity` - (Optional) The target capacity of preemptible instances in the auto provisioning group.
* `spotInstanceInterruptionBehavior` - (Optional, ForceNew) The default behavior after preemptible instances are shut down. Valid values: `stop` and `terminate`,Default value: `stop`.
* `spotInstancePoolsToUseCount` - (Optional, ForceNew) This parameter takes effect when the `spotAllocationStrategy` parameter is set to `lowestPrice`. The auto provisioning group selects instance types of the lowest cost to create instances.
* `payAsYouGoAllocationStrategy` - (Optional, ForceNew) The scale-out policy for pay-as-you-go instances. Valid values: `lowestPrice` and `prioritized`,Default value: `lowestPrice`.
* `payAsYouGoTargetCapacity` - (Optional) The target capacity of pay-as-you-go instances in the auto provisioning group.
* `defaultTargetCapacityType` - (Optional) The type of supplemental instances. When the total value of `payAsYouGoTargetCapacity` and `spotTargetCapacity` is smaller than the value of TotalTargetCapacity, the auto provisioning group will create instances of the specified type to meet the capacity requirements. Valid values:`payAsYouGo`: Pay-as-you-go instances; `spot`: Preemptible instances, Default value: `spot`.
* `launchTemplateVersion` - (Optional, ForceNew) The version of the instance launch template associated with the auto provisioning group.
* `excessCapacityTerminationPolicy` - (Optional) The shutdown policy for excess preemptible instances followed when the capacity of the auto provisioning group exceeds the target capacity. Valid values: `noTermination` and `termination`,Default value: `noTermination`.
* `terminateInstancesWithExpiration` - (Optional) The shutdown policy for preemptible instances when the auto provisioning group expires. Valid values: `false` and `true`, default value: `false`.
* `terminateInstances` - (Optional, ForceNew) Specifies whether to release instances of the auto provisioning group. Valid values:`false` and `true`, default value: `false`.
* `description` - (Optional, ForceNew) The description of the auto provisioning group.
* `maxSpotPrice` - (Optional) The global maximum price for preemptible instances in the auto provisioning group. If both the `maxSpotPrice` and `launchTemplateConfigNMaxPrice` parameters are specified, the maximum price is the lower value of the two.
* `validFrom` - (Optional, ForceNew) The time when the auto provisioning group is started. The period of time between this point in time and the point in time specified by the `validUntil` parameter is the effective time period of the auto provisioning group.By default, an auto provisioning group is immediately started after creation.
* `validUntil` - (Optional, ForceNew) The time when the auto provisioning group expires. The period of time between this point in time and the point in time specified by the `validFrom` parameter is the effective time period of the auto provisioning group.By default, an auto provisioning group never expires.
* `launchTemplateConfig` - (Required, ForceNew) DataDisk mappings to attach to ecs instance. See [Block config](#block-config) below for details.

## Block config

The config mapping supports the following:
* `instanceType` - (Optional) The instance type of the Nth extended configurations of the launch template.
* `maxPrice` - (Required) The maximum price of the instance type specified in the Nth extended configurations of the launch template.
* `vswitchId` - (Required) The ID of the VSwitch in the Nth extended configurations of the launch template.
* `weightedCapacity` - (Required) The weight of the instance type specified in the Nth extended configurations of the launch template.
* `priority` - (Optional) The priority of the instance type specified in the Nth extended configurations of the launch template. A value of 0 indicates the highest priority.
                     
## Attributes Reference

The following attributes are exported:
* `id` - The ID of the auto provisioning group

## Import

ECS auto provisioning group can be imported using the id, e.g.

```shell
$ terraform import alicloud_auto_provisioning_group.example asg-abc123456
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-805acdb097624b9f526dca886bd57ba5c61ca413520b6103c86be51ce2741980 -->