---
subcategory: "Serverless Workflow (FnF)"
layout: "alicloud"
page_title: "Alicloud: alicloud_fnf_execution"
sidebar_current: "docs-alicloud-resource-fnf-execution"
description: |-
  Provides a Alicloud Serverless Workflow Execution resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_fnf\_execution

Provides a Serverless Workflow Execution resource.

For information about Serverless Workflow Execution and how to use it, see [What is Execution](https://www.alibabacloud.com/help/en/doc-detail/122628.html).

-> **NOTE:** Available in v1.149.0+.

## Example Usage

Basic Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    /*Terraform Variables are not always the best fit for getting inputs in the context of Terraform CDK.
    You can read more about this at https://cdk.tf/variables*/
    const name = new cdktf.TerraformVariable(this, "name", {
      default: "tf-testacc-fnfflow",
    });
    const alicloudRamRoleDefault = new alicloud.ramRole.RamRole(
      this,
      "default",
      {
        document:
          '  {\n    "Statement": [\n      {\n        "Action": "sts:AssumeRole",\n        "Effect": "Allow",\n        "Principal": {\n          "Service": [\n            "fnf.aliyuncs.com"\n          ]\n        }\n      }\n    ],\n    "Version": "1"\n  }\n',
        name: name.stringValue,
      }
    );
    const alicloudFnfFlowDefault = new alicloud.fnfFlow.FnfFlow(
      this,
      "default_2",
      {
        definition:
          "  version: v1beta1\n  type: flow\n  steps:\n    - type: wait\n      name: custom_wait\n      duration: $.wait\n",
        description: "Test for terraform fnf_flow.",
        name: name.stringValue,
        roleArn: cdktf.Token.asString(alicloudRamRoleDefault.arn),
        type: "FDL",
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudFnfFlowDefault.overrideLogicalId("default");
    const alicloudFnfExecutionDefault = new alicloud.fnfExecution.FnfExecution(
      this,
      "default_3",
      {
        executionName: name.stringValue,
        flowName: cdktf.Token.asString(alicloudFnfFlowDefault.name),
        input: '{\\"wait\\": 600}',
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudFnfExecutionDefault.overrideLogicalId("default");
  }
}

```

## Argument Reference

The following arguments are supported:

* `executionName` - (Required, ForceNew) The name of the execution.
* `flowName` - (Required, ForceNew) The name of the flow.
* `input` - (Optional, ForceNew) The Input information for this execution.
* `status` - (Optional, Computed) The status of the resource. Valid values: `stopped`.

## Attributes Reference

The following attributes are exported:

* `id` - The resource ID of Execution. The value formats as `<flow_name>:<execution_name>`.

### Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/docs/configuration-0-11/resources.html#timeouts) for certain actions:

* `create` - (Defaults to 5 mins) Used when create the Execution.
* `update` - (Defaults to 5 mins) Used when update the Execution.

## Import

Serverless Workflow Execution can be imported using the id, e.g.

```shell
$ terraform import alicloud_fnf_execution.example <flow_name>:<execution_name>
```
<!-- cache-key: cdktf-0.17.0-pre.15 input-c6ab50d030a52bc1e9c617967365559b9119456f1b5d6bd891ca367aa5349105 -->