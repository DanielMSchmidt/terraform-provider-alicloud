---
subcategory: "Network Attached Storage (NAS)"
layout: "alicloud"
page_title: "Alicloud: alicloud_nas_data_flow"
sidebar_current: "docs-alicloud-resource-nas-data-flow"
description: |-
  Provides a Alicloud Network Attached Storage (NAS) Data Flow resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_nas\_data\_flow

Provides a Network Attached Storage (NAS) Data Flow resource.

For information about Network Attached Storage (NAS) Data Flow and how to use it, see [What is Data Flow](https://www.alibabacloud.com/help/en/doc-detail/27530.html).

-> **NOTE:** Available in v1.153.0+.

## Example Usage

Basic Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
import * as random from "./.gen/providers/random";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    /*The following providers are missing schema information and might need manual adjustments to synthesize correctly: random.
    For a more precise conversion please use the --provider flag in convert.*/
    const alicloudVpcExample = new alicloud.vpc.Vpc(this, "example", {
      cidrBlock: "172.17.3.0/24",
      vpcName: "terraform-example",
    });
    const randomIntegerExample = new random.integer.Integer(this, "example_1", {
      max: 99999,
      min: 10000,
    });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    randomIntegerExample.overrideLogicalId("example");
    const dataAlicloudNasZonesExample =
      new alicloud.dataAlicloudNasZones.DataAlicloudNasZones(
        this,
        "example_2",
        {
          fileSystemType: "cpfs",
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAlicloudNasZonesExample.overrideLogicalId("example");
    const alicloudOssBucketExample = new alicloud.ossBucket.OssBucket(
      this,
      "example_3",
      {
        acl: "private",
        bucket: "example-value-${" + randomIntegerExample.result + "}",
        tags: {
          "cpfs-dataflow": "true",
        },
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudOssBucketExample.overrideLogicalId("example");
    const alicloudVswitchExample = new alicloud.vswitch.Vswitch(
      this,
      "example_4",
      {
        cidrBlock: "172.17.3.0/24",
        vpcId: cdktf.Token.asString(alicloudVpcExample.id),
        vswitchName: "terraform-example",
        zoneId: cdktf.Token.asString(
          cdktf.propertyAccess(dataAlicloudNasZonesExample.zones, [
            "1",
            "zone_id",
          ])
        ),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudVswitchExample.overrideLogicalId("example");
    const alicloudNasFileSystemExample =
      new alicloud.nasFileSystem.NasFileSystem(this, "example_5", {
        capacity: 3600,
        description: "terraform-example",
        fileSystemType: "cpfs",
        protocolType: "cpfs",
        storageType: "advance_200",
        vpcId: cdktf.Token.asString(alicloudVpcExample.id),
        vswitchId: cdktf.Token.asString(alicloudVswitchExample.id),
        zoneId: cdktf.Token.asString(
          cdktf.propertyAccess(dataAlicloudNasZonesExample.zones, [
            "1",
            "zone_id",
          ])
        ),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudNasFileSystemExample.overrideLogicalId("example");
    const alicloudNasMountTargetExample =
      new alicloud.nasMountTarget.NasMountTarget(this, "example_6", {
        fileSystemId: cdktf.Token.asString(alicloudNasFileSystemExample.id),
        vswitchId: cdktf.Token.asString(alicloudVswitchExample.id),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudNasMountTargetExample.overrideLogicalId("example");
    const alicloudNasFilesetExample = new alicloud.nasFileset.NasFileset(
      this,
      "example_7",
      {
        dependsOn: [alicloudNasMountTargetExample],
        description: "terraform-example",
        fileSystemId: cdktf.Token.asString(alicloudNasFileSystemExample.id),
        fileSystemPath: "/example_path/",
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudNasFilesetExample.overrideLogicalId("example");
    const alicloudNasDataFlowExample = new alicloud.nasDataFlow.NasDataFlow(
      this,
      "example_8",
      {
        description: "terraform-example",
        fileSystemId: cdktf.Token.asString(alicloudNasFileSystemExample.id),
        fsetId: cdktf.Token.asString(alicloudNasFilesetExample.filesetId),
        sourceSecurityType: "SSL",
        sourceStorage: cdktf.Fn.join(
          "",
          cdktf.Token.asList(["oss://", alicloudOssBucketExample.bucket])
        ),
        throughput: 600,
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudNasDataFlowExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

The following arguments are supported:

* `description` - (Optional) The Description of the data flow. Restrictions:
  - `2` ~ `128` English or Chinese characters in length.
  - Must start with uppercase or lowercase letters or Chinese, and cannot start with `http://` and `https://`.
  - Can contain numbers, semicolons (:), underscores (_), or dashes (-).
* `dryRun` - (Optional) The dry run.
* `fileSystemId` - (Required, ForceNew) The ID of the file system.
* `fsetId` - (Required, ForceNew) The ID of the Fileset.
* `sourceSecurityType` - (Optional, Computed, ForceNew) The security protection type of the source storage. If the source storage must be accessed through security protection, specify the security protection type of the source storage. Value:
  - `none` (default): Indicates that the source storage does not need to be accessed through security protection.
  - `ssl`: Protects access through SSL certificates.
* `sourceStorage` - (Required, ForceNew) The access path of the source store. Format: `<storage type>://<path>`. Among them:
  - storage type: currently only OSS is supported.
  - path: the bucket name of OSS.
    - Only lowercase letters, numbers, and dashes (-) are supported and must start and end with lowercase letters or numbers.
    - `8` to `128` English characters in length.
    - Use UTF-8 coding.
    - Cannot start with `http://` and `https://`.
* `status` - (Optional, Computed) The status of the Data flow. Valid values: `running`, `stopped`.
* `throughput` - (Required) The maximum transmission bandwidth of data flow, unit: `mb/s`. Valid values: `1200`, `1500`, `600`. **NOTE:** The transmission bandwidth of data flow must be less than the IO bandwidth of the file system.

## Attributes Reference

The following attributes are exported:

* `id` - The resource ID of Data Flow. The value formats as `<file_system_id>:<data_flow_id>`.
* `dataFlowId` - The ID of the Data flow.

### Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/docs/configuration-0-11/resources.html#timeouts) for certain actions:

* `create` - (Defaults to 10 mins) Used when create the Data Flow.
* `update` - (Defaults to 10 mins) Used when update the Data Flow.
* `delete` - (Defaults to 10 mins) Used when delete the Data Flow.

## Import

Network Attached Storage (NAS) Data Flow can be imported using the id, e.g.

```shell
$ terraform import alicloud_nas_data_flow.example <file_system_id>:<data_flow_id>
```
<!-- cache-key: cdktf-0.17.0-pre.15 input-ace8659fe9d29baa74e110834e90d16927f9bf75155a2f4094d39532d65a8d14 -->