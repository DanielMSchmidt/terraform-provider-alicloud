---
subcategory: "VPN Gateway"
layout: "alicloud"
page_title: "Alicloud: alicloud_ssl_vpn_server"
sidebar_current: "docs-alicloud-resource-ssl-vpn-server"
description: |-
  Provides a Alicloud SSL VPN server resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_ssl_vpn_server

Provides a SSL VPN server resource. [Refer to details](https://www.alibabacloud.com/help/doc-detail/64960.htm)

-> **NOTE:** Terraform will auto build ssl vpn server while it uses `alicloudSslVpnServer` to build a ssl vpn server resource.

## Example Usage

Basic Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const alicloudVpnGatewayFoo = new alicloud.vpnGateway.VpnGateway(
      this,
      "foo",
      {
        bandwidth: cdktf.Token.asNumber("10"),
        description: "test_create_description",
        enableSsl: true,
        instanceChargeType: "PostPaid",
        name: "testAccVpnConfig_create",
        vpcId: "vpc-fake-id",
      }
    );
    const alicloudSslVpnServerFoo = new alicloud.sslVpnServer.SslVpnServer(
      this,
      "foo_1",
      {
        cipher: "AES-128-CBC",
        clientIpPool: "192.168.0.0/16",
        compress: cdktf.Token.asBoolean("false"),
        localSubnet: "172.16.0.0/21",
        name: "sslVpnServerNameExample",
        port: 1194,
        protocol: "UDP",
        vpnGatewayId: cdktf.Token.asString(alicloudVpnGatewayFoo.id),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudSslVpnServerFoo.overrideLogicalId("foo");
  }
}

```
## Argument Reference

The following arguments are supported:

* `name` - (Optional) The name of the SSL-VPN server.
* `vpnGatewayId` - (Required, ForceNew) The ID of the VPN gateway.
* `clientIpPool` - (Required) The CIDR block from which access addresses are allocated to the virtual network interface card of the client.
* `localSubnet` - (Required) The CIDR block to be accessed by the client through the SSL-VPN connection. It supports to set multi CIDRs by comma join ways, like `10010/24,10020/24,10030/24`.
* `protocol` - (Optional) The protocol used by the SSL-VPN server. Valid value: UDP(default) |TCP
* `cipher` - (Optional) The encryption algorithm that is used in the SSL-VPN connection. Valid values: `aes128Cbc`,`aes192Cbc`,`aes256Cbc`,`none`. Default value: `aes128Cbc`.
  * `aes128Cbc` - the AES-128-CBC algorithm.
  * `aes192Cbc` - the AES-192-CBC algorithm.
  * `aes256Cbc` - the AES-256-CBC algorithm.
  * `none` - If you select this option, no encryption algorithm is used.
* `port` - (Optional) The port used by the SSL-VPN server. The default value is `1194`.The following ports cannot be used: [22, 2222, 22222, 9000, 9001, 9002, 7505, 80, 443, 53, 68, 123, 4510, 4560, 500, 4500].
* `compress`  - (Optional) Specifies whether to enable data compression. Valid values: `true`,`false`. Default value: `false`
  * `true` - enables data compression.
  * `false` - disables data compression.

## Attributes Reference

The following attributes are exported:

* `id` - The ID of the SSL-VPN server.
* `internetIp` - The internet IP of the SSL-VPN server.
* `connections` - The number of current connections.
* `maxConnections` - The maximum number of connections.

## Import

SSL-VPN server can be imported using the id, e.g.

```shell
$ terraform import alicloud_ssl_vpn_server.example vss-abc123456
```



<!-- cache-key: cdktf-0.17.0-pre.15 input-cf4b5b1bf56c496c43b68231c6050f11236e647069056d65286e0470ae0fa2d1 -->