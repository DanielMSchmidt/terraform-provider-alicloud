---
subcategory: "Hybrid Backup Recovery (HBR)"
layout: "alicloud"
page_title: "Alicloud: alicloud_hbr_ots_backup_plan"
sidebar_current: "docs-alicloud-resource-hbr-ots-backup-plan"
description: |-
  Provides a Alicloud HBR Ots Backup Plan resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_hbr\_ots\_backup\_plan

Provides a HBR Ots Backup Plan resource.

For information about HBR Ots Backup Plan and how to use it, see [What is Ots Backup Plan](https://www.alibabacloud.com/help/en/hybrid-backup-recovery/latest/overview).

-> **NOTE:** Available in v1.163.0+.

## Example Usage

Basic Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    /*Terraform Variables are not always the best fit for getting inputs in the context of Terraform CDK.
    You can read more about this at https://cdk.tf/variables*/
    const name = new cdktf.TerraformVariable(this, "name", {
      default: "testAcc",
    });
    const alicloudHbrVaultDefault = new alicloud.hbrVault.HbrVault(
      this,
      "default",
      {
        vaultName: name.stringValue,
        vaultType: "OTS_BACKUP",
      }
    );
    const alicloudOtsInstanceFoo = new alicloud.otsInstance.OtsInstance(
      this,
      "foo",
      {
        accessedBy: "Any",
        description: name.stringValue,
        name: name.stringValue,
        tags: {
          Created: "TF",
          For: "acceptance test",
        },
      }
    );
    const alicloudOtsTableBasic = new alicloud.otsTable.OtsTable(
      this,
      "basic",
      {
        deviationCellVersionInSec: cdktf.Token.asString(1),
        instanceName: cdktf.Token.asString(alicloudOtsInstanceFoo.name),
        maxVersion: 1,
        primaryKey: [
          {
            name: "pk1",
            type: "Integer",
          },
        ],
        tableName: name.stringValue,
        timeToLive: cdktf.Token.asNumber(cdktf.Op.negate(1)),
      }
    );
    new alicloud.hbrOtsBackupPlan.HbrOtsBackupPlan(this, "example", {
      backupType: "COMPLETE",
      instanceName: cdktf.Token.asString(alicloudOtsInstanceFoo.name),
      otsBackupPlanName: name.stringValue,
      otsDetail: [
        {
          tableNames: [cdktf.Token.asString(alicloudOtsTableBasic.tableName)],
        },
      ],
      retention: "2",
      schedule: "I|1602673264|PT2H",
      vaultId: cdktf.Token.asString(alicloudHbrVaultDefault.id),
    });
  }
}

```

## Argument Reference

The following arguments are supported:

* `backupType` - (Required) Backup type. Valid values: `complete`.
* `disabled` - (Optional) Whether to disable the backup task. Valid values: `true`, `false`. Default values: `false`.
* `otsBackupPlanName` - (Required) The name of the backup plan. 1~64 characters, the backup plan name of each data source type in a single warehouse required to be unique.
* `retention` - (Required) Backup retention days, the minimum is 1.
* `schedule` - (Optional, Deprecated) Backup strategy. Optional format: `i|{startTime}|{interval}`. It means to execute a backup task every `{interval}` starting from `{startTime}`. The backup task for the elapsed time will not be compensated. If the last backup task has not completed yet, the next backup task will not be triggered.
  - `startTime` Backup start time, UNIX time seconds.
  - `interval` ISO8601 time interval. E.g: `pt1H` means one hour apart. `p1D` means one day apart.
* `vaultId` - (Required) The ID of backup vault.
* `instanceName` - (Optional) The name of the Table store instance. **Note:** Required while source_type equals `otsTable`.
* `crossAccountType` - (Optional, ForceNew, Computed, Available in v1.189.0+) The type of the cross account backup. Valid values: `selfAccount`, `crossAccount`.
* `crossAccountUserId` - (Optional, ForceNew, Available in v1.189.0+) The original account ID of the cross account backup managed by the current account.
* `crossAccountRoleName` - (Optional, ForceNew, Available in v1.189.0+) The role name created in the original account RAM backup by the cross account managed by the current account.
* `otsDetail` - (Optional) The details about the Table store instance. See the following `Block ots_detail`. **Note:** Required while source_type equals `otsTable`.
* `rules` - (Optional,Available in v1.164.0+) The backup plan rule. See the following `Block rules`. **Note:** Required while source_type equals `otsTable`.

### Block ots_detail

The ots_detail supports the following:

* `tableNames` - (Optional) The names of the destination tables in the Tablestore instance. **Note:** Required while source_type equals `otsTable`.

### Block rules

The rules support the following:

* `schedule` - (Optional) Backup strategy. Optional format: `i|{startTime}|{interval}`. It means to execute a backup task every `{interval}` starting from `{startTime}`. The backup task for the elapsed time will not be compensated. If the last backup task has not completed yet, the next backup task will not be triggered. **Note:** Required while source_type equals `otsTable`.
  - `startTime` Backup start time, UNIX time seconds.
  - `interval` ISO8601 time interval. E.g: `pt1H` means one hour apart. `p1D` means one day apart.
* `retention` - (Optional) Backup retention days, the minimum is 1. **Note:** Required while source_type equals `otsTable`.
* `ruleName` - (Optional)  The name of the backup rule.**Note:** Required while source_type equals `otsTable`. `ruleName` should be unique for the specific user.
* `backupType` - (Optional) The name of the tableStore instance. Valid values: `complete`, `incremental`. **Note:** Required while source_type equals `otsTable`.
* `disabled` - (Optional) Whether to disable the backup task. Valid values: true, false.

## Attributes Reference

The following attributes are exported:

* `id` - The resource ID in terraform of Ots Backup Plan.

## Import

HBR Ots Backup Plan can be imported using the id, e.g.

```shell
$ terraform import alicloud_hbr_ots_backup_plan.example <id>
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-9f60e2d8c30380c5e982ff1590e2eb535009552c03351cb5ac1b1e1685dedb94 -->