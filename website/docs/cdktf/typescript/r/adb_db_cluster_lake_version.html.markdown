---
subcategory: "AnalyticDB for MySQL (ADB)"
layout: "alicloud"
page_title: "Alicloud: alicloud_adb_db_cluster_lake_version"
sidebar_current: "docs-alicloud-resource-adb-db-cluster-lake-version"
description: |-
  Provides a Alicloud AnalyticDB for MySQL (ADB) DB Cluster Lake Version resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_adb\_db\_cluster\_lake\_version

Provides a AnalyticDB for MySQL (ADB) DB Cluster Lake Version resource.

For information about AnalyticDB for MySQL (ADB) DB Cluster Lake Version and how to use it, see [What is DB Cluster Lake Version](https://www.alibabacloud.com/help/en/analyticdb-for-mysql/latest/what-is-analyticdb-for-mysql).

-> **NOTE:** Available in v1.190.0+.

## Example Usage

Basic Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    new alicloud.dataAlicloudResourceManagerResourceGroups.DataAlicloudResourceManagerResourceGroups(
      this,
      "default",
      {}
    );
    const dataAlicloudVpcsDefault =
      new alicloud.dataAlicloudVpcs.DataAlicloudVpcs(this, "default_1", {
        nameRegex: "^default-NODELETING",
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAlicloudVpcsDefault.overrideLogicalId("default");
    const dataAlicloudVswitchesDefault =
      new alicloud.dataAlicloudVswitches.DataAlicloudVswitches(
        this,
        "default_2",
        {
          vpcId: cdktf.Token.asString(
            cdktf.propertyAccess(dataAlicloudVpcsDefault.ids, ["0"])
          ),
          zoneId: "example",
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAlicloudVswitchesDefault.overrideLogicalId("default");
    const alicloudAdbDbClusterLakeVersionDefault =
      new alicloud.adbDbClusterLakeVersion.AdbDbClusterLakeVersion(
        this,
        "default_3",
        {
          computeResource: "16ACU",
          dbClusterVersion: "5.0",
          paymentType: "PayAsYouGo",
          storageResource: "0ACU",
          vpcId: cdktf.Token.asString(
            cdktf.propertyAccess(dataAlicloudVpcsDefault.ids, ["0"])
          ),
          vswitchId: cdktf.Token.asString(
            cdktf.propertyAccess(dataAlicloudVswitchesDefault.ids, ["0"])
          ),
          zoneId: "example",
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudAdbDbClusterLakeVersionDefault.overrideLogicalId("default");
  }
}

```

## Argument Reference

The following arguments are supported:

* `paymentType` - (Required, ForceNew) The payment type of the resource. Valid values are `payAsYouGo`.
* `computeResource` - (Required) The computing resources of the cluster.
* `dbClusterVersion` - (Required, ForceNew) The version of the cluster. Value options: `50`.
* `storageResource` - (Required) The storage resources of the cluster.
* `vswitchId` - (Required, ForceNew) The ID of the vSwitch.
* `vpcId` - (Required, ForceNew) The vpc ID of the resource.
* `zoneId` - (Required, ForceNew) The zone ID of the resource.
* `enableDefaultResourceGroup` - (Optional) Whether to enable default allocation of resources to user_default resource groups.
* `securityIps` - (Optional, Computed, Available in v1.198.0+) The IP addresses in an IP address whitelist of a cluster. Separate multiple IP addresses with commas (,). You can add a maximum of 500 different IP addresses to a whitelist. The entries in the IP address whitelist must be in one of the following formats:
  - IP addresses, such as 10.23.XX.XX.
  - CIDR blocks, such as 10.23.xx.xx/24. In this example, 24 indicates that the prefix of each IP address in the IP whitelist is 24 bits in length. You can replace 24 with a value within the range of 1 to 32.
* `dbClusterDescription` - (Optional, Computed, Available in v1.198.0+) The description of the cluster.

## Attributes Reference

The following attributes are exported:

* `id` - The resource ID in terraform of DBCluster Lake Version.
* `status` - The status of the resource.
* `commodityCode` - The name of the service.
* `engine` - The engine of the database.
* `engineVersion` - The engine version of the database.
* `expireTime` - The time when the cluster expires.
* `expired` - Indicates whether the cluster has expired.
* `lockMode` - The lock mode of the cluster.
* `lockReason` - The reason why the cluster is locked.
* `port` - The port that is used to access the cluster.
* `connectionString` - The endpoint of the cluster.
* `createTime` - The createTime of the cluster.
* `resourceGroupId` - The ID of the resource group.

### Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/docs/configuration-0-11/resources.html#timeouts) for certain actions:

* `create` - (Defaults to 50 mins) Used when create the DB Cluster Lake Version.
* `update` - (Defaults to 72 mins) Used when update the DB Cluster Lake Version.
* `delete` - (Defaults to 5 mins) Used when delete the DB Cluster Lake Version.

## Import

AnalyticDB for MySQL (ADB) DB Cluster Lake Version can be imported using the id, e.g.

```shell
$ terraform import alicloud_adb_db_cluster_lake_version.example <id>
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-1932a7b5d3e2be8712aa2e5729017827807ef66156bdf1592d3595b62f96d00d -->