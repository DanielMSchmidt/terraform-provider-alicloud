---
subcategory: "Application Real-Time Monitoring Service (ARMS)"
layout: "alicloud"
page_title: "Alicloud: alicloud_arms_dispatch_rule"
sidebar_current: "docs-alicloud-resource-arms-dispatch-rule"
description: |-
  Provides a Alicloud Application Real-Time Monitoring Service (ARMS) Alert Dispatch rule resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_arms\_dispatch\_rule

Provides a Application Real-Time Monitoring Service (ARMS) Alert Dispatch Rule resource.

For information about Application Real-Time Monitoring Service (ARMS) Alert Dispatch Rule and how to use it, see [What is Alert Dispatch_Rule](https://www.alibabacloud.com/help/en/doc-detail/203146.htm).

-> **NOTE:** Available in v1.136.0+.

## Example Usage

Basic Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const alicloudArmsAlertContactDefault =
      new alicloud.armsAlertContact.ArmsAlertContact(this, "default", {
        alertContactName: "example_value",
        email: "example_value@aaa.com",
      });
    const alicloudArmsAlertContactGroupDefault =
      new alicloud.armsAlertContactGroup.ArmsAlertContactGroup(
        this,
        "default_1",
        {
          alertContactGroupName: "example_value",
          contactIds: [
            cdktf.Token.asString(alicloudArmsAlertContactDefault.id),
          ],
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudArmsAlertContactGroupDefault.overrideLogicalId("default");
    const alicloudArmsDispatchRuleDefault =
      new alicloud.armsDispatchRule.ArmsDispatchRule(this, "default_2", {
        dispatchRuleName: "example_value",
        dispatchType: "CREATE_ALERT",
        groupRules: [
          {
            groupInterval: 15,
            groupWaitTime: 5,
            groupingFields: ["alertname"],
            repeatInterval: 100,
          },
        ],
        labelMatchExpressionGrid: [
          {
            labelMatchExpressionGroups: [
              {
                labelMatchExpressions: [
                  {
                    key: "_aliyun_arms_involvedObject_kind",
                    operator: "eq",
                    value: "app",
                  },
                ],
              },
            ],
          },
        ],
        notifyRules: [
          {
            notifyChannels: ["dingTalk", "wechat"],
            notifyObjects: [
              {
                name: "example_value",
                notifyObjectId: cdktf.Token.asString(
                  alicloudArmsAlertContactDefault.id
                ),
                notifyType: "ARMS_CONTACT",
              },
              {
                name: "example_value",
                notifyObjectId: cdktf.Token.asString(
                  alicloudArmsAlertContactGroupDefault.id
                ),
                notifyType: "ARMS_CONTACT_GROUP",
              },
            ],
          },
        ],
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudArmsDispatchRuleDefault.overrideLogicalId("default");
  }
}

```

## Argument Reference

The following arguments are supported:

* `dispatchRuleName` - (Required) The name of the dispatch policy.
* `dispatchType` - (Required) The alert handling method. Valid values: CREATE_ALERT: generates an alert. DISCARD_ALERT: discards the alert event and generates no alert.
* `isRecover` - (Optional) Specifies whether to send the restored alert. Valid values: true: sends the alert. false: does not send the alert.
* `groupRules` - (Required) Sets the event group. See the following `Block group_rules`. It will be ignored  when `dispatch_type = "DISCARD_ALERT"`.
* `labelMatchExpressionGrid` - (Required) Sets the dispatch rule. See the following `Block label_match_expression_grid`.
* `notifyRules` - (Required) Sets the notification rule. See the following `Block notify_rules`. It will be ignored  when `dispatch_type = "DISCARD_ALERT"`.

### Block group_rules
The group_rules supports the following:

* `groupWaitTime` - (Required) The duration for which the system waits after the first alert is sent. After the duration, all alerts are sent in a single notification to the handler.
* `groupInterval` - (Required) The duration for which the system waits after the first alert is sent. After the duration, all alerts are sent in a single notification to the handler.
* `groupingFields` - (Requiredï¼Œ List<String>) The fields that are used to group events. Events with the same field content are assigned to a group. Alerts with the same specified grouping field are sent to the handler in separate notifications. 
* `repeatInterval` - (Optional) The silence period of repeated alerts. All alerts are repeatedly sent at specified intervals until the alerts are cleared. The minimum value is 61. Default to 600.

### Block label_match_expression_grid
The label_match_expression_grid supports the following:

* `labelMatchExpressionGroups` - (Required) Sets the dispatch rule. See the following `Block label_match_expression_groups`.

### Block label_match_expression_groups
The label_match_expression_groups supports the following:

* `labelMatchExpressions` - (Required) Sets the dispatch rule. See the following `Block label_match_expressions`.

### Block label_match_expressions
The label_match_expressions supports the following:

* `key` - (Required) The key of the tag of the dispatch rule. Valud values:
  * _aliyun_arms_userid: user ID
  * _aliyun_arms_involvedObject_kind: type of the associated object
  * _aliyun_arms_involvedObject_id: ID of the associated object 
  * _aliyun_arms_involvedObject_name: name of the associated object
  * _aliyun_arms_alert_name: alert name
  * _aliyun_arms_alert_rule_id: alert rule ID
  * _aliyun_arms_alert_type: alert type
  * _aliyun_arms_alert_level: alert severity

* `value` - (Required) The value of the tag.
* `operator` - (Required) The operator used in the dispatch rule. Valid values: 
  * eq: equals to. 
  * re: matches a regular expression.

### Block notify_rules
The notify_rules supports the following:

* `notifyObjects` - (Required) Sets the notification object. See the following `Block notify_objects`.
* `notifyChannels` - (Required, List<String>) The notification method. Valid values: dingTalk, sms, webhook, email, and wechat.

### Block notify_objects
The notify_objects supports the following:

* `notifyObjectId` - (Required) The ID of the contact or contact group.
* `name` - (Required) The name of the contact or contact group.
* `notifyType` - (Required) The type of the alert contact. Valid values: ARMS_CONTACT: contact. ARMS_CONTACT_GROUP: contact group.

## Attributes Reference

The following attributes are exported:

* `id` - The resource ID in terraform of Alert Contact.
* `status` - The resource status of Alert Dispatch Rule.

## Import

Application Real-Time Monitoring Service (ARMS) Alert Contact can be imported using the id, e.g.

```shell
$ terraform import alicloud_arms_dispatch_rule.example <id>
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-0103239b6a2f3b00cb7c5fb7640f8fe6afae5fba7bfb2b89ee72ccfc627e83d4 -->