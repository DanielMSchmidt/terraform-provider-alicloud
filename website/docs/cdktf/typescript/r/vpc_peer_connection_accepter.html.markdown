---
subcategory: "VPC"
layout: "alicloud"
page_title: "Alicloud: alicloud_vpc_peer_connection_accepter"
sidebar_current: "docs-alicloud-resource-vpc-peer-connection-accepter"
description: |-
  Provides a Alicloud Vpc Peer Connection Accepter resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud_vpc_peer_connection_accepter

Provides a Vpc Peer Connection Accepter resource.

For information about Vpc Peer Connection Accepter and how to use it, see [What is Peer Connection Accepter](https://www.alibabacloud.com/help/en/virtual-private-cloud/latest/AcceptVpcPeerConnection).

-> **NOTE:** Available in v1.196.0+.

## Example Usage

Basic Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    /*Terraform Variables are not always the best fit for getting inputs in the context of Terraform CDK.
    You can read more about this at https://cdk.tf/variables*/
    const alicloudLocal = new alicloud.provider.AlicloudProvider(
      this,
      "alicloud",
      {
        alias: "local",
        region: "hangzhou",
      }
    );
    const acceptingRegion = new cdktf.TerraformVariable(
      this,
      "accepting_region",
      {
        default: "cn-beijing",
      }
    );
    const dataAlicloudAccountDefault =
      new alicloud.dataAlicloudAccount.DataAlicloudAccount(this, "default", {});
    const dataAlicloudVpcsDefault =
      new alicloud.dataAlicloudVpcs.DataAlicloudVpcs(this, "default_3", {
        nameRegex: "default-NODELETING",
        provider: alicloudLocal,
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAlicloudVpcsDefault.overrideLogicalId("default");
    const alicloudAccepting = new alicloud.provider.AlicloudProvider(
      this,
      "alicloud_4",
      {
        alias: "accepting",
        region: acceptingRegion.stringValue,
      }
    );
    const dataAlicloudVpcsDefaultone =
      new alicloud.dataAlicloudVpcs.DataAlicloudVpcs(this, "defaultone", {
        nameRegex: "default-NODELETING",
        provider: alicloudAccepting,
      });
    const alicloudVpcPeerConnectionDefault =
      new alicloud.vpcPeerConnection.VpcPeerConnection(this, "default_6", {
        acceptingAliUid: cdktf.Token.asNumber(dataAlicloudAccountDefault.id),
        acceptingRegionId: acceptingRegion.stringValue,
        acceptingVpcId: cdktf.Token.asString(
          cdktf.propertyAccess(dataAlicloudVpcsDefaultone.ids, ["0"])
        ),
        description: "example_value",
        peerConnectionName: "example_value",
        provider: alicloudLocal,
        vpcId: cdktf.Token.asString(
          cdktf.propertyAccess(dataAlicloudVpcsDefault.ids, ["0"])
        ),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudVpcPeerConnectionDefault.overrideLogicalId("default");
    const alicloudVpcPeerConnectionAccepterDefault =
      new alicloud.vpcPeerConnectionAccepter.VpcPeerConnectionAccepter(
        this,
        "default_7",
        {
          instanceId: cdktf.Token.asString(alicloudVpcPeerConnectionDefault.id),
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudVpcPeerConnectionAccepterDefault.overrideLogicalId("default");
  }
}

```

## Argument Reference

The following arguments are supported:
* `instanceId` - (Required,ForceNew) The ID of the instance of the created VPC peer connection.
* `dryRun` - (Optional) The dry run.

## Attributes Reference

The following attributes are exported:
* `id` - The `key` of the resource supplied above.
* `acceptingOwnerUid` - The ID of the Alibaba Cloud account (primary account) of the receiving end of the VPC peering connection to be created.-Enter the ID of your Alibaba Cloud account to create a peer-to-peer connection to the VPC account.-Enter the ID of another Alibaba Cloud account to create a cross-account VPC peer-to-peer connection.> If the recipient account is a RAM user (sub-account), enter the ID of the Alibaba Cloud account corresponding to the RAM user.
* `acceptingRegionId` - The region ID of the recipient of the VPC peering connection to be created.-When creating a VPC peer-to-peer connection in the same region, enter the same region ID as the region ID of the initiator.-When creating a cross-region VPC peer-to-peer connection, enter a region ID that is different from the region ID of the initiator.
* `acceptingVpcId` - The VPC ID of the receiving end of the VPC peer connection.
* `bandwidth` - The bandwidth of the VPC peering connection to be modified. Unit: Mbps. The value range is an integer greater than 0.
* `description` - The description of the VPC peer connection to be created.It must be 2 to 256 characters in length and must start with a letter or Chinese, but cannot start with http:// or https.
* `peerConnectionAccepterName` - The name of the resource
* `status` - The status of the resource
* `vpcId` - You must create a VPC ID on the initiator of a VPC peer connection.

### Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/docs/configuration-0-11/resources.html#timeouts) for certain actions:
* `create` - (Defaults to 5 mins) Used when create the Peer Connection Accepter.
* `delete` - (Defaults to 5 mins) Used when delete the Peer Connection Accepter.

## Import

Vpc Peer Connection Accepter can be imported using the id, e.g.

```shell
$terraform import alicloud_vpc_peer_connection_accepter.example <id>
```
<!-- cache-key: cdktf-0.17.0-pre.15 input-9702ff33a58335e935c339be03f2ca5ed2bedaaff5853c350c984f6c2efca204 -->