---
subcategory: "ECS"
layout: "alicloud"
page_title: "Alicloud: alicloud_ram_role_attachment"
sidebar_current: "docs-alicloud-resource-ram-role-attachment"
description: |-
  Provides a RAM role attachment resource to bind role for several ECS instances.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_ram\_role\_attachment

Provides a RAM role attachment resource to bind role for several ECS instances.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    /*Terraform Variables are not always the best fit for getting inputs in the context of Terraform CDK.
    You can read more about this at https://cdk.tf/variables*/
    const name = new cdktf.TerraformVariable(this, "name", {
      default: "ecsInstanceVPCExample",
    });
    const alicloudRamRoleRole = new alicloud.ramRole.RamRole(this, "role", {
      description: "this is a test",
      document:
        '  {\n    "Statement": [\n      {\n        "Action": "sts:AssumeRole",\n        "Effect": "Allow",\n        "Principal": {\n          "Service": [\n            "ecs.aliyuncs.com"\n          ]\n        }\n      }\n    ],\n    "Version": "1"\n  }\n\n',
      force: true,
      name: "testrole",
    });
    const alicloudVpcDefault = new alicloud.vpc.Vpc(this, "default", {
      cidrBlock: "172.16.0.0/16",
      vpcName: name.stringValue,
    });
    const dataAlicloudImagesDefault =
      new alicloud.dataAlicloudImages.DataAlicloudImages(this, "default_3", {
        mostRecent: true,
        nameRegex: "^ubuntu_18.*64",
        owners: "system",
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAlicloudImagesDefault.overrideLogicalId("default");
    const dataAlicloudZonesDefault =
      new alicloud.dataAlicloudZones.DataAlicloudZones(this, "default_4", {
        availableDiskCategory: "cloud_efficiency",
        availableResourceCreation: "VSwitch",
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAlicloudZonesDefault.overrideLogicalId("default");
    const alicloudSecurityGroupDefault =
      new alicloud.securityGroup.SecurityGroup(this, "default_5", {
        name: name.stringValue,
        vpcId: cdktf.Token.asString(alicloudVpcDefault.id),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudSecurityGroupDefault.overrideLogicalId("default");
    const alicloudSecurityGroupRuleDefault =
      new alicloud.securityGroupRule.SecurityGroupRule(this, "default_6", {
        cidrIp: "172.16.0.0/24",
        ipProtocol: "tcp",
        nicType: "intranet",
        policy: "accept",
        portRange: "22/22",
        priority: 1,
        securityGroupId: cdktf.Token.asString(alicloudSecurityGroupDefault.id),
        type: "ingress",
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudSecurityGroupRuleDefault.overrideLogicalId("default");
    const alicloudVswitchDefault = new alicloud.vswitch.Vswitch(
      this,
      "default_7",
      {
        cidrBlock: "172.16.0.0/24",
        vpcId: cdktf.Token.asString(alicloudVpcDefault.id),
        vswitchName: name.stringValue,
        zoneId: cdktf.Token.asString(
          cdktf.propertyAccess(dataAlicloudZonesDefault.zones, ["0", "id"])
        ),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudVswitchDefault.overrideLogicalId("default");
    const dataAlicloudInstanceTypesDefault =
      new alicloud.dataAlicloudInstanceTypes.DataAlicloudInstanceTypes(
        this,
        "default_8",
        {
          availabilityZone: cdktf.Token.asString(
            cdktf.propertyAccess(dataAlicloudZonesDefault.zones, ["0", "id"])
          ),
          cpuCoreCount: 2,
          memorySize: 4,
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAlicloudInstanceTypesDefault.overrideLogicalId("default");
    const alicloudInstanceFoo = new alicloud.instance.Instance(this, "foo", {
      imageId: cdktf.Token.asString(
        cdktf.propertyAccess(dataAlicloudImagesDefault.images, ["0", "id"])
      ),
      instanceName: name.stringValue,
      instanceType: cdktf.Token.asString(
        cdktf.propertyAccess(dataAlicloudInstanceTypesDefault.instanceTypes, [
          "0",
          "id",
        ])
      ),
      internetChargeType: "PayByTraffic",
      internetMaxBandwidthOut: 5,
      securityGroups: [cdktf.Token.asString(alicloudSecurityGroupDefault.id)],
      systemDiskCategory: "cloud_efficiency",
      vswitchId: cdktf.Token.asString(alicloudVswitchDefault.id),
    });
    new alicloud.ramRoleAttachment.RamRoleAttachment(this, "attach", {
      instanceIds: cdktf.Token.asList(
        cdktf.propertyAccess(alicloudInstanceFoo, ["*", "id"])
      ),
      roleName: cdktf.Token.asString(alicloudRamRoleRole.name),
    });
  }
}

```

## Argument Reference

The following arguments are supported:

* `roleName` - (Required, ForceNew) The name of role used to bind. This name can have a string of 1 to 64 characters, must contain only alphanumeric characters or hyphens, such as "-", "_", and must not begin with a hyphen.
* `instanceIds` - (Required, ForceNew) The list of ECS instance's IDs.

## Attributes Reference

The following attributes are exported:

* `roleName` - The name of the role.
* `instanceIds` The list of ECS instance's IDs.

<!-- cache-key: cdktf-0.17.0-pre.15 input-58ea11e0d1d1ae195ef13ff8556b64d51f5f796785a6edf45a1addde954a6f51 -->