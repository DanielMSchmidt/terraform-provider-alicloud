---
subcategory: "AliKafka"
layout: "alicloud"
page_title: "Alicloud: alicloud_alikafka_sasl_user"
sidebar_current: "docs-alicloud-resource-alikafka-sasl_user"
description: |-
  Provides a Alicloud Alikafka Sasl User resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_alikafka\_sasl\_user

Provides an Alikafka sasl user resource.

-> **NOTE:** Available in 1.66.0+

-> **NOTE:**  Only the following regions support create alikafka sasl user.
[`cnHangzhou`,`cnBeijing`,`cnShenzhen`,`cnShanghai`,`cnQingdao`,`cnHongkong`,`cnHuhehaote`,`cnZhangjiakou`,`cnChengdu`,`cnHeyuan`,`apSoutheast1`,`apSoutheast3`,`apSoutheast5`,`apSouth1`,`apNortheast1`,`euCentral1`,`euWest1`,`usWest1`,`usEast1`]

For information about Alikafka sasl user and how to use it, see [What is Alikafka sasl user a](https://www.alibabacloud.com/help/en/doc-detail/162221.html)

## Example Usage

Basic Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    /*Terraform Variables are not always the best fit for getting inputs in the context of Terraform CDK.
    You can read more about this at https://cdk.tf/variables*/
    const password = new cdktf.TerraformVariable(this, "password", {
      default: "testpassword",
    });
    const username = new cdktf.TerraformVariable(this, "username", {
      default: "testusername",
    });
    const alicloudVpcDefault = new alicloud.vpc.Vpc(this, "default", {
      cidrBlock: "172.16.0.0/12",
    });
    const dataAlicloudZonesDefault =
      new alicloud.dataAlicloudZones.DataAlicloudZones(this, "default_3", {
        availableResourceCreation: "VSwitch",
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAlicloudZonesDefault.overrideLogicalId("default");
    const alicloudVswitchDefault = new alicloud.vswitch.Vswitch(
      this,
      "default_4",
      {
        cidrBlock: "172.16.0.0/24",
        vpcId: cdktf.Token.asString(alicloudVpcDefault.id),
        zoneId: cdktf.Token.asString(
          cdktf.propertyAccess(dataAlicloudZonesDefault.zones, ["0", "id"])
        ),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudVswitchDefault.overrideLogicalId("default");
    const alicloudAlikafkaInstanceDefault =
      new alicloud.alikafkaInstance.AlikafkaInstance(this, "default_5", {
        deployType: cdktf.Token.asNumber("5"),
        diskSize: cdktf.Token.asNumber("500"),
        diskType: cdktf.Token.asNumber("1"),
        ioMax: cdktf.Token.asNumber("20"),
        name: "tf-testacc-alikafkainstance",
        partitionNum: cdktf.Token.asNumber("50"),
        vswitchId: cdktf.Token.asString(alicloudVswitchDefault.id),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudAlikafkaInstanceDefault.overrideLogicalId("default");
    const alicloudAlikafkaSaslUserDefault =
      new alicloud.alikafkaSaslUser.AlikafkaSaslUser(this, "default_6", {
        instanceId: cdktf.Token.asString(alicloudAlikafkaInstanceDefault.id),
        password: password.stringValue,
        username: username.stringValue,
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudAlikafkaSaslUserDefault.overrideLogicalId("default");
  }
}

```

## Argument Reference

The following arguments are supported:

* `instanceId` - (Required, ForceNew) ID of the ALIKAFKA Instance that owns the groups.
* `username` - (Required, ForceNew) Username for the sasl user. The length should between 1 to 64 characters. The characters can only contain 'a'-'z', 'A'-'Z', '0'-'9', '_' and '-'.
* `password` - (Optional, Sensitive) Operation password. It may consist of letters, digits, or underlines, with a length of 1 to 64 characters. You have to specify one of `password` and `kmsEncryptedPassword` fields.
* `kmsEncryptedPassword` - (Optional) An KMS encrypts password used to a db account. You have to specify one of `password` and `kmsEncryptedPassword` fields.
* `kmsEncryptionContext` - (Optional, MapString) An KMS encryption context used to decrypt `kmsEncryptedPassword` before creating or updating a user with `kmsEncryptedPassword`. See [Encryption Context](https://www.alibabacloud.com/help/doc-detail/42975.htm). It is valid when `kmsEncryptedPassword` is set.
* `type` - (Optional, Available in 1.159.0+) The authentication mechanism. Valid values: `plain`, `scram`. Default value: `plain`.

## Attributes Reference

The following attributes are exported:

* `id` - The ID of the resource. The value is formate as `<instance_id>:<username>`.

## Import

Alikafka Sasl User can be imported using the id, e.g.

```shell
terraform import alicloud_alikafka_sasl_user.example <instance_id>:<username>
```


<!-- cache-key: cdktf-0.17.0-pre.15 input-3f30ddc7450b6f6bc407c29d5192db11d88e021fd65488a2222f4605fdaa804d -->