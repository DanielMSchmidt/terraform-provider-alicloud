---
subcategory: "VPC"
layout: "alicloud"
page_title: "Alicloud: alicloud_vswitch"
sidebar_current: "docs-alicloud-resource-vswitch"
description: |-
  Provides a Alicloud VPC Vswitch resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud_vswitch

Provides a VPC Vswitch resource. ## Module Support

You can use to the existing [vpc module](https://registry.terraform.io/modules/alibaba/vpc/alicloud)  to create a VPC and several VSwitches one-click.

For information about VPC Vswitch and how to use it, see [What is Vswitch](https://www.alibabacloud.com/help/en/virtual-private-cloud/latest/work-with-vswitches).

## Example Usage

Basic Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const alicloudVpcFoo = new alicloud.vpc.Vpc(this, "foo", {
      cidrBlock: "172.16.0.0/12",
      vpcName: "terraform-example",
    });
    const dataAlicloudZonesFoo =
      new alicloud.dataAlicloudZones.DataAlicloudZones(this, "foo_1", {
        availableResourceCreation: "VSwitch",
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAlicloudZonesFoo.overrideLogicalId("foo");
    const alicloudVswitchFoo = new alicloud.vswitch.Vswitch(this, "foo_2", {
      cidrBlock: "172.16.0.0/21",
      vpcId: cdktf.Token.asString(alicloudVpcFoo.id),
      vswitchName: "terraform-example",
      zoneId: cdktf.Token.asString(
        cdktf.propertyAccess(dataAlicloudZonesFoo.zones, ["0", "id"])
      ),
    });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudVswitchFoo.overrideLogicalId("foo");
  }
}

```

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const alicloudVpcVpc = new alicloud.vpc.Vpc(this, "vpc", {
      cidrBlock: "172.16.0.0/12",
      vpcName: "terraform-example",
    });
    const alicloudVpcIpv4CidrBlockCidrBlocks =
      new alicloud.vpcIpv4CidrBlock.VpcIpv4CidrBlock(this, "cidr_blocks", {
        secondaryCidrBlock: "192.163.0.0/16",
        vpcId: cdktf.Token.asString(alicloudVpcVpc.id),
      });
    const dataAlicloudZonesFoo =
      new alicloud.dataAlicloudZones.DataAlicloudZones(this, "foo", {
        availableResourceCreation: "VSwitch",
      });
    new alicloud.vswitch.Vswitch(this, "island-nat", {
      cidrBlock: "172.16.0.0/21",
      tags: {
        BuiltBy: "example_value",
        Environment: "example_value",
        ManagedBy: "example_value",
        cnm_version: "example_value",
      },
      vpcId: cdktf.Token.asString(alicloudVpcIpv4CidrBlockCidrBlocks.vpcId),
      vswitchName: "terraform-example",
      zoneId: cdktf.Token.asString(
        cdktf.propertyAccess(dataAlicloudZonesFoo.zones, ["0", "id"])
      ),
    });
  }
}

```

Create a switch associated with the additional network segment

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const alicloudVpcFoo = new alicloud.vpc.Vpc(this, "foo", {
      cidrBlock: "172.16.0.0/12",
      vpcName: "terraform-example",
    });
    const alicloudVpcIpv4CidrBlockFoo =
      new alicloud.vpcIpv4CidrBlock.VpcIpv4CidrBlock(this, "foo_1", {
        secondaryCidrBlock: "192.163.0.0/16",
        vpcId: cdktf.Token.asString(alicloudVpcFoo.id),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudVpcIpv4CidrBlockFoo.overrideLogicalId("foo");
    const dataAlicloudZonesFoo =
      new alicloud.dataAlicloudZones.DataAlicloudZones(this, "foo_2", {
        availableResourceCreation: "VSwitch",
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAlicloudZonesFoo.overrideLogicalId("foo");
    const alicloudVswitchFoo = new alicloud.vswitch.Vswitch(this, "foo_3", {
      cidrBlock: "192.163.0.0/24",
      vpcId: cdktf.Token.asString(alicloudVpcIpv4CidrBlockFoo.vpcId),
      zoneId: cdktf.Token.asString(
        cdktf.propertyAccess(dataAlicloudZonesFoo.zones, ["0", "id"])
      ),
    });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudVswitchFoo.overrideLogicalId("foo");
  }
}

```

## Argument Reference

The following arguments are supported:
* `cidrBlock` - (Required, ForceNew) The IPv4 CIDR block of the VSwitch.
* `description` - (Optional) The description of VSwitch.
* `zoneId` - (Optional, ForceNew, Available in 1.119.0+) The AZ for the VSwitch. **Note:** Required for a VPC VSwitch.
* `enableIpv6` - (Optional, Available in v1.201.1+) Whether the IPv6 function is enabled in the switch. Value:
  - **true**: enables IPv6.
  - **false** (default): IPv6 is not enabled.
* `ipv6CidrBlockMask` - (Optional, Available in v1.115+) The IPv6 CIDR block of the VSwitch.
* `tags` - (Optional, Map, Available in v1.55.3+) The tags of VSwitch.
* `vswitchName` - (Optional, Available in v1.119.0+) The name of the VSwitch.
* `vpcId` - (Required, ForceNew) The VPC ID.

The following arguments will be discarded. Please use new fields as soon as possible:
* `name` - (Deprecated from v1.119.0+) Field 'name' has been deprecated from provider version 1.119.0. New field 'vswitch_name' instead.
* `availabilityZone` - (Deprecated from v1.119.0+) Field 'availability_zone' has been deprecated from provider version 1.119.0. New field 'zone_id' instead.


## Attributes Reference

The following attributes are exported:
* `id` - The ID of the resource supplied above.
* `createTime` - The creation time of the VSwitch.
* `ipv6CidrBlock` - The IPv6 CIDR block of the VSwitch.
* `status` - The status of the resource.

### Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/docs/configuration-0-11/resources.html#timeouts) for certain actions:
* `create` - (Defaults to 5 mins) Used when create the Vswitch.
* `delete` - (Defaults to 5 mins) Used when delete the Vswitch.
* `update` - (Defaults to 5 mins) Used when update the Vswitch.

## Import

VPC Vswitch can be imported using the id, e.g.

```shell
$ terraform import alicloud_vpc_vswitch.example <id>
```
<!-- cache-key: cdktf-0.17.0-pre.15 input-b7427b591e9544688b5315694fb2c6278b37cf9efca9a25490b9681c3c6b965c -->