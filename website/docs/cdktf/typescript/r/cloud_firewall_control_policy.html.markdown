---
subcategory: "Cloud Firewall"
layout: "alicloud"
page_title: "Alicloud: alicloud_cloud_firewall_control_policy"
sidebar_current: "docs-alicloud-resource-cloud-firewall-control-policy"
description: |-
  Provides a Alicloud Cloud Firewall Control Policy resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_cloud\_firewall\_control\_policy

Provides a Cloud Firewall Control Policy resource.

For information about Cloud Firewall Control Policy and how to use it, see [What is Control Policy](https://www.alibabacloud.com/help/doc-detail/138867.htm).

-> **NOTE:** Available in v1.129.0+.

## Example Usage

Basic Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    new alicloud.cloudFirewallControlPolicy.CloudFirewallControlPolicy(
      this,
      "example",
      {
        aclAction: "accept",
        applicationName: "ANY",
        description: "example",
        destination: "100.1.1.0/24",
        destinationType: "net",
        direction: "out",
        proto: "ANY",
        source: "1.2.3.0/24",
        sourceType: "net",
      }
    );
  }
}

```

## Argument Reference

The following arguments are supported:

* `aclAction` - (Required) The action that Cloud Firewall performs on the traffic. Valid values: `accept`, `drop`, `log`.
* `applicationName` - (Required) The application type that the access control policy supports.If `direction` is `in`, the valid value is `any`. If `direction` is `out`, the valid values are `any`, `http`, `https`, `mqtt`, `memcache`, `mongoDb`, `mySql`, `rdp`, `redis`, `smtp`, `smtps`, `ssh`, `ssl`, `vnc`.
* `description` - (Required) The description of the access control policy.
* `destPort` - (Optional) The destination port defined in the access control policy. 
* `destPortGroup` - (Optional) The destination port address book defined in the access control policy.
* `destPortType` - (Optional) The destination port type defined in the access control policy. Valid values: `group`, `port`.
* `destination` - (Required) The destination address defined in the access control policy.
* `destinationType` - (Required) DestinationType. Valid values: If Direction is `in`, the valid values are `net`, `group`. If `direction` is `out`, the valid values are `net`, `group`, `domain`, `location`.
* `direction` - (Required, ForceNew) Direction. Valid values: `in`, `out`.
* `ipVersion` - (Optional) The ip version.
* `lang` - (Optional) DestPortGroupPorts. Valid values: `en`, `zh`.
* `proto` - (Required) Proto. Valid values: ` TCP`, ` UDP`, `any`, `icmp`.
* `release` - (Optional) Specifies whether the access control policy is enabled. By default, an access control policy is enabled after it is created. Valid values: `true`, `false`.
* `source` - (Required) Source.
* `sourceIp` - (Optional) The source ip.
* `sourceType` - (Required) SourceType. Valid values: If `direction` is `in`, the valid values are `net`, `group`, `location`. If `direction` is `out`, the valid values are `net`, `group`.

## Attributes Reference

The following attributes are exported:

* `id` - The resource ID of Control Policy. The value formats as `<acl_uuid>:<direction>`.
* `aclUuid` - (Available in v1.148.0+) The unique ID of the access control policy.

## Import

Cloud Firewall Control Policy can be imported using the id, e.g.

```shell
$ terraform import alicloud_cloud_firewall_control_policy.example <acl_uuid>:<direction>
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-d5a6a891be3a9d6483cd8e7430427dde47156e2d417598482e07e54a9ecdcc52 -->