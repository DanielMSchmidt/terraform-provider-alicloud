---
subcategory: "ECS"
layout: "alicloud"
page_title: "Alicloud: alicloud_ecs_network_interface_permission"
sidebar_current: "docs-alicloud-resource-ecs-network-interface-permission"
description: |-
  Provides a Alicloud ECS Network Interface Permission resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_ecs\_network\_interface\_permission

Provides a ECS Network Interface Permission resource.

For information about ECS Network Interface Permission and how to use it, see [What is Network Interface Permission](https://www.alibabacloud.com/help/en/elastic-compute-service/latest/elastic-network-interfaces-overview).

-> **NOTE:** Available in v1.166.0+.

## Example Usage

Basic Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const alicloudVpcDefault = new alicloud.vpc.Vpc(this, "default", {
      cidrBlock: "172.17.3.0/24",
      vpcName: "terraform-example",
    });
    const dataAlicloudAccountDefault =
      new alicloud.dataAlicloudAccount.DataAlicloudAccount(
        this,
        "default_1",
        {}
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAlicloudAccountDefault.overrideLogicalId("default");
    const dataAlicloudResourceManagerResourceGroupsDefault =
      new alicloud.dataAlicloudResourceManagerResourceGroups.DataAlicloudResourceManagerResourceGroups(
        this,
        "default_2",
        {}
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAlicloudResourceManagerResourceGroupsDefault.overrideLogicalId(
      "default"
    );
    const dataAlicloudZonesDefault =
      new alicloud.dataAlicloudZones.DataAlicloudZones(this, "default_3", {
        availableResourceCreation: "VSwitch",
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAlicloudZonesDefault.overrideLogicalId("default");
    const alicloudSecurityGroupDefault =
      new alicloud.securityGroup.SecurityGroup(this, "default_4", {
        name: "terraform-example",
        vpcId: cdktf.Token.asString(alicloudVpcDefault.id),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudSecurityGroupDefault.overrideLogicalId("default");
    const alicloudVswitchDefault = new alicloud.vswitch.Vswitch(
      this,
      "default_5",
      {
        cidrBlock: "172.17.3.0/24",
        vpcId: cdktf.Token.asString(alicloudVpcDefault.id),
        vswitchName: "terraform-example",
        zoneId: cdktf.Token.asString(
          cdktf.propertyAccess(dataAlicloudZonesDefault.zones, ["0", "id"])
        ),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudVswitchDefault.overrideLogicalId("default");
    const alicloudEcsNetworkInterfaceDefault =
      new alicloud.ecsNetworkInterface.EcsNetworkInterface(this, "default_6", {
        description: "terraform-example",
        networkInterfaceName: "terraform-example",
        primaryIpAddress: cdktf.Fn.cidrhost(
          cdktf.Token.asString(alicloudVswitchDefault.cidrBlock),
          100
        ),
        resourceGroupId: cdktf.Token.asString(
          cdktf.propertyAccess(
            dataAlicloudResourceManagerResourceGroupsDefault.ids,
            ["0"]
          )
        ),
        securityGroupIds: [
          cdktf.Token.asString(alicloudSecurityGroupDefault.id),
        ],
        tags: {
          Created: "TF",
          For: "example",
        },
        vswitchId: cdktf.Token.asString(alicloudVswitchDefault.id),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudEcsNetworkInterfaceDefault.overrideLogicalId("default");
    new alicloud.ecsNetworkInterfacePermission.EcsNetworkInterfacePermission(
      this,
      "example",
      {
        accountId: cdktf.Token.asString(dataAlicloudAccountDefault.id),
        force: true,
        networkInterfaceId: cdktf.Token.asString(
          alicloudEcsNetworkInterfaceDefault.id
        ),
        permission: "InstanceAttach",
      }
    );
  }
}

```

## Argument Reference

The following arguments are supported:

* `accountId` - (Required, ForceNew) Alibaba Cloud Partner (Certified ISV) account ID or individual user ID.
* `networkInterfaceId` - (Required, ForceNew) The ID of the network interface.
* `permission` - (Required, ForceNew) The permissions of the Network Interface. Valid values: `instanceAttach`. `instanceAttach`: Allows authorized users to mount your ENI to the other ECS instance. The ECS instance must be in the same zone as the ENI.
* `force` - (Optional, ForceNew) Whether to force deletion of Network Interface Permission. Default value: `true`.

## Attributes Reference

The following attributes are exported:

* `id` - The resource ID in terraform of Network Interface Permission.
* `status` - The Status of the Network Interface Permissions. Valid values: `pending`, `granted`, `revoking`, `revoked`.

### Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/docs/configuration-0-11/resources.html#timeouts) for certain actions:

* `create` - (Defaults to 1 mins) Used when creating the Network Interface Permission (until it reaches the initial `granted` status).
* `delete` - (Defaults to 1 mins) Used when deleting the Network Interface Permission.

## Import

ECS Network Interface Permission can be imported using the id, e.g.

```shell
$ terraform import alicloud_ecs_network_interface_permission.example <id>
```
<!-- cache-key: cdktf-0.17.0-pre.15 input-ffd1d70b05d7d7630a27de3d8eb254317fcd233ad48723efcb4ec673b699fe67 -->