---
subcategory: "Service Mesh"
layout: "alicloud"
page_title: "Alicloud: alicloud_service_mesh_extension_provider"
sidebar_current: "docs-alicloud-resource-service-mesh-extension-provider"
description: |-
  Provides a Alicloud Service Mesh Extension Provider resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_service\_mesh\_extension\_provider

Provides a Service Mesh Extension Provider resource.

For information about Service Mesh Extension Provider and how to use it, see [What is Extension Provider](https://help.aliyun.com/document_detail/461549.html).

-> **NOTE:** Available in v1.191.0+.

## Example Usage

Basic Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const dataAlicloudVpcsDefault =
      new alicloud.dataAlicloudVpcs.DataAlicloudVpcs(this, "default", {
        nameRegex: "default-NODELETING",
      });
    const dataAlicloudZonesDefault =
      new alicloud.dataAlicloudZones.DataAlicloudZones(this, "default_1", {
        availableResourceCreation: "VSwitch",
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAlicloudZonesDefault.overrideLogicalId("default");
    /*In most cases loops should be handled in the programming language context and 
    not inside of the Terraform context. If you are looping over something external, e.g. a variable or a file input
    you should consider using a for loop. If you are looping over something only known to Terraform, e.g. a result of a data source
    you need to keep this like it is.*/
    const alicloudVpcDefaultCount = cdktf.TerraformCount.of(
      cdktf.Token.asNumber(
        cdktf.conditional(
          cdktf.Op.gt(cdktf.Fn.lengthOf(dataAlicloudVpcsDefault.ids), 0),
          0,
          1
        )
      )
    );
    const alicloudVpcDefault = new alicloud.vpc.Vpc(this, "default_2", {
      count: alicloudVpcDefaultCount,
    });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudVpcDefault.overrideLogicalId("default");
    const dataAlicloudVswitchesDefault =
      new alicloud.dataAlicloudVswitches.DataAlicloudVswitches(
        this,
        "default_3",
        {
          vpcId: cdktf.Token.asString(
            cdktf.conditional(
              cdktf.Op.gt(cdktf.Fn.lengthOf(dataAlicloudVpcsDefault.ids), 0),
              cdktf.propertyAccess(dataAlicloudVpcsDefault.ids, ["0"]),
              cdktf.propertyAccess(alicloudVpcDefault, ["0", "id"])
            )
          ),
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAlicloudVswitchesDefault.overrideLogicalId("default");
    /*In most cases loops should be handled in the programming language context and 
    not inside of the Terraform context. If you are looping over something external, e.g. a variable or a file input
    you should consider using a for loop. If you are looping over something only known to Terraform, e.g. a result of a data source
    you need to keep this like it is.*/
    const alicloudVswitchDefaultCount = cdktf.TerraformCount.of(
      cdktf.Token.asNumber(
        cdktf.conditional(
          cdktf.Op.gt(cdktf.Fn.lengthOf(dataAlicloudVswitchesDefault.ids), 0),
          0,
          1
        )
      )
    );
    const alicloudVswitchDefault = new alicloud.vswitch.Vswitch(
      this,
      "default_4",
      {
        cidrBlock: cdktf.Fn.cidrsubnet(
          cdktf.Token.asString(
            cdktf.propertyAccess(dataAlicloudVpcsDefault.vpcs, [
              "0",
              "cidr_block",
            ])
          ),
          8,
          2
        ),
        vpcId: cdktf.Token.asString(
          cdktf.conditional(
            cdktf.Op.gt(cdktf.Fn.lengthOf(dataAlicloudVpcsDefault.ids), 0),
            cdktf.propertyAccess(dataAlicloudVpcsDefault.ids, ["0"]),
            cdktf.propertyAccess(alicloudVpcDefault, ["0", "id"])
          )
        ),
        zoneId: cdktf.Token.asString(
          cdktf.propertyAccess(dataAlicloudZonesDefault.zones, ["0", "id"])
        ),
        count: alicloudVswitchDefaultCount,
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudVswitchDefault.overrideLogicalId("default");
    const alicloudServiceMeshServiceMeshDefault =
      new alicloud.serviceMeshServiceMesh.ServiceMeshServiceMesh(
        this,
        "default_5",
        {
          network: {
            vpcId: cdktf.Token.asString(
              cdktf.conditional(
                cdktf.Op.gt(cdktf.Fn.lengthOf(dataAlicloudVpcsDefault.ids), 0),
                cdktf.propertyAccess(dataAlicloudVpcsDefault.ids, ["0"]),
                cdktf.propertyAccess(alicloudVpcDefault, ["0", "id"])
              )
            ),
            vswitcheList: [
              cdktf.Token.asString(
                cdktf.conditional(
                  cdktf.Op.gt(
                    cdktf.Fn.lengthOf(dataAlicloudVswitchesDefault.ids),
                    0
                  ),
                  cdktf.propertyAccess(dataAlicloudVswitchesDefault.ids, ["0"]),
                  cdktf.propertyAccess(alicloudVswitchDefault, ["0", "id"])
                )
              ),
            ],
          },
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudServiceMeshServiceMeshDefault.overrideLogicalId("default");
    const alicloudServiceMeshExtensionProviderDefault =
      new alicloud.serviceMeshExtensionProvider.ServiceMeshExtensionProvider(
        this,
        "default_6",
        {
          config:
            '{\\"headersToDownstreamOnDeny\\":[\\"content-type\\",\\"set-cookie\\"],\\"headersToUpstreamOnAllow\\":[\\"authorization\\",\\"cookie\\",\\"path\\",\\"x-auth-request-access-token\\",\\"x-forwarded-access-token\\"],\\"includeRequestHeadersInCheck\\":[\\"cookie\\",\\"x-forward-access-token\\"],\\"oidc\\":{\\"clientID\\":\\"qweqweqwewqeqwe\\",\\"clientSecret\\":\\"asdasdasdasdsadas\\",\\"cookieExpire\\":\\"1000\\",\\"cookieRefresh\\":\\"500\\",\\"cookieSecret\\":\\"scxzcxzcxzcxzcxz\\",\\"issuerURI\\":\\"qweqwewqeqweqweqwe\\",\\"redirectDomain\\":\\"www.alicloud-provider.cn\\",\\"redirectProtocol\\":\\"http\\",\\"scopes\\":[\\"profile\\"]},\\"port\\":4180,\\"service\\":\\"asm-oauth2proxy-httpextauth-tf-example.istio-system.svc.cluster.local\\",\\"timeout\\":\\"10s\\"}',
          extensionProviderName: "httpextauth-tf-example",
          serviceMeshId: cdktf.Token.asString(
            alicloudServiceMeshServiceMeshDefault.id
          ),
          type: "httpextauth",
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudServiceMeshExtensionProviderDefault.overrideLogicalId("default");
  }
}

```

## Argument Reference

The following arguments are supported:

* `serviceMeshId` - (Required, ForceNew) The ID of the Service Mesh.
* `extensionProviderName` - (Required, ForceNew) The name of the Service Mesh Extension Provider. It must be prefixed with `$type`, for example `httpextauthXxx`, `grpcextauthXxx`.
* `type` - (Required, ForceNew) The type of the Service Mesh Extension Provider. Valid values: `httpextauth`, `grpcextauth`.
* `config` - (Required) The config of the Service Mesh Extension Provider. The `config` format is json.

## Attributes Reference

The following attributes are exported:

* `id` - The resource ID in terraform of Extension Provider. The value formats as `<service_mesh_id>:<type>:<extension_provider_name>`.

### Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/docs/configuration-0-11/resources.html#timeouts) for certain actions:

* `create` - (Defaults to 3 mins) Used when create the Extension Provider.
* `update` - (Defaults to 3 mins) Used when update the Extension Provider.
* `delete` - (Defaults to 3 mins) Used when delete the Extension Provider.

## Import

Service Mesh Extension Provider can be imported using the id, e.g.

```shell
$ terraform import alicloud_service_mesh_extension_provider.example <service_mesh_id>:<type>:<extension_provider_name>
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-e37493c0916cbc766fca446fb9e4f322997c8b6eddef3f8fb507aace329bd072 -->