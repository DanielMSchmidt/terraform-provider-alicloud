---
subcategory: "RDS"
layout: "alicloud"
page_title: "Alicloud: alicloud_db_database"
sidebar_current: "docs-alicloud-resource-db-database"
description: |-
  Provides an RDS database resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_db\_database

Provides an RDS database resource. A DB database deployed in a DB instance. A DB instance can own multiple databases.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    /*Terraform Variables are not always the best fit for getting inputs in the context of Terraform CDK.
    You can read more about this at https://cdk.tf/variables*/
    const creation = new cdktf.TerraformVariable(this, "creation", {
      default: "Rds",
    });
    const name = new cdktf.TerraformVariable(this, "name", {
      default: "dbdatabasebasic",
    });
    const alicloudVpcDefault = new alicloud.vpc.Vpc(this, "default", {
      cidrBlock: "172.16.0.0/16",
      name: name.stringValue,
    });
    const dataAlicloudZonesDefault =
      new alicloud.dataAlicloudZones.DataAlicloudZones(this, "default_3", {
        availableResourceCreation: creation.stringValue,
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAlicloudZonesDefault.overrideLogicalId("default");
    const alicloudVswitchDefault = new alicloud.vswitch.Vswitch(
      this,
      "default_4",
      {
        cidrBlock: "172.16.0.0/24",
        vpcId: cdktf.Token.asString(alicloudVpcDefault.id),
        vswitchName: name.stringValue,
        zoneId: cdktf.Token.asString(
          cdktf.propertyAccess(dataAlicloudZonesDefault.zones, ["0", "id"])
        ),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudVswitchDefault.overrideLogicalId("default");
    const alicloudDbInstanceInstance = new alicloud.dbInstance.DbInstance(
      this,
      "instance",
      {
        engine: "MySQL",
        engineVersion: "5.6",
        instanceName: name.stringValue,
        instanceStorage: cdktf.Token.asNumber("10"),
        instanceType: "rds.mysql.s1.small",
        vswitchId: cdktf.Token.asString(alicloudVswitchDefault.id),
      }
    );
    const alicloudDbDatabaseDefault = new alicloud.dbDatabase.DbDatabase(
      this,
      "default_6",
      {
        instanceId: cdktf.Token.asString(alicloudDbInstanceInstance.id),
        name: "tftestdatabase",
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudDbDatabaseDefault.overrideLogicalId("default");
  }
}

```

## Argument Reference

The following arguments are supported:

* `instanceId` - (Required, ForceNew) The Id of instance that can run database.
* `name` - (Required, ForceNew) Name of the database requiring a uniqueness check. It may consist of lower case letters, numbers, and underlines, and must start with a letter
                      and have no more than 64 characters.
* `characterSet` - (Optional, ForceNew) Character set. The value range is limited to the following:
    - MySQL: [ utf8, gbk, latin1, utf8mb4 ] \(`utf8Mb4` only supports versions 5.5 and 5.6\).
    - SQLServer: [ Chinese_PRC_CI_AS, Chinese_PRC_CS_AS, SQL_Latin1_General_CP1_CI_AS, SQL_Latin1_General_CP1_CS_AS, Chinese_PRC_BIN ]
    - PostgreSQL: Valid values for PostgreSQL databases: a value in the `character set,<Collate>,<Ctype>` format. Example: `utf8,c,enUsUtf8`.
    > - Valid values for the character set : [ KOI8U, UTF8, WIN866, WIN874, WIN1250, WIN1251, WIN1252, WIN1253, WIN1254, WIN1255, WIN1256, WIN1257, WIN1258, EUC_CN, EUC_KR, EUC_TW, EUC_JP, EUC_JIS_2004, KOI8R, MULE_INTERNAL, LATIN1, LATIN2, LATIN3, LATIN4, LATIN5, LATIN6, LATIN7, LATIN8, LATIN9, LATIN10, ISO_8859_5, ISO_8859_6, ISO_8859_7, ISO_8859_8, SQL_ASCII ]
    > - Valid values for the Collate field: You can execute the `SELECT DISTINCT collname FROM pg_collation;` statement to obtain the field value. The default value is `c`.
    > - Valid values for the Ctype field: You can execute the `SELECT DISTINCT collctype FROM pg_collation;` statement to obtain the field value. The default value is `enUsUtf8`.
    - MariaDB: [ utf8, gbk, latin1, utf8mb4 ]
  
   More details refer to [API Docs](https://www.alibabacloud.com/help/zh/doc-detail/26258.htm)

* `description` - (Optional) Database description. It cannot begin with https://. It must start with a Chinese character or English letter. It can include Chinese and English characters, underlines (_), hyphens (-), and numbers. The length may be 2-256 characters.

-> **NOTE:** The value of "name" or "character_set"  does not support modification.


## Attributes Reference

The following attributes are exported:

* `id` - The current database resource ID. Composed of instance ID and database name with format `<instance_id>:<name>`.

## Import

RDS database can be imported using the id, e.g.

```shell
$ terraform import alicloud_db_database.example "rm-12345:tf_database"
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-e054c92b3027f847bf949db5b2f9bfdfd40c3dbb6ec38ea20fdac8a1bf0e796b -->