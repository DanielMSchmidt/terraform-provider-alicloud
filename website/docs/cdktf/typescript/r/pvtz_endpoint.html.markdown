---
subcategory: "Private Zone"
layout: "alicloud"
page_title: "Alicloud: alicloud_pvtz_endpoint"
sidebar_current: "docs-alicloud-resource-pvtz-endpoint"
description: |-
  Provides a Alicloud Private Zone Endpoint resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_pvtz\_endpoint

Provides a Private Zone Endpoint resource.

For information about Private Zone Endpoint and how to use it, see [What is Endpoint](https://www.alibabacloud.com/help/en/doc-detail/64611.htm).

-> **NOTE:** Available in v1.143.0+.


## Example Usage

Basic Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    /*Terraform Variables are not always the best fit for getting inputs in the context of Terraform CDK.
    You can read more about this at https://cdk.tf/variables*/
    const name = new cdktf.TerraformVariable(this, "name", {
      default: "example_name",
    });
    const alicloudVpcDefault = new alicloud.vpc.Vpc(this, "default", {
      cidrBlock: "172.16.0.0/12",
      vpcName: name.stringValue,
    });
    const dataAlicloudPvtzResolverZonesDefault =
      new alicloud.dataAlicloudPvtzResolverZones.DataAlicloudPvtzResolverZones(
        this,
        "default_2",
        {
          status: "NORMAL",
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAlicloudPvtzResolverZonesDefault.overrideLogicalId("default");
    const alicloudSecurityGroupDefault =
      new alicloud.securityGroup.SecurityGroup(this, "default_3", {
        name: name.stringValue,
        vpcId: cdktf.Token.asString(alicloudVpcDefault.id),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudSecurityGroupDefault.overrideLogicalId("default");
    /*In most cases loops should be handled in the programming language context and 
    not inside of the Terraform context. If you are looping over something external, e.g. a variable or a file input
    you should consider using a for loop. If you are looping over something only known to Terraform, e.g. a result of a data source
    you need to keep this like it is.*/
    const alicloudVswitchDefaultCount = cdktf.TerraformCount.of(
      cdktf.Token.asNumber("2")
    );
    const alicloudVswitchDefault = new alicloud.vswitch.Vswitch(
      this,
      "default_4",
      {
        cidrBlock: cdktf.Fn.cidrsubnet(
          cdktf.Token.asString(alicloudVpcDefault.cidrBlock),
          8,
          cdktf.Token.asNumber(alicloudVswitchDefaultCount.index)
        ),
        vpcId: cdktf.Token.asString(alicloudVpcDefault.id),
        zoneId: cdktf.Token.asString(
          cdktf.propertyAccess(
            cdktf.propertyAccess(dataAlicloudPvtzResolverZonesDefault.zones, [
              alicloudVswitchDefaultCount.index,
            ]),
            ["zone_id"]
          )
        ),
        count: alicloudVswitchDefaultCount,
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudVswitchDefault.overrideLogicalId("default");
    const alicloudPvtzEndpointDefault = new alicloud.pvtzEndpoint.PvtzEndpoint(
      this,
      "default_5",
      {
        endpointName: name.stringValue,
        ipConfigs: [
          {
            cidrBlock: cdktf.Token.asString(
              cdktf.propertyAccess(alicloudVswitchDefault, ["0", "cidr_block"])
            ),
            vswitchId: cdktf.Token.asString(
              cdktf.propertyAccess(alicloudVswitchDefault, ["0", "id"])
            ),
            zoneId: cdktf.Token.asString(
              cdktf.propertyAccess(alicloudVswitchDefault, ["0", "zone_id"])
            ),
          },
          {
            cidrBlock: cdktf.Token.asString(
              cdktf.propertyAccess(alicloudVswitchDefault, ["1", "cidr_block"])
            ),
            vswitchId: cdktf.Token.asString(
              cdktf.propertyAccess(alicloudVswitchDefault, ["1", "id"])
            ),
            zoneId: cdktf.Token.asString(
              cdktf.propertyAccess(alicloudVswitchDefault, ["1", "zone_id"])
            ),
          },
        ],
        securityGroupId: cdktf.Token.asString(alicloudSecurityGroupDefault.id),
        vpcId: cdktf.Token.asString(alicloudVpcDefault.id),
        vpcRegionId: "vpc_region_id",
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudPvtzEndpointDefault.overrideLogicalId("default");
  }
}

```

## Argument Reference

The following arguments are supported:

* `endpointName` - (Required) The name of the resource.
* `ipConfigs` - (Required) The Ip Configs. See the following `Block ip_configs`. **NOTE:** In order to ensure high availability, add at least 2 and up to 6.
* `securityGroupId` - (Required, ForceNew) The ID of the Security Group.
* `vpcId` - (Required, ForceNew) The VPC ID.
* `vpcRegionId` - (Required, ForceNew) The Region of the VPC.

#### Block ip_configs

The ip_configs supports the following: 

* `cidrBlock` - (Required) The Subnet mask.
* `ip` - (Optional, Computed) The IP address within the parameter range of the subnet mask.  It is recommended to use the IP address assigned by the system.
* `vswitchId` - (Required) The Vswitch id.
* `zoneId` - (Required) The Zone ID.


## Attributes Reference

The following attributes are exported:

* `id` - The resource ID in terraform of Endpoint.
* `status` - The status of the resource. Valid values: `changeFailed`, `changeInit`, `exception`, `failed`, `init`, `success`.

### Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/docs/configuration-0-11/resources.html#timeouts) for certain actions:

* `create` - (Defaults to 10 mins) Used when create the Endpoint.
* `update` - (Defaults to 10 mins) Used when update the Endpoint.

## Import

Private Zone Endpoint can be imported using the id, e.g.

```shell
$ terraform import alicloud_pvtz_endpoint.example <id>
```
<!-- cache-key: cdktf-0.17.0-pre.15 input-e5cc471436999690c1b184a0ce074ca984b4849abe32445bfee8d08f7c948288 -->