---
subcategory: "Elastic Container Instance (ECI)"
layout: "alicloud"
page_title: "Alicloud: alicloud_eci_virtual_node"
sidebar_current: "docs-alicloud-resource-eci-virtual-node"
description: |- 
  Provides a Alicloud ECI Virtual Node resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_eci\_virtual\_node

Provides a ECI Virtual Node resource.

For information about ECI Virtual Node and how to use it, see [What is Virtual Node](https://www.alibabacloud.com/help/en/doc-detail/89129.html).

-> **NOTE:** Available in v1.145.0+.

## Example Usage

Basic Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    /*Terraform Variables are not always the best fit for getting inputs in the context of Terraform CDK.
    You can read more about this at https://cdk.tf/variables*/
    const name = new cdktf.TerraformVariable(this, "name", {
      default: "tf-testaccvirtualnode",
    });
    const alicloudEipAddressDefault = new alicloud.eipAddress.EipAddress(
      this,
      "default",
      {
        addressName: name.stringValue,
      }
    );
    const dataAlicloudEciZonesDefault =
      new alicloud.dataAlicloudEciZones.DataAlicloudEciZones(
        this,
        "default_2",
        {}
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAlicloudEciZonesDefault.overrideLogicalId("default");
    const dataAlicloudResourceManagerResourceGroupsDefault =
      new alicloud.dataAlicloudResourceManagerResourceGroups.DataAlicloudResourceManagerResourceGroups(
        this,
        "default_3",
        {}
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAlicloudResourceManagerResourceGroupsDefault.overrideLogicalId(
      "default"
    );
    const dataAlicloudVpcsDefault =
      new alicloud.dataAlicloudVpcs.DataAlicloudVpcs(this, "default_4", {
        nameRegex: "default-NODELETING",
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAlicloudVpcsDefault.overrideLogicalId("default");
    const dataAlicloudVswitchesDefault =
      new alicloud.dataAlicloudVswitches.DataAlicloudVswitches(
        this,
        "default_5",
        {
          vpcId: cdktf.Token.asString(
            cdktf.propertyAccess(dataAlicloudVpcsDefault.ids, ["0"])
          ),
          zoneId: cdktf.Token.asString(
            cdktf.propertyAccess(dataAlicloudEciZonesDefault.zones, [
              "0",
              "zone_ids",
              "1",
            ])
          ),
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAlicloudVswitchesDefault.overrideLogicalId("default");
    const alicloudSecurityGroupDefault =
      new alicloud.securityGroup.SecurityGroup(this, "default_6", {
        name: name.stringValue,
        vpcId: cdktf.Token.asString(
          cdktf.propertyAccess(dataAlicloudVpcsDefault.ids, ["0"])
        ),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudSecurityGroupDefault.overrideLogicalId("default");
    const alicloudEciVirtualNodeDefault =
      new alicloud.eciVirtualNode.EciVirtualNode(this, "default_7", {
        eipInstanceId: cdktf.Token.asString(alicloudEipAddressDefault.id),
        enablePublicNetwork: false,
        kubeConfig: "kube config",
        resourceGroupId: cdktf.Token.asString(
          cdktf.propertyAccess(
            dataAlicloudResourceManagerResourceGroupsDefault.groups,
            ["0", "id"]
          )
        ),
        securityGroupId: cdktf.Token.asString(alicloudSecurityGroupDefault.id),
        tags: {
          Created: "TF",
        },
        taints: [
          {
            effect: "NoSchedule",
            key: "Tf1",
            value: "Test1",
          },
        ],
        virtualNodeName: name.stringValue,
        vswitchId: cdktf.Token.asString(
          cdktf.propertyAccess(dataAlicloudVswitchesDefault.ids, ["1"])
        ),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudEciVirtualNodeDefault.overrideLogicalId("default");
  }
}

```

## Argument Reference

The following arguments are supported:

* `eipInstanceId` - (Optional, Computed,ForceNew) The Id of eip.
* `enablePublicNetwork` - (Optional, ForceNew) Whether to enable public network. **NOTE:** If `eipInstanceId` is not configured and `enablePublicNetwork` is true, the system will create an elastic public network IP.
* `kubeConfig` - (Optional) The kube config for the k8s cluster. It needs to be connected after Base64 encoding.
* `resourceGroupId` - (Optional, ForceNew) The resource group ID. 
* `securityGroupId` - (Required, ForceNew) The security group ID.
* `tags` - (Optional, ForceNew) A mapping of tags to assign to the resource.
* `taints` - (Optional) The taint. See the following `Block taints`.
* `virtualNodeName` - (Optional, ForceNew) The name of the virtual node. The length of the name is limited to `2` to `128` characters. It can contain uppercase and lowercase letters, Chinese characters, numbers, half-width colon (:), underscores (_), or hyphens (-), and must start with letters.
* `vswitchId` - (Required, ForceNew) The vswitch id.
* `zoneId` - (Optional, Computed, ForceNew) The Zone.

#### Block taints

The taints supports the following:

* `effect` - (Optional) The effect of the taint. Valid values: `noSchedule`, `noExecute` and `preferNoSchedule`.
* `key` - (Optional) The key of the taint.
* `value` - (Optional) The value of the taint.

## Attributes Reference

The following attributes are exported:

* `id` - The resource ID in terraform of Virtual Node.
* `status` - The Status of the virtual node. Valid values: `cleaned`, `failed`, `pending`, `ready`.

### Timeouts

The `timeouts` block allows you to
specify [timeouts](https://www.terraform.io/docs/configuration-0-11/resources.html#timeouts) for certain actions:

* `create` - (Defaults to 5 mins) Used when create the Gateway File Share.

## Import

ECI Virtual Node can be imported using the id, e.g.

```shell
$ terraform import alicloud_eci_virtual_node.example <id>
```
<!-- cache-key: cdktf-0.17.0-pre.15 input-4e5b5e02060ef2ed9bdbfca9227375e4f3a4b8f95f7d9974f93961c129a20fc3 -->