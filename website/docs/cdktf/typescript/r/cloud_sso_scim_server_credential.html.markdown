---
subcategory: "Cloud SSO"
layout: "alicloud"
page_title: "Alicloud: alicloud_cloud_sso_scim_server_credential"
sidebar_current: "docs-alicloud-resource-cloud-sso-scim-server-credential"
description: |-
  Provides a Alicloud Cloud SSO SCIM Server Credential resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_cloud\_sso\_scim\_server\_credential

Provides a Cloud SSO SCIM Server Credential resource.

For information about Cloud SSO SCIM Server Credential and how to use it, see [What is Cloud SSO SCIM Server Credential](https://www.alibabacloud.com/help/doc-detail/264937.html).

-> **NOTE:** Available in v1.138.0+.

-> **NOTE:** Cloud SSO Only Support `cnShanghai` And `usWest1` Region


## Example Usage

Basic Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    /*Terraform Variables are not always the best fit for getting inputs in the context of Terraform CDK.
    You can read more about this at https://cdk.tf/variables*/
    const name = new cdktf.TerraformVariable(this, "name", {
      default: "example-value",
    });
    const dataAlicloudCloudSsoDirectoriesDefault =
      new alicloud.dataAlicloudCloudSsoDirectories.DataAlicloudCloudSsoDirectories(
        this,
        "default",
        {}
      );
    /*In most cases loops should be handled in the programming language context and 
    not inside of the Terraform context. If you are looping over something external, e.g. a variable or a file input
    you should consider using a for loop. If you are looping over something only known to Terraform, e.g. a result of a data source
    you need to keep this like it is.*/
    const alicloudCloudSsoDirectoryDefaultCount = cdktf.TerraformCount.of(
      cdktf.Token.asNumber(
        cdktf.conditional(
          cdktf.Op.gt(
            cdktf.Fn.lengthOf(dataAlicloudCloudSsoDirectoriesDefault.ids),
            0
          ),
          0,
          1
        )
      )
    );
    const alicloudCloudSsoDirectoryDefault =
      new alicloud.cloudSsoDirectory.CloudSsoDirectory(this, "default_2", {
        directoryName: name.stringValue,
        count: alicloudCloudSsoDirectoryDefaultCount,
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudCloudSsoDirectoryDefault.overrideLogicalId("default");
    const alicloudCloudSsoScimServerCredentialDefault =
      new alicloud.cloudSsoScimServerCredential.CloudSsoScimServerCredential(
        this,
        "default_3",
        {
          directoryId: cdktf.Token.asString(
            cdktf.conditional(
              cdktf.Op.gt(
                cdktf.Fn.lengthOf(dataAlicloudCloudSsoDirectoriesDefault.ids),
                0
              ),
              cdktf.propertyAccess(dataAlicloudCloudSsoDirectoriesDefault.ids, [
                "0",
              ]),
              cdktf.propertyAccess(
                cdktf.Fn.concat([
                  cdktf.propertyAccess(alicloudCloudSsoDirectoryDefault, [
                    "*",
                    "id",
                  ]),
                  [""],
                ]),
                ["0"]
              )
            )
          ),
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudCloudSsoScimServerCredentialDefault.overrideLogicalId("default");
  }
}

```

## Argument Reference

The following arguments are supported:

* `directoryId` - (Required, ForceNew) The ID of the Directory.
* `status` - (Optional, Computed) The Status of the resource. Valid values: `disabled`, `enabled`.

## Attributes Reference

The following attributes are exported:

* `id` - The resource ID of SCIM Server Credential. The value formats as `<directory_id>:<credential_id>`.
* `credentialId` - The CredentialId of the resource.

## Import

Cloud SSO SCIM Server Credential can be imported using the id, e.g.

```shell
$ terraform import alicloud_cloud_sso_scim_server_credential.example <directory_id>:<credential_id>
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-408b9cb86868d342f97f362ab1a66f0a9937203bc4b0b912233ea8da40851b8f -->