---
subcategory: "Cloud SSO"
layout: "alicloud"
page_title: "Alicloud: alicloud_cloud_sso_access_assignment"
sidebar_current: "docs-alicloud-resource-cloud-sso-access-assignment"
description: |-
  Provides a Alicloud Cloud SSO Access Assignment resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_cloud\_sso\_access\_assignment

Provides a Cloud SSO Access Assignment resource.

For information about Cloud SSO Access Assignment and how to use it, see [What is Access Assignment](https://www.alibabacloud.com/help/en/doc-detail/265996.htm).

-> **NOTE:** When you configure access assignment for the first time, access configuration will be automatically deployed.

-> **NOTE:** Available in v1.145.0+.

-> **NOTE:** Cloud SSO Only Support `cnShanghai` And `usWest1` Region

## Example Usage

Basic Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    /*Terraform Variables are not always the best fit for getting inputs in the context of Terraform CDK.
    You can read more about this at https://cdk.tf/variables*/
    const name = new cdktf.TerraformVariable(this, "name", {
      default: "example-name",
    });
    const dataAlicloudCloudSsoDirectoriesDefault =
      new alicloud.dataAlicloudCloudSsoDirectories.DataAlicloudCloudSsoDirectories(
        this,
        "default",
        {}
      );
    const dataAlicloudResourceManagerResourceDirectoriesDefault =
      new alicloud.dataAlicloudResourceManagerResourceDirectories.DataAlicloudResourceManagerResourceDirectories(
        this,
        "default_2",
        {}
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAlicloudResourceManagerResourceDirectoriesDefault.overrideLogicalId(
      "default"
    );
    /*In most cases loops should be handled in the programming language context and 
    not inside of the Terraform context. If you are looping over something external, e.g. a variable or a file input
    you should consider using a for loop. If you are looping over something only known to Terraform, e.g. a result of a data source
    you need to keep this like it is.*/
    const alicloudCloudSsoDirectoryDefaultCount = cdktf.TerraformCount.of(
      cdktf.Token.asNumber(
        cdktf.conditional(
          cdktf.Op.gt(
            cdktf.Fn.lengthOf(dataAlicloudCloudSsoDirectoriesDefault.ids),
            0
          ),
          0,
          1
        )
      )
    );
    const alicloudCloudSsoDirectoryDefault =
      new alicloud.cloudSsoDirectory.CloudSsoDirectory(this, "default_3", {
        directoryName: name.stringValue,
        count: alicloudCloudSsoDirectoryDefaultCount,
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudCloudSsoDirectoryDefault.overrideLogicalId("default");
    const alicloudCloudSsoUserDefault = new alicloud.cloudSsoUser.CloudSsoUser(
      this,
      "default_4",
      {
        directoryId: cdktf.Token.asString(
          cdktf.conditional(
            cdktf.Op.gt(
              cdktf.Fn.lengthOf(dataAlicloudCloudSsoDirectoriesDefault.ids),
              0
            ),
            cdktf.propertyAccess(dataAlicloudCloudSsoDirectoriesDefault.ids, [
              "0",
            ]),
            cdktf.propertyAccess(
              cdktf.Fn.concat([
                cdktf.propertyAccess(
                  cdktf.propertyAccess(alicloudCloudSsoDirectoryDefault, [
                    "*",
                    "id",
                  ]),
                  ['""']
                ),
              ]),
              ["0"]
            )
          )
        ),
        userName: name.stringValue,
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudCloudSsoUserDefault.overrideLogicalId("default");
    const alicloudCloudSsoAccessConfigurationDefault =
      new alicloud.cloudSsoAccessConfiguration.CloudSsoAccessConfiguration(
        this,
        "default_5",
        {
          accessConfigurationName: name.stringValue,
          directoryId: cdktf.Token.asString(
            cdktf.conditional(
              cdktf.Op.gt(
                cdktf.Fn.lengthOf(dataAlicloudCloudSsoDirectoriesDefault.ids),
                0
              ),
              cdktf.propertyAccess(dataAlicloudCloudSsoDirectoriesDefault.ids, [
                "0",
              ]),
              cdktf.propertyAccess(
                cdktf.Fn.concat([
                  cdktf.propertyAccess(
                    cdktf.propertyAccess(alicloudCloudSsoDirectoryDefault, [
                      "*",
                      "id",
                    ]),
                    ['""']
                  ),
                ]),
                ["0"]
              )
            )
          ),
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudCloudSsoAccessConfigurationDefault.overrideLogicalId("default");
    const alicloudCloudSsoAccessConfigurationProvisioningDefault =
      new alicloud.cloudSsoAccessConfigurationProvisioning.CloudSsoAccessConfigurationProvisioning(
        this,
        "default_6",
        {
          accessConfigurationId: cdktf.Token.asString(
            alicloudCloudSsoAccessConfigurationDefault.accessConfigurationId
          ),
          directoryId: cdktf.Token.asString(
            cdktf.conditional(
              cdktf.Op.gt(
                cdktf.Fn.lengthOf(dataAlicloudCloudSsoDirectoriesDefault.ids),
                0
              ),
              cdktf.propertyAccess(dataAlicloudCloudSsoDirectoriesDefault.ids, [
                "0",
              ]),
              cdktf.propertyAccess(
                cdktf.Fn.concat([
                  cdktf.propertyAccess(
                    cdktf.propertyAccess(alicloudCloudSsoDirectoryDefault, [
                      "*",
                      "id",
                    ]),
                    ['""']
                  ),
                ]),
                ["0"]
              )
            )
          ),
          targetId: cdktf.Token.asString(
            cdktf.propertyAccess(
              dataAlicloudResourceManagerResourceDirectoriesDefault.directories,
              ["0", "master_account_id"]
            )
          ),
          targetType: "RD-Account",
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudCloudSsoAccessConfigurationProvisioningDefault.overrideLogicalId(
      "default"
    );
    const alicloudCloudSsoAccessAssignmentDefault =
      new alicloud.cloudSsoAccessAssignment.CloudSsoAccessAssignment(
        this,
        "default_7",
        {
          accessConfigurationId: cdktf.Token.asString(
            alicloudCloudSsoAccessConfigurationDefault.accessConfigurationId
          ),
          dependsOn: [alicloudCloudSsoAccessConfigurationProvisioningDefault],
          deprovisionStrategy: "DeprovisionForLastAccessAssignmentOnAccount",
          directoryId: cdktf.Token.asString(
            cdktf.conditional(
              cdktf.Op.gt(
                cdktf.Fn.lengthOf(dataAlicloudCloudSsoDirectoriesDefault.ids),
                0
              ),
              cdktf.propertyAccess(dataAlicloudCloudSsoDirectoriesDefault.ids, [
                "0",
              ]),
              cdktf.propertyAccess(
                cdktf.Fn.concat([
                  cdktf.propertyAccess(
                    cdktf.propertyAccess(alicloudCloudSsoDirectoryDefault, [
                      "*",
                      "id",
                    ]),
                    ['""']
                  ),
                ]),
                ["0"]
              )
            )
          ),
          principalId: cdktf.Token.asString(alicloudCloudSsoUserDefault.userId),
          principalType: "User",
          targetId: cdktf.Token.asString(
            cdktf.propertyAccess(
              dataAlicloudResourceManagerResourceDirectoriesDefault.directories,
              ["0", "master_account_id"]
            )
          ),
          targetType: "RD-Account",
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudCloudSsoAccessAssignmentDefault.overrideLogicalId("default");
  }
}

```

## Argument Reference

The following arguments are supported:

* `accessConfigurationId` - (Required, ForceNew) The Access configuration ID.
* `deprovisionStrategy` - (Optional) The deprovision strategy. Valid values: `deprovisionForLastAccessAssignmentOnAccount` and `none`. Default Value: `deprovisionForLastAccessAssignmentOnAccount`. **NOTE:** When `deprovisionStrategy` is `deprovisionForLastAccessAssignmentOnAccount`, and the access assignment to be deleted is the last access assignment for the same account and the same AC, this option is used for the undeployment operationã€‚
* `directoryId` - (Required, ForceNew) The ID of the Directory.
* `principalId` - (Required, ForceNew)The ID of the access assignment.
* `principalType` - (Required, ForceNew) The identity type of the access assignment, which can be a user or a user group. Valid values: `group`, `user`.
* `targetId` - (Required, ForceNew) The ID of the target to create the resource range.
* `targetType` - (Required, ForceNew) The type of the resource range target to be accessed. Valid values: `rdAccount`.

## Attributes Reference

The following attributes are exported:

* `id` - The resource ID of Access Assignment. The value formats as `<directory_id>:<access_configuration_id>:<target_type>:<target_id>:<principal_type>:<principal_id>`. 

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/docs/configuration-0-11/resources.html#timeouts) for certain actions:

* `create` - (Defaults to 5 mins) Used when create the Cloud SSO Access Assignment.
* `delete` - (Defaults to 5 mins) Used when delete the Cloud SSO Access Assignment.

## Import

Cloud SSO Access Assignment can be imported using the id, e.g.

```shell
$ terraform import alicloud_cloud_sso_access_assignment.example <directory_id>:<access_configuration_id>:<target_type>:<target_id>:<principal_type>:<principal_id>
```


<!-- cache-key: cdktf-0.17.0-pre.15 input-3e4b4a70bc4fb58bad7c376d7ab38056cdcfba8a5d0a0274a7e03e9ac5b01b05 -->