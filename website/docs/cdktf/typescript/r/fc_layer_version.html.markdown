---
subcategory: "Function Compute Service (FC)"
layout: "alicloud"
page_title: "Alicloud: alicloud_fc_layer_version"
sidebar_current: "docs-alicloud-resource-fc-layer-version"
description: |-
  Provides a Alicloud FC Layer Version resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_fc\_layer\_version

Provides a Function Compute Layer Version resource.

For information about FC Layer Version and how to use it, see [What is Layer Version](https://www.alibabacloud.com/help/en/icms-test/latest/api-doc-pre-fc-open-2021-04-06-api-doc-createlayerversion).

-> **NOTE:** Available in v1.180.0+.

-> **NOTE: Setting `skipDestroy` to `true` means that the Alicloud Provider will not destroy any layer version, even when running `terraform destroy`. Layer versions are thus intentional dangling resources that are not managed by Terraform and may incur extra expense in your Alicloud account.

## Example Usage

Basic Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    new alicloud.fcLayerVersion.FcLayerVersion(this, "example", {
      compatibleRuntime: ["nodejs12"],
      layerName: "your_layer_name",
      ossBucketName: "your_code_oss_bucket_name",
      ossObjectName: "your_code_oss_object_name",
    });
  }
}

```

## Argument Reference

The following arguments are supported:

* `layerName` - (Required, ForceNew) The name of the layer.
* `description` - (Optional, ForceNew) The description of the layer version.
* `skipDestroy` - (Optional) Whether to retain the old version of a previously deployed Lambda Layer. Default is `false`. When this is not set to `true`, changing any of `compatibleRuntimes`, `description`, `layerName`, `ossBucketName`,  `ossObjectName`, or `zipFile` forces deletion of the existing layer version and creation of a new layer version.
* `compatibleRuntime` - (Required, ForceNew) The list of runtime environments that are supported by the layer. Valid values: `nodejs14`, `nodejs12`, `nodejs10`, `nodejs8`, `nodejs6`, `python39`, `python3`, `python27`, `java11`, `java8`, `php72`, `go1`,`dotnetcore21`, `custom`.
* `ossBucketName` - (Optional, ForceNew) The name of the OSS bucket that stores the ZIP package of the function code.
* `ossObjectName` - (Optional, ForceNew) The name of the OSS object (ZIP package) that contains the function code.
* `zipFile` - (Optional, ForceNew) The ZIP package of the function code that is encoded in the Base64 format.

-> **NOTE:** `zipFile` and `ossBucketName`, `ossObjectName` cannot be used together.

## Attributes Reference

The following attributes are exported:

* `id` - The resource ID of Layer Version. The value formats as `<layer_name>:<version>`.
* `version` - The version of Layer Version.
* `acl` - The access mode of Layer Version.
* `arn` - The arn of Layer Version.
* `codeCheckSum` - The checksum of the layer code package.

### Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/docs/configuration-0-11/resources.html#timeouts) for certain actions:

* `create` - (Defaults to 1 mins) Used when create the FC Layer Version.
* `delete` - (Defaults to 1 mins) Used when delete the FC Layer Version.

## Import

Function Compute Layer Version can be imported using the id, e.g.

```shell
$ terraform import alicloud_fc_layer_version.example my_function
```
<!-- cache-key: cdktf-0.17.0-pre.15 input-10677ae84fe91ffb478a8af4fc4ed43c7dc028dd2815e2ccf9c5f7c628827b0b -->