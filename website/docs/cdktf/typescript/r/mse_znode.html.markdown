---
subcategory: "Microservice Engine (MSE)"
layout: "alicloud"
page_title: "Alicloud: alicloud_mse_znode"
sidebar_current: "docs-alicloud-resource-mse-znode"
description: |-
  Provides a Alicloud Microservice Engine (MSE) Znode resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_mse\_znode

Provides a Microservice Engine (MSE) Znode resource.

For information about Microservice Engine (MSE) Znode and how to use it, see [What is Znode](https://help.aliyun.com/document_detail/393622.html).

-> **NOTE:** Available in v1.162.0+.

## Example Usage

Basic Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const alicloudVpcExample = new alicloud.vpc.Vpc(this, "example", {
      cidrBlock: "172.17.3.0/24",
      vpcName: "terraform-example",
    });
    const dataAlicloudZonesExample =
      new alicloud.dataAlicloudZones.DataAlicloudZones(this, "example_1", {
        availableResourceCreation: "VSwitch",
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAlicloudZonesExample.overrideLogicalId("example");
    const alicloudVswitchExample = new alicloud.vswitch.Vswitch(
      this,
      "example_2",
      {
        cidrBlock: "172.17.3.0/24",
        vpcId: cdktf.Token.asString(alicloudVpcExample.id),
        vswitchName: "terraform-example",
        zoneId: cdktf.Token.asString(
          cdktf.propertyAccess(dataAlicloudZonesExample.zones, ["0", "id"])
        ),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudVswitchExample.overrideLogicalId("example");
    const alicloudMseClusterExample = new alicloud.mseCluster.MseCluster(
      this,
      "example_3",
      {
        aclEntryList: ["127.0.0.1/32"],
        clusterAliasName: "terraform-example",
        clusterSpecification: "MSE_SC_1_2_60_c",
        clusterType: "ZooKeeper",
        clusterVersion: "ZooKeeper_3_8_0",
        instanceCount: 1,
        mseVersion: "mse_dev",
        netType: "privatenet",
        pubNetworkFlow: "1",
        vpcId: cdktf.Token.asString(alicloudVpcExample.id),
        vswitchId: cdktf.Token.asString(alicloudVswitchExample.id),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudMseClusterExample.overrideLogicalId("example");
    const alicloudMseZnodeExample = new alicloud.mseZnode.MseZnode(
      this,
      "example_4",
      {
        clusterId: cdktf.Token.asString(alicloudMseClusterExample.clusterId),
        data: "terraform-example",
        path: "/example",
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudMseZnodeExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

The following arguments are supported:

* `acceptLanguage` - (Optional) The language type of the returned information. Valid values: `zh` or `en`.
* `data` - (Optional) The Node data.
* `clusterId` - (Required, ForceNew) The ID of the Cluster.
* `path` - (Required, ForceNew) The Node path. The value must start with a forward slash (/).

## Attributes Reference

The following attributes are exported:

* `id` - The resource ID of Znode. The value formats as `<cluster_id>:<path>`.

### Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/docs/configuration-0-11/resources.html#timeouts) for certain actions:

* `create` - (Defaults to 1 mins) Used when create the Znode.
* `delete` - (Defaults to 1 mins) Used when delete the Znode.
* `update` - (Defaults to 1 mins) Used when update the Znode.

## Import

Microservice Engine (MSE) Znode can be imported using the id, e.g.

```shell
$ terraform import alicloud_mse_znode.example <cluster_id>:<path>
```
<!-- cache-key: cdktf-0.17.0-pre.15 input-50485ea7a646c4bb2feb5a1f09720cd118ea24efb3282d8c894a3399f3bf3e72 -->