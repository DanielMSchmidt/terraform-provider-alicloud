---
subcategory: "RDS"
layout: "alicloud"
page_title: "Alicloud: alicloud_db_backup_policy"
sidebar_current: "docs-alicloud-resource-db-backup-policy"
description: |-
  Provides an RDS backup policy resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_db\_backup\_policy

Provides an RDS instance backup policy resource and used to configure instance backup policy.

-> **NOTE:** Each DB instance has a backup policy and it will be set default values when destroying the resource.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    /*Terraform Variables are not always the best fit for getting inputs in the context of Terraform CDK.
    You can read more about this at https://cdk.tf/variables*/
    const creation = new cdktf.TerraformVariable(this, "creation", {
      default: "Rds",
    });
    const name = new cdktf.TerraformVariable(this, "name", {
      default: "dbbackuppolicybasic",
    });
    const alicloudVpcDefault = new alicloud.vpc.Vpc(this, "default", {
      cidrBlock: "172.16.0.0/16",
      vpcName: name.stringValue,
    });
    const dataAlicloudZonesDefault =
      new alicloud.dataAlicloudZones.DataAlicloudZones(this, "default_3", {
        availableResourceCreation: creation.stringValue,
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAlicloudZonesDefault.overrideLogicalId("default");
    const alicloudVswitchDefault = new alicloud.vswitch.Vswitch(
      this,
      "default_4",
      {
        cidrBlock: "172.16.0.0/24",
        vpcId: cdktf.Token.asString(alicloudVpcDefault.id),
        vswitchName: name.stringValue,
        zoneId: cdktf.Token.asString(
          cdktf.propertyAccess(dataAlicloudZonesDefault.zones, ["0", "id"])
        ),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudVswitchDefault.overrideLogicalId("default");
    const alicloudDbInstanceInstance = new alicloud.dbInstance.DbInstance(
      this,
      "instance",
      {
        engine: "MySQL",
        engineVersion: "5.6",
        instanceName: name.stringValue,
        instanceStorage: cdktf.Token.asNumber("10"),
        instanceType: "rds.mysql.s1.small",
        vswitchId: cdktf.Token.asString(alicloudVswitchDefault.id),
      }
    );
    new alicloud.dbBackupPolicy.DbBackupPolicy(this, "policy", {
      instanceId: cdktf.Token.asString(alicloudDbInstanceInstance.id),
    });
  }
}

```

## Argument Reference

The following arguments are supported:

* `instanceId` - (Required, ForceNew) The Id of instance that can run database.
* `backupPeriod` - (Deprecated) It has been deprecated from version 1.69.0, and use field 'preferred_backup_period' instead.
* `preferredBackupPeriod` - (Optional, available in 1.69.0+) DB Instance backup period. Please set at least two days to ensure backing up at least twice a week. Valid values: [Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, Sunday].
* `backupTime` - (Deprecated) It has been deprecated from version 1.69.0, and use field 'preferred_backup_time' instead.
* `preferredBackupTime` - (Optional, available in 1.69.0+) DB instance backup time, in the format of HH:mmZ- HH:mmZ. Time setting interval is one hour. Default to "02:00Z-03:00Z". China time is 8 hours behind it.
* `retentionPeriod` - (Deprecated) It has been deprecated from version 1.69.0, and use field 'backup_retention_period' instead.
* `backupRetentionPeriod` - (Optional, available in 1.69.0+) Instance backup retention days. Valid values: [7-730]. Default to 7. But mysql local disk is unlimited.
* `logBackup` - (Deprecated) It has been deprecated from version 1.68.0, and use field 'enable_backup_log' instead.
* `enableBackupLog` - (Optional, available in 1.68.0+) Whether to backup instance log. Valid values are `true`, `false`, Default to `true`. Note: The 'Basic Edition' category Rds instance does not support setting log backup. [What is Basic Edition](https://www.alibabacloud.com/help/doc-detail/48980.htm).
* `logRetentionPeriod` - (Deprecated) It has been deprecated from version 1.69.0, and use field 'log_backup_retention_period' instead.
* `logBackupRetentionPeriod` - (Optional, available in 1.69.0+) Instance log backup retention days. Valid when the `enableBackupLog` is `1`. Valid values: [7-730]. Default to 7. It cannot be larger than `backupRetentionPeriod`.
* `localLogRetentionHours` - (Optional, available in 1.69.0+) Instance log backup local retention hours. Valid when the `enableBackupLog` is `true`. Valid values: [0-7*24].
* `localLogRetentionSpace` - (Optional, available in 1.69.0+) Instance log backup local retention space. Valid when the `enableBackupLog` is `true`. Valid values: [0-50].
* `highSpaceUsageProtection` - (Optional, available in 1.69.0+) Instance high space usage protection policy. Valid when the `enableBackupLog` is `true`. Valid values are `enable`, `disable`.
* `logBackupFrequency` - (Optional, available in 1.69.0+) Instance log backup frequency. Valid when the instance engine is `sqlServer`. Valid values are `logInterval`.
* `compressType` - (Optional, available in 1.69.0+) The compress type of instance policy. Valid values are `1`, `4`, `8`.
* `archiveBackupRetentionPeriod` - (Optional, available in 1.69.0+) Instance archive backup retention days. Valid when the `enableBackupLog` is `true` and instance is mysql local disk. Valid values: [30-1095], and `archiveBackupRetentionPeriod` must larger than `backupRetentionPeriod` 730.
* `archiveBackupKeepCount` - (Optional, available in 1.69.0+) Instance archive backup keep count. Valid when the `enableBackupLog` is `true` and instance is mysql local disk. When `archiveBackupKeepPolicy` is `byMonth` Valid values: [1-31]. When `archiveBackupKeepPolicy` is `byWeek` Valid values: [1-7].
* `archiveBackupKeepPolicy` - (Optional, available in 1.69.0+) Instance archive backup keep policy. Valid when the `enableBackupLog` is `true` and instance is mysql local disk. Valid values are `byMonth`, `byWeek`, `keepAll`.
* `releasedKeepPolicy` - (Optional, available in 1.147.0+) The policy based on which ApsaraDB RDS retains archived backup files if the instance is released. Default value: None. Valid values:
  * **None**: No archived backup files are retained.
  * **Lastest**: Only the most recent archived backup file is retained.
  * **All**: All archived backup files are retained.
* `category` - (Optional, available in 1.190.0+) Whether to enable second level backup.Valid values are `flash`, `standard`, Note:It only takes effect when the BackupPolicyMode parameter is DataBackupPolicy. 
-> **NOTE:** You can configure a backup policy by using this parameter and the PreferredBackupPeriod parameter. For example, if you set the PreferredBackupPeriod parameter to Saturday,Sunday and the BackupInterval parameter to -1, a snapshot backup is performed on every Saturday and Sunday.If the instance runs PostgreSQL, the BackupInterval parameter is supported only when the instance is equipped with standard SSDs or enhanced SSDs (ESSDs).This parameter takes effect only when you set the BackupPolicyMode parameter to DataBackupPolicy.
* `backupInterval` - (Optional, available in 1.194.0+) The frequency at which you want to perform a snapshot backup on the instance. Valid values:
  - -1: No backup frequencies are specified.
  - 30: A snapshot backup is performed once every 30 minutes.
  - 60: A snapshot backup is performed once every 60 minutes.
  - 120: A snapshot backup is performed once every 120 minutes.
  - 240: A snapshot backup is performed once every 240 minutes.
  - 360: A snapshot backup is performed once every 360 minutes.
  - 480: A snapshot backup is performed once every 480 minutes.
  - 720: A snapshot backup is performed once every 720 minutes.

-> **NOTE:** Currently, the SQLServer instance does not support to modify `logBackupRetentionPeriod`.

## Attributes Reference

The following attributes are exported:

* `id` - The current backup policy resource ID. It is same as 'instance_id'.

## Import

RDS backup policy can be imported using the id or instance id, e.g.

```shell
$ terraform import alicloud_db_backup_policy.example "rm-12345678"
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-a0bda3d166a324f7cdbb234ac777ea6ff502296ff3381f1ae37a13b92ae5ac29 -->