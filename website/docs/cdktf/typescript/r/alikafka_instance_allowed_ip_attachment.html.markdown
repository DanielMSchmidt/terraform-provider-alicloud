---
subcategory: "AliKafka"
layout: "alicloud"
page_title: "Alicloud: alicloud_ali_kafka_instance_allowed_ip_attachment"
sidebar_current: "docs-alicloud-resource-alikafka-instance-allowed-ip-attachment"
description: |-
  Provides a Alicloud AliKafka Instance Allowed Ip Attachment resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_alikafka\_instance\_allowed\_ip\_attachment

Provides a AliKafka Instance Allowed Ip Attachment resource.

For information about Ali Kafka Instance Allowed Ip Attachment and how to use it, see [What is Instance Allowed Ip Attachment](https://www.alibabacloud.com/help/en/doc-detail/68151.html).

-> **NOTE:** Available in v1.163.0+.

## Example Usage

Basic Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    /*Terraform Variables are not always the best fit for getting inputs in the context of Terraform CDK.
    You can read more about this at https://cdk.tf/variables*/
    const name = new cdktf.TerraformVariable(this, "name", {
      default: "tftest",
    });
    const dataAlicloudVpcsDefault =
      new alicloud.dataAlicloudVpcs.DataAlicloudVpcs(this, "default", {
        nameRegex: "^default-NODELETING",
      });
    const dataAlicloudVswitchesDefault =
      new alicloud.dataAlicloudVswitches.DataAlicloudVswitches(
        this,
        "default_2",
        {
          vpcId: cdktf.Token.asString(
            cdktf.propertyAccess(dataAlicloudVpcsDefault.ids, ["0"])
          ),
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAlicloudVswitchesDefault.overrideLogicalId("default");
    const alicloudSecurityGroupDefault =
      new alicloud.securityGroup.SecurityGroup(this, "default_3", {
        name: name.stringValue,
        vpcId: cdktf.Token.asString(
          cdktf.propertyAccess(dataAlicloudVpcsDefault.ids, ["0"])
        ),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudSecurityGroupDefault.overrideLogicalId("default");
    const alicloudAlikafkaInstanceDefault =
      new alicloud.alikafkaInstance.AlikafkaInstance(this, "default_4", {
        deployType: 5,
        diskSize: 500,
        diskType: 1,
        ioMax: 20,
        name: name.stringValue,
        partitionNum: 50,
        securityGroup: cdktf.Token.asString(alicloudSecurityGroupDefault.id),
        vswitchId: cdktf.Token.asString(
          cdktf.propertyAccess(dataAlicloudVswitchesDefault.ids, ["0"])
        ),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudAlikafkaInstanceDefault.overrideLogicalId("default");
    const alicloudAlikafkaInstanceAllowedIpAttachmentDefault =
      new alicloud.alikafkaInstanceAllowedIpAttachment.AlikafkaInstanceAllowedIpAttachment(
        this,
        "default_5",
        {
          allowedIp: "114.237.9.78/32",
          allowedType: "vpc",
          instanceId: cdktf.Token.asString(alicloudAlikafkaInstanceDefault.id),
          portRange: "9092/9092",
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudAlikafkaInstanceAllowedIpAttachmentDefault.overrideLogicalId(
      "default"
    );
  }
}

```

## Argument Reference

The following arguments are supported:

* `allowedIp` - (Required, ForceNew) The allowed ip. It can be a CIDR block.
* `allowedType` - (Required, ForceNew) The type of whitelist. Valid Value: `vpc`, `internet`. **NOTE:** From version 1.179.0, `allowedType` can be set to `internet`.
  - `vpc`: IP address whitelist for VPC access.
  - `internet`: IP address whitelist for Internet access.
* `instanceId` - (Required, ForceNew) The ID of the instance.
* `portRange` - (Required, ForceNew) The Port range.  Valid Value: `9092/9092`, `9093/9093`. **NOTE:** From version 1.179.0, `portRange` can be set to `9093/9093`.
  - `9092/9092`: port range for a VPC whitelist.
  - `9093/9093`: port range for an Internet whitelist.
  
## Attributes Reference

The following attributes are exported:

* `id` - The resource ID of Instance Allowed Ip Attachment. The value formats as `<instance_id>:<allowed_type>:<port_range>:<allowed_ip>`.

### Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/docs/configuration-0-11/resources.html#timeouts) for certain actions:

* `create` - (Defaults to 1 mins) Used when create the resource.
* `delete` - (Defaults to 1 mins) Used when delete the resource.


## Import

AliKafka Instance Allowed Ip Attachment can be imported using the id, e.g.

```shell
$ terraform import alicloud_ali_kafka_instance_allowed_ip_attachment.example <instance_id>:<allowed_type>:<port_range>:<allowed_ip>
```
<!-- cache-key: cdktf-0.17.0-pre.15 input-867cfe73093277ba319488a907d8965f23a9bf27ee0a59436df71886fb640027 -->