---
subcategory: "Simple Application Server"
layout: "alicloud"
page_title: "Alicloud: alicloud_simple_application_server_firewall_rule"
sidebar_current: "docs-alicloud-resource-simple-application-server-firewall-rule"
description: |-
  Provides a Alicloud Simple Application Server Firewall Rule resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_simple\_application\_server\_firewall\_rule

Provides a Simple Application Server Firewall Rule resource.

For information about Simple Application Server Firewall Rule and how to use it, see [What is Firewall Rule](https://www.alibabacloud.com/help/doc-detail/190449.htm).

-> **NOTE:** Available in v1.143.0+.

## Example Usage

Basic Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const dataAlicloudSimpleApplicationServerImagesDefault =
      new alicloud.dataAlicloudSimpleApplicationServerImages.DataAlicloudSimpleApplicationServerImages(
        this,
        "default",
        {}
      );
    const dataAlicloudSimpleApplicationServerInstancesDefault =
      new alicloud.dataAlicloudSimpleApplicationServerInstances.DataAlicloudSimpleApplicationServerInstances(
        this,
        "default_1",
        {}
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAlicloudSimpleApplicationServerInstancesDefault.overrideLogicalId(
      "default"
    );
    const dataAlicloudSimpleApplicationServerPlansDefault =
      new alicloud.dataAlicloudSimpleApplicationServerPlans.DataAlicloudSimpleApplicationServerPlans(
        this,
        "default_2",
        {}
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAlicloudSimpleApplicationServerPlansDefault.overrideLogicalId(
      "default"
    );
    /*In most cases loops should be handled in the programming language context and 
    not inside of the Terraform context. If you are looping over something external, e.g. a variable or a file input
    you should consider using a for loop. If you are looping over something only known to Terraform, e.g. a result of a data source
    you need to keep this like it is.*/
    const alicloudSimpleApplicationServerInstanceDefaultCount =
      cdktf.TerraformCount.of(
        cdktf.Token.asNumber(
          cdktf.conditional(
            cdktf.Op.gt(
              cdktf.Fn.lengthOf(
                dataAlicloudSimpleApplicationServerInstancesDefault.ids
              ),
              0
            ),
            0,
            1
          )
        )
      );
    const alicloudSimpleApplicationServerInstanceDefault =
      new alicloud.simpleApplicationServerInstance.SimpleApplicationServerInstance(
        this,
        "default_3",
        {
          dataDiskSize: 100,
          imageId: cdktf.Token.asString(
            cdktf.propertyAccess(
              dataAlicloudSimpleApplicationServerImagesDefault.images,
              ["0", "id"]
            )
          ),
          instanceName: "tf-testaccswas-firewallrule",
          paymentType: "Subscription",
          period: 1,
          planId: cdktf.Token.asString(
            cdktf.propertyAccess(
              dataAlicloudSimpleApplicationServerPlansDefault.plans,
              ["0", "id"]
            )
          ),
          count: alicloudSimpleApplicationServerInstanceDefaultCount,
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudSimpleApplicationServerInstanceDefault.overrideLogicalId("default");
    const alicloudSimpleApplicationServerFirewallRuleDefault =
      new alicloud.simpleApplicationServerFirewallRule.SimpleApplicationServerFirewallRule(
        this,
        "default_4",
        {
          instanceId: cdktf.Token.asString(
            cdktf.conditional(
              cdktf.Op.gt(
                cdktf.Fn.lengthOf(
                  dataAlicloudSimpleApplicationServerInstancesDefault.ids
                ),
                0
              ),
              cdktf.propertyAccess(
                dataAlicloudSimpleApplicationServerInstancesDefault.ids,
                ["0"]
              ),
              cdktf.propertyAccess(
                alicloudSimpleApplicationServerInstanceDefault,
                ["0", "id"]
              )
            )
          ),
          port: "9999",
          remark: "example_value",
          ruleProtocol: "Tcp",
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudSimpleApplicationServerFirewallRuleDefault.overrideLogicalId(
      "default"
    );
  }
}

```
## Argument Reference

The following arguments are supported:

* `instanceId` - (Required, ForceNew) Alibaba Cloud simple application server instance ID.
* `port` - (Required, ForceNew) The port range. Valid values of port numbers: `1` to `65535`. Specify a port range in the format of `<start port number>/<end port number>`. Example: `1024/1055`, which indicates the port range of `1024` through `1055`.
* `remark` - (Optional, ForceNew) The remarks of the firewall rule.
* `ruleProtocol` - (Required, ForceNew) The transport layer protocol. Valid values: `tcp`, `udp`, `tcpAndUdp`.

## Attributes Reference

The following attributes are exported:

* `firewallRuleId` - The ID of the firewall rule.
* `id` - The resource ID of Firewall Rule. The value formats as `<instance_id>:<firewall_rule_id>`.

## Import

Simple Application Server Firewall Rule can be imported using the id, e.g.

```shell
$ terraform import alicloud_simple_application_server_firewall_rule.example <instance_id>:<firewall_rule_id>
```
<!-- cache-key: cdktf-0.17.0-pre.15 input-32f0e772c00848a6914c1c1202ee78bd21eec6e5d00993922f1df9ecb8ce2dd8 -->