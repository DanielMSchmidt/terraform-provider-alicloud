---
subcategory: "AliKafka"
layout: "alicloud"
page_title: "Alicloud: alicloud_alikafka_topic"
sidebar_current: "docs-alicloud-resource-alikafka-topic"
description: |-
  Provides a Alicloud ALIKAFKA Topic resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_alikafka\_topic

Provides an ALIKAFKA topic resource.

-> **NOTE:** Available in 1.56.0+

-> **NOTE:**  Only the following regions support create alikafka topic.
[`cnHangzhou`,`cnBeijing`,`cnShenzhen`,`cnShanghai`,`cnQingdao`,`cnHongkong`,`cnHuhehaote`,`cnZhangjiakou`,`cnChengdu`,`cnHeyuan`,`apSoutheast1`,`apSoutheast3`,`apSoutheast5`,`apSouth1`,`apNortheast1`,`euCentral1`,`euWest1`,`usWest1`,`usEast1`]

## Example Usage

Basic Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    /*Terraform Variables are not always the best fit for getting inputs in the context of Terraform CDK.
    You can read more about this at https://cdk.tf/variables*/
    const topic = new cdktf.TerraformVariable(this, "topic", {
      default: "alikafkaTopicName",
    });
    const alicloudVpcDefault = new alicloud.vpc.Vpc(this, "default", {
      cidrBlock: "172.16.0.0/12",
    });
    const dataAlicloudZonesDefault =
      new alicloud.dataAlicloudZones.DataAlicloudZones(this, "default_2", {
        availableResourceCreation: "VSwitch",
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAlicloudZonesDefault.overrideLogicalId("default");
    const alicloudVswitchDefault = new alicloud.vswitch.Vswitch(
      this,
      "default_3",
      {
        cidrBlock: "172.16.0.0/24",
        vpcId: cdktf.Token.asString(alicloudVpcDefault.id),
        zoneId: cdktf.Token.asString(
          cdktf.propertyAccess(dataAlicloudZonesDefault.zones, ["0", "id"])
        ),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudVswitchDefault.overrideLogicalId("default");
    const alicloudAlikafkaInstanceDefault =
      new alicloud.alikafkaInstance.AlikafkaInstance(this, "default_4", {
        deployType: cdktf.Token.asNumber("5"),
        diskSize: cdktf.Token.asNumber("500"),
        diskType: cdktf.Token.asNumber("1"),
        ioMax: cdktf.Token.asNumber("20"),
        name: "tf-testacc-alikafkainstance",
        partitionNum: cdktf.Token.asNumber("50"),
        vswitchId: cdktf.Token.asString(alicloudVswitchDefault.id),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudAlikafkaInstanceDefault.overrideLogicalId("default");
    const alicloudAlikafkaTopicDefault =
      new alicloud.alikafkaTopic.AlikafkaTopic(this, "default_5", {
        compactTopic: cdktf.Token.asBoolean("false"),
        instanceId: cdktf.Token.asString(alicloudAlikafkaInstanceDefault.id),
        localTopic: cdktf.Token.asBoolean("false"),
        partitionNum: cdktf.Token.asNumber("12"),
        remark: "dafault_kafka_topic_remark",
        topic: topic.stringValue,
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudAlikafkaTopicDefault.overrideLogicalId("default");
  }
}

```

## Argument Reference

The following arguments are supported:

* `instanceId` - (Required, ForceNew) InstanceId of your Kafka resource, the topic will create in this instance.
* `topic` - (Required, ForceNew) Name of the topic. Two topics on a single instance cannot have the same name. The length cannot exceed 64 characters.
* `localTopic` - (Optional, ForceNew) Whether the topic is localTopic or not.
* `compactTopic` - (Optional, ForceNew) Whether the topic is compactTopic or not. Compact topic must be a localTopic.
* `partitionNum` - (Optional) The number of partitions of the topic. The number should between 1 and 48.
* `remark` - (Required) This attribute is a concise description of topic. The length cannot exceed 64.
* `tags` - (Optional, Available in v1.63.0+) A mapping of tags to assign to the resource.

## Attributes Reference

The following attributes are exported:

* `id` - The `key` of the resource supplied above. The value is formulated as `<instance_id>:<topic>`.

## Import

ALIKAFKA TOPIC can be imported using the id, e.g.

```shell
$ terraform import alicloud_alikafka_topic.topic alikafka_post-cn-123455abc:topicName
```

### Timeouts

-> **NOTE:** Available in v1.119.0+.

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/docs/configuration-0-11/resources.html#timeouts) for certain actions:

* `create` - (Defaults to 10 mins) Used when creating the topic (until it reaches the initial `running` status). 

<!-- cache-key: cdktf-0.17.0-pre.15 input-b37eff3a81024b0b3903a695a63eddf771d3b750d5ac21d92908a3e2aa87a5cd -->