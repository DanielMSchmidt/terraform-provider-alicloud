---
subcategory: "MongoDB"
layout: "alicloud"
page_title: "Alicloud: alicloud_mongodb_sharding_network_private_address"
sidebar_current: "docs-alicloud-resource-mongodb-sharding-network-private-address"
description: |-
  Provides a Alicloud MongoDB Sharding Network Private Address resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_mongodb\_sharding\_network\_private\_address

Provides a MongoDB Sharding Network Private Address resource.

For information about MongoDB Sharding Network Private Address and how to use it, see [What is Sharding Network Private Address](https://www.alibabacloud.com/help/en/doc-detail/141403.html).

-> **NOTE:** Available in v1.157.0+.

## Example Usage

Basic Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as alicloud from "./.gen/providers/alicloud";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    /*Terraform Variables are not always the best fit for getting inputs in the context of Terraform CDK.
    You can read more about this at https://cdk.tf/variables*/
    const name = new cdktf.TerraformVariable(this, "name", {
      default: "tf-example",
    });
    const dataAlicloudMongodbZonesDefault =
      new alicloud.dataAlicloudMongodbZones.DataAlicloudMongodbZones(
        this,
        "default",
        {}
      );
    const dataAlicloudVpcsDefault =
      new alicloud.dataAlicloudVpcs.DataAlicloudVpcs(this, "default_2", {
        nameRegex: "default-NODELETING",
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAlicloudVpcsDefault.overrideLogicalId("default");
    const dataAlicloudVswitchesDefault =
      new alicloud.dataAlicloudVswitches.DataAlicloudVswitches(
        this,
        "default_3",
        {
          vpcId: cdktf.Token.asString(
            cdktf.propertyAccess(dataAlicloudVpcsDefault.ids, ["0"])
          ),
          zoneId: cdktf.Token.asString(
            cdktf.propertyAccess(dataAlicloudMongodbZonesDefault.zones, [
              "0",
              "id",
            ])
          ),
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAlicloudVswitchesDefault.overrideLogicalId("default");
    const alicloudMongodbShardingInstanceDefault =
      new alicloud.mongodbShardingInstance.MongodbShardingInstance(
        this,
        "default_4",
        {
          engineVersion: "4.2",
          mongoList: [
            {
              nodeClass: "dds.mongos.mid",
            },
            {
              nodeClass: "dds.mongos.mid",
            },
          ],
          name: name.stringValue,
          shardList: [
            {
              nodeClass: "dds.shard.mid",
              nodeStorage: 10,
            },
            {
              nodeClass: "dds.shard.mid",
              nodeStorage: 10,
            },
          ],
          vswitchId: cdktf.Token.asString(
            cdktf.propertyAccess(dataAlicloudVswitchesDefault.ids, ["0"])
          ),
          zoneId: cdktf.Token.asString(
            cdktf.propertyAccess(dataAlicloudMongodbZonesDefault.zones, [
              "0",
              "id",
            ])
          ),
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    alicloudMongodbShardingInstanceDefault.overrideLogicalId("default");
    new alicloud.mongodbShardingNetworkPrivateAddress.MongodbShardingNetworkPrivateAddress(
      this,
      "example",
      {
        accountName: "example_value",
        accountPassword: "YourPassword+12345",
        dbInstanceId: cdktf.Token.asString(
          alicloudMongodbShardingInstanceDefault.id
        ),
        nodeId: cdktf.Token.asString(
          cdktf.propertyAccess(
            alicloudMongodbShardingInstanceDefault.shardList,
            ["0", "node_id"]
          )
        ),
        zoneId: cdktf.Token.asString(
          alicloudMongodbShardingInstanceDefault.zoneId
        ),
      }
    );
  }
}

```

## Argument Reference

The following arguments are supported:

* `accountName` - (Optional) The name of the account. 
  - The name must be 4 to 16 characters in length and can contain lowercase letters, digits, and underscores (_). It must start with a lowercase letter.
  - You need to set the account name and password only when you apply for an endpoint for a shard or Configserver node for the first time. In this case, the account name and password are used for all shard and Configserver nodes.
  - The permissions of this account are fixed to read-only.
* `accountPassword` - (Optional, Sensitive) Account password. 
  - The password must contain at least three of the following character types: uppercase letters, lowercase letters, digits, and special characters. Special characters include `!#$%^&*()_+-=`.
  - The password must be 8 to 32 characters in length.
* `dbInstanceId` - (Required) The db instance id.
* `zoneId` - (Required) The zone ID of the instance.
* `nodeId` - (Required) The ID of the Shard node or the ConfigServer node.

## Attributes Reference

The following attributes are exported:

* `id` - The resource ID of Sharding Network Private Address. The value formats as `<db_instance_id>:<node_id>`.
* `networkAddress` - An array that consists of the endpoints of ApsaraDB for MongoDB instances.
  * `networkType` - The network type.
  * `networkAddress` - The endpoint of the instance.
  * `nodeType` - The type of the node.
  * `port` - The port number.
  * `role` - The role of the node.
  * `vpcId` - The ID of the VPC.
  * `expiredTime` - The remaining duration of the classic network address. Unit: `seconds`.
  * `ipAddress` - The IP address of the instance.
  * `vswitchId` - The vSwitch ID of the VPC.
  * `nodeId` - The ID of the `mongos`, `shard`, or `configserver` node in the sharded cluster instance.

## Import

MongoDB Sharding Network Private Address can be imported using the id, e.g.

```shell
$ terraform import alicloud_mongodb_sharding_network_private_address.example <db_instance_id>:<node_id>
```
<!-- cache-key: cdktf-0.17.0-pre.15 input-93ca399fd31dc65885b185933672facb5a4608fe2557646164b30a99a89eafdf -->