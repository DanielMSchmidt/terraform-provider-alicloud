---
subcategory: "AliKafka"
layout: "alicloud"
page_title: "Alicloud: alicloud_alikafka_sasl_acl"
sidebar_current: "docs-alicloud-resource-alikafka-sasl_acl"
description: |-
  Provides a Alicloud Alikafka Sasl Acl resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_alikafka\_sasl\_acl

Provides an ALIKAFKA sasl acl resource.

-> **NOTE:** Available in 1.66.0+

-> **NOTE:**  Only the following regions support create alikafka sasl user.
[`cn-hangzhou`,`cn-beijing`,`cn-shenzhen`,`cn-shanghai`,`cn-qingdao`,`cn-hongkong`,`cn-huhehaote`,`cn-zhangjiakou`,`cn-chengdu`,`cn-heyuan`,`ap-southeast-1`,`ap-southeast-3`,`ap-southeast-5`,`ap-south-1`,`ap-northeast-1`,`eu-central-1`,`eu-west-1`,`us-west-1`,`us-east-1`]

## Example Usage

Basic Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.alicloud as alicloud
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        # Terraform Variables are not always the best fit for getting inputs in the context of Terraform CDK.
        #     You can read more about this at https://cdk.tf/variables
        password = cdktf.TerraformVariable(self, "password",
            default="testpassword"
        )
        username = cdktf.TerraformVariable(self, "username",
            default="testusername"
        )
        alicloud_vpc_default = alicloud.vpc.Vpc(self, "default",
            cidr_block="172.16.0.0/12"
        )
        data_alicloud_zones_default =
        alicloud.data_alicloud_zones.DataAlicloudZones(self, "default_3",
            available_resource_creation="VSwitch"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_alicloud_zones_default.override_logical_id("default")
        alicloud_vswitch_default = alicloud.vswitch.Vswitch(self, "default_4",
            cidr_block="172.16.0.0/24",
            vpc_id=cdktf.Token.as_string(alicloud_vpc_default.id),
            zone_id=cdktf.Token.as_string(
                cdktf.property_access(data_alicloud_zones_default.zones, ["0", "id"]))
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_vswitch_default.override_logical_id("default")
        alicloud_alikafka_instance_default =
        alicloud.alikafka_instance.AlikafkaInstance(self, "default_5",
            deploy_type=cdktf.Token.as_number("5"),
            disk_size=cdktf.Token.as_number("500"),
            disk_type=cdktf.Token.as_number("1"),
            io_max=cdktf.Token.as_number("20"),
            name="tf-testacc-alikafkainstance",
            partition_num=cdktf.Token.as_number("50"),
            vswitch_id=cdktf.Token.as_string(alicloud_vswitch_default.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_alikafka_instance_default.override_logical_id("default")
        alicloud_alikafka_sasl_user_default =
        alicloud.alikafka_sasl_user.AlikafkaSaslUser(self, "default_6",
            instance_id=cdktf.Token.as_string(alicloud_alikafka_instance_default.id),
            password=password.string_value,
            username=username.string_value
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_alikafka_sasl_user_default.override_logical_id("default")
        alicloud_alikafka_topic_default =
        alicloud.alikafka_topic.AlikafkaTopic(self, "default_7",
            instance_id=cdktf.Token.as_string(alicloud_alikafka_instance_default.id),
            remark="topic-remark",
            topic="test-topic"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_alikafka_topic_default.override_logical_id("default")
        alicloud_alikafka_sasl_acl_default =
        alicloud.alikafka_sasl_acl.AlikafkaSaslAcl(self, "default_8",
            acl_operation_type="Write",
            acl_resource_name=cdktf.Token.as_string(alicloud_alikafka_topic_default.topic),
            acl_resource_pattern_type="LITERAL",
            acl_resource_type="Topic",
            instance_id=cdktf.Token.as_string(alicloud_alikafka_instance_default.id),
            username=cdktf.Token.as_string(alicloud_alikafka_sasl_user_default.username)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_alikafka_sasl_acl_default.override_logical_id("default")
```

## Argument Reference

The following arguments are supported:

* `instance_id` - (Required, ForceNew) ID of the ALIKAFKA Instance that owns the groups.
* `username` - (Required, ForceNew) Username for the sasl user. The length should between 1 to 64 characters. The user should be an existed sasl user.
* `acl_resource_type` - (Required, ForceNew) Resource type for this acl. The resource type can only be "Topic" and "Group".
* `acl_resource_name` - (Required, ForceNew) Resource name for this acl. The resource name should be a topic or consumer group name.
* `acl_resource_pattern_type` - (Required, ForceNew) Resource pattern type for this acl. The resource pattern support two types "LITERAL" and "PREFIXED". "LITERAL": A literal name defines the full name of a resource. The special wildcard character "*" can be used to represent a resource with any name. "PREFIXED": A prefixed name defines a prefix for a resource.
* `acl_operation_type` - (Required, ForceNew) Operation type for this acl. The operation type can only be "Write" and "Read".

## Attributes Reference

The following attributes are exported:

* `id` - The `key` of the resource supplied above. The value is formulated as `<instance_id>:<username>:<acl_resource_type>:<acl_resource_name>:<acl_resource_pattern_type>:<acl_operation_type>`.
* `host` - The host of the acl.

## Import

ALIKAFKA GROUP can be imported using the id, e.g.

```shell
$ terraform import alicloud_alikafka_sasl_acl.acl alikafka_post-cn-123455abc:username:Topic:test-topic:LITERAL:Write
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-2ee1b18e50e8ce903bc501c04013627a12e37e3db0b5f9f5e74b1e0c10aab6d8 -->