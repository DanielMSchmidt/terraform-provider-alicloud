---
subcategory: "VPC"
layout: "alicloud"
page_title: "Alicloud: alicloud_vpc_peer_connection_accepter"
sidebar_current: "docs-alicloud-resource-vpc-peer-connection-accepter"
description: |-
  Provides a Alicloud Vpc Peer Connection Accepter resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud_vpc_peer_connection_accepter

Provides a Vpc Peer Connection Accepter resource.

For information about Vpc Peer Connection Accepter and how to use it, see [What is Peer Connection Accepter](https://www.alibabacloud.com/help/en/virtual-private-cloud/latest/AcceptVpcPeerConnection).

-> **NOTE:** Available in v1.196.0+.

## Example Usage

Basic Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.alicloud as alicloud
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        # Terraform Variables are not always the best fit for getting inputs in the context of Terraform CDK.
        #     You can read more about this at https://cdk.tf/variables
        alicloud_local = alicloud.provider.AlicloudProvider(self, "alicloud",
            alias="local",
            region="hangzhou"
        )
        accepting_region = cdktf.TerraformVariable(self, "accepting_region",
            default="cn-beijing"
        )
        data_alicloud_account_default =
        alicloud.data_alicloud_account.DataAlicloudAccount(self, "default")
        data_alicloud_vpcs_default =
        alicloud.data_alicloud_vpcs.DataAlicloudVpcs(self, "default_3",
            name_regex="default-NODELETING",
            provider=alicloud_local
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_alicloud_vpcs_default.override_logical_id("default")
        alicloud_accepting = alicloud.provider.AlicloudProvider(self, "alicloud_4",
            alias="accepting",
            region=accepting_region.string_value
        )
        data_alicloud_vpcs_defaultone =
        alicloud.data_alicloud_vpcs.DataAlicloudVpcs(self, "defaultone",
            name_regex="default-NODELETING",
            provider=alicloud_accepting
        )
        alicloud_vpc_peer_connection_default =
        alicloud.vpc_peer_connection.VpcPeerConnection(self, "default_6",
            accepting_ali_uid=cdktf.Token.as_number(data_alicloud_account_default.id),
            accepting_region_id=accepting_region.string_value,
            accepting_vpc_id=cdktf.Token.as_string(
                cdktf.property_access(data_alicloud_vpcs_defaultone.ids, ["0"])),
            description="example_value",
            peer_connection_name="example_value",
            provider=alicloud_local,
            vpc_id=cdktf.Token.as_string(
                cdktf.property_access(data_alicloud_vpcs_default.ids, ["0"]))
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_vpc_peer_connection_default.override_logical_id("default")
        alicloud_vpc_peer_connection_accepter_default =
        alicloud.vpc_peer_connection_accepter.VpcPeerConnectionAccepter(self, "default_7",
            instance_id=cdktf.Token.as_string(alicloud_vpc_peer_connection_default.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_vpc_peer_connection_accepter_default.override_logical_id("default")
```

## Argument Reference

The following arguments are supported:
* `instance_id` - (Required,ForceNew) The ID of the instance of the created VPC peer connection.
* `dry_run` - (Optional) The dry run.

## Attributes Reference

The following attributes are exported:
* `id` - The `key` of the resource supplied above.
* `accepting_owner_uid` - The ID of the Alibaba Cloud account (primary account) of the receiving end of the VPC peering connection to be created.-Enter the ID of your Alibaba Cloud account to create a peer-to-peer connection to the VPC account.-Enter the ID of another Alibaba Cloud account to create a cross-account VPC peer-to-peer connection.> If the recipient account is a RAM user (sub-account), enter the ID of the Alibaba Cloud account corresponding to the RAM user.
* `accepting_region_id` - The region ID of the recipient of the VPC peering connection to be created.-When creating a VPC peer-to-peer connection in the same region, enter the same region ID as the region ID of the initiator.-When creating a cross-region VPC peer-to-peer connection, enter a region ID that is different from the region ID of the initiator.
* `accepting_vpc_id` - The VPC ID of the receiving end of the VPC peer connection.
* `bandwidth` - The bandwidth of the VPC peering connection to be modified. Unit: Mbps. The value range is an integer greater than 0.
* `description` - The description of the VPC peer connection to be created.It must be 2 to 256 characters in length and must start with a letter or Chinese, but cannot start with http:// or https.
* `peer_connection_accepter_name` - The name of the resource
* `status` - The status of the resource
* `vpc_id` - You must create a VPC ID on the initiator of a VPC peer connection.

### Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/docs/configuration-0-11/resources.html#timeouts) for certain actions:
* `create` - (Defaults to 5 mins) Used when create the Peer Connection Accepter.
* `delete` - (Defaults to 5 mins) Used when delete the Peer Connection Accepter.

## Import

Vpc Peer Connection Accepter can be imported using the id, e.g.

```shell
$terraform import alicloud_vpc_peer_connection_accepter.example <id>
```
<!-- cache-key: cdktf-0.17.0-pre.15 input-9702ff33a58335e935c339be03f2ca5ed2bedaaff5853c350c984f6c2efca204 -->