---
subcategory: "Cloud Storage Gateway"
layout: "alicloud"
page_title: "Alicloud: alicloud_cloud_storage_gateway_gateway_logging"
sidebar_current: "docs-alicloud-resource-cloud-storage-gateway-gateway-logging"
description: |-
  Provides a Alicloud Cloud Storage Gateway Gateway Logging resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_cloud\_storage\_gateway\_gateway\_logging

Provides a Cloud Storage Gateway Gateway Logging resource.

For information about Cloud Storage Gateway Gateway Logging and how to use it, see [What is Gateway Logging](https://www.alibabacloud.com/help/en/doc-detail/108299.htm).

-> **NOTE:** Available in v1.144.0+.

## Example Usage

Basic Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.alicloud as alicloud
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        # Terraform Variables are not always the best fit for getting inputs in the context of Terraform CDK.
        #     You can read more about this at https://cdk.tf/variables
        name = cdktf.TerraformVariable(self, "name",
            default="example"
        )
        alicloud_cloud_storage_gateway_storage_bundle_default =
        alicloud.cloud_storage_gateway_storage_bundle.CloudStorageGatewayStorageBundle(self, "default",
            storage_bundle_name=name.string_value
        )
        alicloud_log_project_default = alicloud.log_project.LogProject(self, "default_2",
            description="created by terraform",
            name=name.string_value
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_log_project_default.override_logical_id("default")
        alicloud_log_store_default = alicloud.log_store.LogStore(self, "default_3",
            append_meta=True,
            auto_split=True,
            max_split_shard_count=60,
            name=name.string_value,
            project=cdktf.Token.as_string(alicloud_log_project_default.name),
            shard_count=3
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_log_store_default.override_logical_id("default")
        alicloud_vpc_default = alicloud.vpc.Vpc(self, "default_4",
            cidr_block="172.16.0.0/12",
            vpc_name=name.string_value
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_vpc_default.override_logical_id("default")
        data_alicloud_zones_default =
        alicloud.data_alicloud_zones.DataAlicloudZones(self, "default_5",
            available_resource_creation="VSwitch"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_alicloud_zones_default.override_logical_id("default")
        alicloud_vswitch_default = alicloud.vswitch.Vswitch(self, "default_6",
            cidr_block="172.16.0.0/21",
            vpc_id=cdktf.Token.as_string(alicloud_vpc_default.id),
            vswitch_name=name.string_value,
            zone_id=cdktf.Token.as_string(
                cdktf.property_access(data_alicloud_zones_default.zones, ["0", "id"]))
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_vswitch_default.override_logical_id("default")
        alicloud_cloud_storage_gateway_gateway_default =
        alicloud.cloud_storage_gateway_gateway.CloudStorageGatewayGateway(self, "default_7",
            description="tf-acctestDesalone",
            gateway_class="Basic",
            gateway_name=name.string_value,
            location="Cloud",
            payment_type="PayAsYouGo",
            public_network_bandwidth=10,
            release_after_expiration=True,
            storage_bundle_id=cdktf.Token.as_string(alicloud_cloud_storage_gateway_storage_bundle_default.id),
            type="File",
            vswitch_id=cdktf.Token.as_string(alicloud_vswitch_default.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_cloud_storage_gateway_gateway_default.override_logical_id("default")
        alicloud_cloud_storage_gateway_gateway_logging_default =
        alicloud.cloud_storage_gateway_gateway_logging.CloudStorageGatewayGatewayLogging(self, "default_8",
            gateway_id=cdktf.Token.as_string(alicloud_cloud_storage_gateway_gateway_default.id),
            sls_logstore=cdktf.Token.as_string(alicloud_log_store_default.name),
            sls_project=cdktf.Token.as_string(alicloud_log_project_default.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_cloud_storage_gateway_gateway_logging_default.override_logical_id("default")
```

## Argument Reference

The following arguments are supported:

* `gateway_id` - (Required, ForceNew) The ID of the Gateway.
* `sls_logstore` - (Required, ForceNew) The name of the Log Store.
* `sls_project` - (Required, ForceNew) The name of the Project.
* `status` - (Optional, Computed) The status of the resource. Valid values: `Enabled`, `Disable`.

## Attributes Reference

The following attributes are exported:

* `id` - The resource ID in terraform of Gateway Logging. Its value is same as `gateway_id`.

## Import

Cloud Storage Gateway Gateway Logging can be imported using the id, e.g.

```shell
$ terraform import alicloud_cloud_storage_gateway_gateway_logging.example <gateway_id>
```
<!-- cache-key: cdktf-0.17.0-pre.15 input-c43566c437377fbc51977eb2f806bca1f026c85b59fb4db5a15e9ffb59eba50a -->