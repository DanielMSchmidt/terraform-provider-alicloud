---
subcategory: "RDS"
layout: "alicloud"
page_title: "Alicloud: alicloud_db_read_write_splitting_connection"
sidebar_current: "docs-alicloud-resource-db-read-write-splitting-connection"
description: |-
  Provides an RDS instance read write splitting connection resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_db\_read\_write\_splitting\_connection

Provides an RDS read write splitting connection resource to allocate an Intranet connection string for RDS instance.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.alicloud as alicloud
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        alicloud_vpc_example = alicloud.vpc.Vpc(self, "example",
            cidr_block="172.16.0.0/16",
            vpc_name="terraform-example"
        )
        data_alicloud_db_zones_example =
        alicloud.data_alicloud_db_zones.DataAlicloudDbZones(self, "example_1",
            category="Basic",
            db_instance_storage_type="cloud_essd",
            engine="MySQL",
            engine_version="8.0",
            instance_charge_type="PostPaid"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_alicloud_db_zones_example.override_logical_id("example")
        alicloud_security_group_example =
        alicloud.security_group.SecurityGroup(self, "example_2",
            name="terraform-example",
            vpc_id=cdktf.Token.as_string(alicloud_vpc_example.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_security_group_example.override_logical_id("example")
        alicloud_vswitch_example = alicloud.vswitch.Vswitch(self, "example_3",
            cidr_block="172.16.0.0/24",
            vpc_id=cdktf.Token.as_string(alicloud_vpc_example.id),
            vswitch_name="terraform-example",
            zone_id=cdktf.Token.as_string(
                cdktf.property_access(data_alicloud_db_zones_example.zones, ["0", "id"]))
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_vswitch_example.override_logical_id("example")
        data_alicloud_db_instance_classes_example =
        alicloud.data_alicloud_db_instance_classes.DataAlicloudDbInstanceClasses(self, "example_4",
            category="Basic",
            db_instance_storage_type="cloud_essd",
            engine="MySQL",
            engine_version="8.0",
            instance_charge_type="PostPaid",
            zone_id=cdktf.Token.as_string(
                cdktf.property_access(data_alicloud_db_zones_example.zones, ["0", "id"]))
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_alicloud_db_instance_classes_example.override_logical_id("example")
        alicloud_db_instance_example = alicloud.db_instance.DbInstance(self, "example_5",
            db_instance_storage_type="cloud_essd",
            engine="MySQL",
            engine_version="8.0",
            instance_charge_type="Postpaid",
            instance_name="terraform-example",
            instance_storage=cdktf.Token.as_number(
                cdktf.property_access(data_alicloud_db_instance_classes_example.instance_classes, ["0", "storage_range", "min"])),
            instance_type=cdktf.Token.as_string(
                cdktf.property_access(data_alicloud_db_instance_classes_example.instance_classes, ["0", "instance_class"])),
            monitoring_period=cdktf.Token.as_number("60"),
            security_group_ids=[
                cdktf.Token.as_string(alicloud_security_group_example.id)
            ],
            vswitch_id=cdktf.Token.as_string(alicloud_vswitch_example.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_db_instance_example.override_logical_id("example")
        alicloud_db_readonly_instance_example =
        alicloud.db_readonly_instance.DbReadonlyInstance(self, "example_6",
            engine_version=cdktf.Token.as_string(alicloud_db_instance_example.engine_version),
            instance_name="terraform-example-readonly",
            instance_storage=cdktf.Token.as_number(alicloud_db_instance_example.instance_storage),
            instance_type=cdktf.Token.as_string(
                cdktf.property_access(data_alicloud_db_instance_classes_example.instance_classes, ["1", "instance_class"])),
            master_db_instance_id=cdktf.Token.as_string(alicloud_db_instance_example.id),
            vswitch_id=cdktf.Token.as_string(alicloud_vswitch_example.id),
            zone_id=cdktf.Token.as_string(alicloud_db_instance_example.zone_id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_db_readonly_instance_example.override_logical_id("example")
        alicloud_db_read_write_splitting_connection_example =
        alicloud.db_read_write_splitting_connection.DbReadWriteSplittingConnection(self, "example_7",
            connection_prefix="example-con-123",
            depends_on=[alicloud_db_readonly_instance_example],
            distribution_type="Standard",
            instance_id=cdktf.Token.as_string(alicloud_db_instance_example.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_db_read_write_splitting_connection_example.override_logical_id("example")
```

-> **NOTE:** Resource `alicloud_db_read_write_splitting_connection` should be created after `alicloud_db_readonly_instance`, so the `depends_on` statement is necessary.

## Argument Reference

The following arguments are supported:

* `instance_id` - (Required, ForceNew) The Id of instance that can run database.
* `distribution_type` - (Required) Read weight distribution mode. Values are as follows: `Standard` indicates automatic weight distribution based on types, `Custom` indicates custom weight distribution. 
* `connection_prefix` - (Optional, ForceNew) Prefix of an Internet connection string. It must be checked for uniqueness. It may consist of lowercase letters, numbers, and underlines, and must start with a letter and have no more than 30 characters. Default to <instance_id> + 'rw'.
* `port` - (Optional) Intranet connection port. Valid value: [3001-3999]. Default to 3306.
* `max_delay_time` - (Optional) Delay threshold, in seconds. The value range is 0 to 7200. Default to 30. Read requests are not routed to the read-only instances with a delay greater than the threshold.  
* `weight` - (Optional) Read weight distribution. Read weights increase at a step of 100 up to 10,000. Enter weights in the following format: {"Instanceid":"Weight","Instanceid":"Weight"}. This parameter must be set when distribution_type is set to Custom. 

## Attributes Reference

The following attributes are exported:

* `id` - The Id of DB instance.
* `connection_string` - Connection instance string.

## Import

RDS read write splitting connection can be imported using the id, e.g.

```shell
$ terraform import alicloud_db_read_write_splitting_connection.example abc12345678
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-502bf8ea8382ddc09a18a458494888387b4eef019b79612d8bb14491594afc54 -->