---
subcategory: "Classic Load Balancer (SLB)"
layout: "alicloud"
page_title: "Alicloud: alicloud_slb_server_group_server_attachment"
sidebar_current: "docs-alicloud-resource-slb-server-group-server-attachment"
description: |-
  Provides a Load Banlancer Virtual Backend Server Group Server Attachment resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_slb\_server\_group\_server\_attachment

-> **NOTE:** Available in v1.163.0+.

For information about server group server attachment and how to use it, see [Configure a server group server attachment](https://www.alibabacloud.com/help/en/doc-detail/35218.html).

-> **NOTE:** Applying this resource may conflict with applying `alicloud_slb_listener`, 
and the `alicloud_slb_listener` block should use `depends_on = [alicloud_slb_server_group_server_attachment.xxx]` to avoid it.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.alicloud as alicloud
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        # Terraform Variables are not always the best fit for getting inputs in the context of Terraform CDK.
        #     You can read more about this at https://cdk.tf/variables
        slb_server_group_server_attachment = cdktf.TerraformVariable(self, "slb_server_group_server_attachment",
            default="terraform-example"
        )
        slb_server_group_server_attachment_count = cdktf.TerraformVariable(self, "slb_server_group_server_attachment_count",
            default=5
        )
        alicloud_vpc_server_attachment = alicloud.vpc.Vpc(self, "server_attachment",
            cidr_block="172.17.3.0/24",
            vpc_name=slb_server_group_server_attachment.string_value
        )
        data_alicloud_images_server_attachment =
        alicloud.data_alicloud_images.DataAlicloudImages(self, "server_attachment_3",
            most_recent=True,
            name_regex="^ubuntu_[0-9]+_[0-9]+_x64*",
            owners="system"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_alicloud_images_server_attachment.override_logical_id("server_attachment")
        data_alicloud_zones_server_attachment =
        alicloud.data_alicloud_zones.DataAlicloudZones(self, "server_attachment_4",
            available_disk_category="cloud_efficiency",
            available_resource_creation="VSwitch"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_alicloud_zones_server_attachment.override_logical_id("server_attachment")
        alicloud_security_group_server_attachment =
        alicloud.security_group.SecurityGroup(self, "server_attachment_5",
            name=slb_server_group_server_attachment.string_value,
            vpc_id=cdktf.Token.as_string(alicloud_vpc_server_attachment.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_security_group_server_attachment.override_logical_id("server_attachment")
        alicloud_vswitch_server_attachment = alicloud.vswitch.Vswitch(self, "server_attachment_6",
            cidr_block="172.17.3.0/24",
            vpc_id=cdktf.Token.as_string(alicloud_vpc_server_attachment.id),
            vswitch_name=slb_server_group_server_attachment.string_value,
            zone_id=cdktf.Token.as_string(
                cdktf.property_access(data_alicloud_zones_server_attachment.zones, ["0", "id"
                ]))
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_vswitch_server_attachment.override_logical_id("server_attachment")
        data_alicloud_instance_types_server_attachment =
        alicloud.data_alicloud_instance_types.DataAlicloudInstanceTypes(self, "server_attachment_7",
            availability_zone=cdktf.Token.as_string(
                cdktf.property_access(data_alicloud_zones_server_attachment.zones, ["0", "id"
                ])),
            cpu_core_count=1,
            memory_size=2
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_alicloud_instance_types_server_attachment.override_logical_id("server_attachment")
        # In most cases loops should be handled in the programming language context and
        #     not inside of the Terraform context. If you are looping over something external, e.g. a variable or a file input
        #     you should consider using a for loop. If you are looping over something only known to Terraform, e.g. a result of a data source
        #     you need to keep this like it is.
        alicloud_instance_server_attachment_count = cdktf.TerraformCount.of(slb_server_group_server_attachment_count.number_value)
        alicloud_instance_server_attachment = alicloud.instance.Instance(self, "server_attachment_8",
            availability_zone=cdktf.Token.as_string(
                cdktf.property_access(data_alicloud_zones_server_attachment.zones, ["0", "id"
                ])),
            image_id=cdktf.Token.as_string(
                cdktf.property_access(data_alicloud_images_server_attachment.images, ["0", "id"
                ])),
            instance_charge_type="PostPaid",
            instance_name=slb_server_group_server_attachment.string_value,
            instance_type=cdktf.Token.as_string(
                cdktf.property_access(data_alicloud_instance_types_server_attachment.instance_types, ["0", "id"])),
            internet_charge_type="PayByTraffic",
            internet_max_bandwidth_out=cdktf.Token.as_number("10"),
            security_groups=cdktf.Token.as_list(
                cdktf.property_access(alicloud_security_group_server_attachment, ["*", "id"
                ])),
            system_disk_category="cloud_efficiency",
            vswitch_id=cdktf.Token.as_string(alicloud_vswitch_server_attachment.id),
            count=alicloud_instance_server_attachment_count
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_instance_server_attachment.override_logical_id("server_attachment")
        alicloud_slb_load_balancer_server_attachment =
        alicloud.slb_load_balancer.SlbLoadBalancer(self, "server_attachment_9",
            address_type="intranet",
            load_balancer_name=slb_server_group_server_attachment.string_value,
            load_balancer_spec="slb.s2.small",
            vswitch_id=cdktf.Token.as_string(alicloud_vswitch_server_attachment.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_slb_load_balancer_server_attachment.override_logical_id("server_attachment")
        alicloud_slb_server_group_server_attachment =
        alicloud.slb_server_group.SlbServerGroup(self, "server_attachment_10",
            load_balancer_id=cdktf.Token.as_string(alicloud_slb_load_balancer_server_attachment.id),
            name=slb_server_group_server_attachment.string_value
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_slb_server_group_server_attachment.override_logical_id("server_attachment")
        # In most cases loops should be handled in the programming language context and
        #     not inside of the Terraform context. If you are looping over something external, e.g. a variable or a file input
        #     you should consider using a for loop. If you are looping over something only known to Terraform, e.g. a result of a data source
        #     you need to keep this like it is.
        alicloud_slb_server_group_server_attachment_server_attachment_count =
        cdktf.TerraformCount.of(slb_server_group_server_attachment_count.number_value)
        alicloud_slb_server_group_server_attachment_server_attachment =
        alicloud.slb_server_group_server_attachment.SlbServerGroupServerAttachment(self, "server_attachment_11",
            port=8080,
            server_group_id=cdktf.Token.as_string(alicloud_slb_server_group_server_attachment.id),
            server_id=cdktf.Token.as_string(
                cdktf.property_access(
                    cdktf.property_access(alicloud_instance_server_attachment, [alicloud_slb_server_group_server_attachment_server_attachment_count.index
                    ]), ["id"])),
            weight=0,
            count=alicloud_slb_server_group_server_attachment_server_attachment_count
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_slb_server_group_server_attachment_server_attachment.override_logical_id("server_attachment")
```

## Argument Reference

The following arguments are supported:

* `server_group_id` - (Required, ForceNew) The ID of the server group.
* `server_id` - (Required, ForceNew) The ID of the backend server. You can specify the ID of an Elastic Compute Service (ECS) instance or an elastic network interface (ENI).
* `port` - (Required, ForceNew) The port that is used by the backend server. Valid values: `1` to `65535`.
* `weight` - (Optional, ForceNew, Computed) The weight of the backend server. Valid values: `0` to `100`. Default value: `100`. If the value is set to `0`, no requests are forwarded to the backend server.
* `type` - (Optional, ForceNew, Computed) The type of backend server. Valid values: `ecs`, `eni`.
* `description` - (Optional, ForceNew, Computed) The description of the backend server.


## Attributes Reference

The following attributes are exported:

* `id` - The ID of the virtual server group server attachment. The value formats as `<server_group_id>:<server_id>:<port>`.

### Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/docs/configuration-0-11/resources.html#timeouts) for certain actions:

* `create` - (Defaults to 5 mins) Used when create the resource.
* `delete` - (Defaults to 5 mins) Used when delete the resource.


## Import

Load balancer backend server group server attachment can be imported using the id, e.g.

```shell
$ terraform import alicloud_slb_server_group_server_attachment.example <server_group_id>:<server_id>:<port>
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-029549e30ec664e61d39ec6382654a876b11e1db4fa9a968fb77f9e5499292de -->