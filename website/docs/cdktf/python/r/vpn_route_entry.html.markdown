---
subcategory: "VPN Gateway"
layout: "alicloud"
page_title: "Alicloud: alicloud_vpn_route_entry"
sidebar_current: "docs-alicloud-resource-vpn-route-entry"
description: |-
  Provides a Alicloud VPN Route Entry resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_vpn_route_entry

Provides a VPN Route Entry resource.

-> **NOTE:** Terraform will build vpn route entry instance while it uses `alicloud_vpn_route_entry` to build a VPN Route Entry resource.

-> **NOTE:** Available in 1.57.0+.

For information about VPN Route Entry and how to use it, see [What is VPN Route Entry](https://www.alibabacloud.com/help/en/doc-detail/127250.html).


## Example Usage

Basic Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.alicloud as alicloud
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        alicloud_vpc_default = alicloud.vpc.Vpc(self, "default",
            cidr_block="10.1.0.0/21",
            vpc_name="terraform-example"
        )
        alicloud_vpn_customer_gateway_default =
        alicloud.vpn_customer_gateway.VpnCustomerGateway(self, "default_1",
            ip_address="192.168.1.1",
            name="terraform-example"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_vpn_customer_gateway_default.override_logical_id("default")
        data_alicloud_zones_default =
        alicloud.data_alicloud_zones.DataAlicloudZones(self, "default_2",
            available_disk_category="cloud_efficiency",
            available_resource_creation="VSwitch"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_alicloud_zones_default.override_logical_id("default")
        alicloud_vswitch_default = alicloud.vswitch.Vswitch(self, "default_3",
            cidr_block="10.1.0.0/24",
            vpc_id=cdktf.Token.as_string(alicloud_vpc_default.id),
            vswitch_name="terraform-example",
            zone_id=cdktf.Token.as_string(
                cdktf.property_access(data_alicloud_zones_default.zones, ["0", "id"]))
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_vswitch_default.override_logical_id("default")
        alicloud_vpn_gateway_default = alicloud.vpn_gateway.VpnGateway(self, "default_4",
            bandwidth=10,
            enable_ssl=False,
            instance_charge_type="PrePaid",
            name="terraform-example",
            vpc_id=cdktf.Token.as_string(alicloud_vpc_default.id),
            vswitch_id=cdktf.Token.as_string(alicloud_vswitch_default.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_vpn_gateway_default.override_logical_id("default")
        alicloud_vpn_connection_default =
        alicloud.vpn_connection.VpnConnection(self, "default_5",
            customer_gateway_id=cdktf.Token.as_string(alicloud_vpn_customer_gateway_default.id),
            local_subnet=["192.168.2.0/24"],
            name="terraform-example",
            remote_subnet=["192.168.3.0/24"],
            vpn_gateway_id=cdktf.Token.as_string(alicloud_vpn_gateway_default.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_vpn_connection_default.override_logical_id("default")
        alicloud_vpn_route_entry_default =
        alicloud.vpn_route_entry.VpnRouteEntry(self, "default_6",
            next_hop=cdktf.Token.as_string(alicloud_vpn_connection_default.id),
            publish_vpc=False,
            route_dest="10.0.0.0/24",
            vpn_gateway_id=cdktf.Token.as_string(alicloud_vpn_gateway_default.id),
            weight=0
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_vpn_route_entry_default.override_logical_id("default")
```
## Argument Reference

The following arguments are supported:

* `vpn_gateway_id` - (Required, ForceNew) The id of the vpn gateway.
* `next_hop` - (Required, ForceNew) The next hop of the destination route.
* `publish_vpc` - (Required) Whether to issue the destination route to the VPC.
* `route_dest` - (Required, ForceNew) The destination network segment of the destination route.
* `weight` - (Required) The value should be 0 or 100.

## Attributes Reference

The following attributes are exported:

* `id` - The combination id of the vpn route entry.
* `route_entry_type` - (Available in 1.161.0+) The type of the vpn route entry.
* `status` - (Available in 1.161.0+) The status of the vpn route entry.

#### Timeouts

-> **NOTE:** Available in 1.161.0+.

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/docs/configuration-0-11/resources.html#timeouts) for certain actions:

* `create` - (Defaults to 5 mins) Used when create the vpn route entry.
* `update` - (Defaults to 5 mins) Used when update the vpn route entry.
* `delete` - (Defaults to 5 mins) Used when delete the vpn route entry.

## Import

VPN route entry can be imported using the id(VpnGatewayId +":"+ NextHop +":"+ RouteDest), e.g.

```shell
$ terraform import alicloud_vpn_route_entry.example vpn-abc123456:vco-abc123456:10.0.0.10/24
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-04e1b10a377750ad05f5193f703ee76312ab729ae9da8a4884ae6e7f7670cd28 -->