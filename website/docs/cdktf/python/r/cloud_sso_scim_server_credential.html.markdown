---
subcategory: "Cloud SSO"
layout: "alicloud"
page_title: "Alicloud: alicloud_cloud_sso_scim_server_credential"
sidebar_current: "docs-alicloud-resource-cloud-sso-scim-server-credential"
description: |-
  Provides a Alicloud Cloud SSO SCIM Server Credential resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_cloud\_sso\_scim\_server\_credential

Provides a Cloud SSO SCIM Server Credential resource.

For information about Cloud SSO SCIM Server Credential and how to use it, see [What is Cloud SSO SCIM Server Credential](https://www.alibabacloud.com/help/doc-detail/264937.html).

-> **NOTE:** Available in v1.138.0+.

-> **NOTE:** Cloud SSO Only Support `cn-shanghai` And `us-west-1` Region


## Example Usage

Basic Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.alicloud as alicloud
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        # Terraform Variables are not always the best fit for getting inputs in the context of Terraform CDK.
        #     You can read more about this at https://cdk.tf/variables
        name = cdktf.TerraformVariable(self, "name",
            default="example-value"
        )
        data_alicloud_cloud_sso_directories_default =
        alicloud.data_alicloud_cloud_sso_directories.DataAlicloudCloudSsoDirectories(self, "default")
        # In most cases loops should be handled in the programming language context and
        #     not inside of the Terraform context. If you are looping over something external, e.g. a variable or a file input
        #     you should consider using a for loop. If you are looping over something only known to Terraform, e.g. a result of a data source
        #     you need to keep this like it is.
        alicloud_cloud_sso_directory_default_count = cdktf.TerraformCount.of(
            cdktf.Token.as_number(
                cdktf.conditional(
                    cdktf.Op.gt(
                        cdktf.Fn.length_of(data_alicloud_cloud_sso_directories_default.ids), 0), 0, 1)))
        alicloud_cloud_sso_directory_default =
        alicloud.cloud_sso_directory.CloudSsoDirectory(self, "default_2",
            directory_name=name.string_value,
            count=alicloud_cloud_sso_directory_default_count
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_cloud_sso_directory_default.override_logical_id("default")
        alicloud_cloud_sso_scim_server_credential_default =
        alicloud.cloud_sso_scim_server_credential.CloudSsoScimServerCredential(self, "default_3",
            directory_id=cdktf.Token.as_string(
                cdktf.conditional(
                    cdktf.Op.gt(
                        cdktf.Fn.length_of(data_alicloud_cloud_sso_directories_default.ids), 0),
                    cdktf.property_access(data_alicloud_cloud_sso_directories_default.ids, ["0"
                    ]),
                    cdktf.property_access(
                        cdktf.Fn.concat([
                            cdktf.property_access(alicloud_cloud_sso_directory_default, ["*", "id"
                            ]), [""]
                        ]), ["0"])))
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_cloud_sso_scim_server_credential_default.override_logical_id("default")
```

## Argument Reference

The following arguments are supported:

* `directory_id` - (Required, ForceNew) The ID of the Directory.
* `status` - (Optional, Computed) The Status of the resource. Valid values: `Disabled`, `Enabled`.

## Attributes Reference

The following attributes are exported:

* `id` - The resource ID of SCIM Server Credential. The value formats as `<directory_id>:<credential_id>`.
* `credential_id` - The CredentialId of the resource.

## Import

Cloud SSO SCIM Server Credential can be imported using the id, e.g.

```shell
$ terraform import alicloud_cloud_sso_scim_server_credential.example <directory_id>:<credential_id>
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-408b9cb86868d342f97f362ab1a66f0a9937203bc4b0b912233ea8da40851b8f -->