---
subcategory: "VPC"
layout: "alicloud"
page_title: "Alicloud: alicloud_route_table_attachment"
sidebar_current: "docs-alicloud-resource-route-table-attachment"
description: |-
  Provides an Alicloud Route Table Attachment resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_route\_table\_attachment

Provides an Alicloud Route Table Attachment resource for associating Route Table to VSwitch Instance.

-> **NOTE:** Terraform will auto build route table attachment while it uses `alicloud_route_table_attachment` to build a route table attachment resource.

For information about route table and how to use it, see [What is Route Table](https://www.alibabacloud.com/help/doc-detail/87057.htm).

## Example Usage

Basic Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.alicloud as alicloud
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        # Terraform Variables are not always the best fit for getting inputs in the context of Terraform CDK.
        #     You can read more about this at https://cdk.tf/variables
        name = cdktf.TerraformVariable(self, "name",
            default="route-table-attachment-example-name"
        )
        alicloud_vpc_foo = alicloud.vpc.Vpc(self, "foo",
            cidr_block="172.16.0.0/12",
            name=name.string_value
        )
        data_alicloud_zones_default =
        alicloud.data_alicloud_zones.DataAlicloudZones(self, "default",
            available_resource_creation="VSwitch"
        )
        alicloud_route_table_foo = alicloud.route_table.RouteTable(self, "foo_3",
            description="route_table_attachment",
            route_table_name=name.string_value,
            vpc_id=cdktf.Token.as_string(alicloud_vpc_foo.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_route_table_foo.override_logical_id("foo")
        alicloud_vswitch_foo = alicloud.vswitch.Vswitch(self, "foo_4",
            cidr_block="172.16.0.0/21",
            name=name.string_value,
            vpc_id=cdktf.Token.as_string(alicloud_vpc_foo.id),
            zone_id=cdktf.Token.as_string(
                cdktf.property_access(data_alicloud_zones_default.zones, ["0", "id"]))
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_vswitch_foo.override_logical_id("foo")
        alicloud_route_table_attachment_foo =
        alicloud.route_table_attachment.RouteTableAttachment(self, "foo_5",
            route_table_id=cdktf.Token.as_string(alicloud_route_table_foo.id),
            vswitch_id=cdktf.Token.as_string(alicloud_vswitch_foo.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_route_table_attachment_foo.override_logical_id("foo")
```
## Argument Reference

The following arguments are supported:

* `vswitch_id` - (Required, ForceNew) The vswitch_id of the route table attachment, the field can't be changed.
* `route_table_id` - (Required, ForceNew) The route_table_id of the route table attachment, the field can't be changed.

## Attributes Reference

The following attributes are exported:

* `id` - The ID of the route table attachment id and formates as `<route_table_id>:<vswitch_id>`.

## Import

The route table attachment can be imported using the id, e.g.

```shell
$ terraform import alicloud_route_table_attachment.foo vtb-abc123456:vsw-abc123456
```


<!-- cache-key: cdktf-0.17.0-pre.15 input-03d0779ca30657a0aca992942c6b9c738191abb4da71c7f4319f5742133a8eac -->