---
subcategory: "VPN Gateway"
layout: "alicloud"
page_title: "Alicloud: alicloud_ssl_vpn_server"
sidebar_current: "docs-alicloud-resource-ssl-vpn-server"
description: |-
  Provides a Alicloud SSL VPN server resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_ssl_vpn_server

Provides a SSL VPN server resource. [Refer to details](https://www.alibabacloud.com/help/doc-detail/64960.htm)

-> **NOTE:** Terraform will auto build ssl vpn server while it uses `alicloud_ssl_vpn_server` to build a ssl vpn server resource.

## Example Usage

Basic Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.alicloud as alicloud
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        alicloud_vpn_gateway_foo = alicloud.vpn_gateway.VpnGateway(self, "foo",
            bandwidth=cdktf.Token.as_number("10"),
            description="test_create_description",
            enable_ssl=True,
            instance_charge_type="PostPaid",
            name="testAccVpnConfig_create",
            vpc_id="vpc-fake-id"
        )
        alicloud_ssl_vpn_server_foo = alicloud.ssl_vpn_server.SslVpnServer(self, "foo_1",
            cipher="AES-128-CBC",
            client_ip_pool="192.168.0.0/16",
            compress=cdktf.Token.as_boolean("false"),
            local_subnet="172.16.0.0/21",
            name="sslVpnServerNameExample",
            port=1194,
            protocol="UDP",
            vpn_gateway_id=cdktf.Token.as_string(alicloud_vpn_gateway_foo.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_ssl_vpn_server_foo.override_logical_id("foo")
```
## Argument Reference

The following arguments are supported:

* `name` - (Optional) The name of the SSL-VPN server.
* `vpn_gateway_id` - (Required, ForceNew) The ID of the VPN gateway.
* `client_ip_pool` - (Required) The CIDR block from which access addresses are allocated to the virtual network interface card of the client.
* `local_subnet` - (Required) The CIDR block to be accessed by the client through the SSL-VPN connection. It supports to set multi CIDRs by comma join ways, like `10.0.1.0/24,10.0.2.0/24,10.0.3.0/24`.
* `protocol` - (Optional) The protocol used by the SSL-VPN server. Valid value: UDP(default) |TCP
* `cipher` - (Optional) The encryption algorithm that is used in the SSL-VPN connection. Valid values: `AES-128-CBC`,`AES-192-CBC`,`AES-256-CBC`,`none`. Default value: `AES-128-CBC`.
  * `AES-128-CBC` - the AES-128-CBC algorithm.
  * `AES-192-CBC` - the AES-192-CBC algorithm.
  * `AES-256-CBC` - the AES-256-CBC algorithm.
  * `none` - If you select this option, no encryption algorithm is used.
* `port` - (Optional) The port used by the SSL-VPN server. The default value is `1194`.The following ports cannot be used: [22, 2222, 22222, 9000, 9001, 9002, 7505, 80, 443, 53, 68, 123, 4510, 4560, 500, 4500].
* `compress`  - (Optional) Specifies whether to enable data compression. Valid values: `true`,`false`. Default value: `false`
  * `true` - enables data compression.
  * `false` - disables data compression.

## Attributes Reference

The following attributes are exported:

* `id` - The ID of the SSL-VPN server.
* `internet_ip` - The internet IP of the SSL-VPN server.
* `connections` - The number of current connections.
* `max_connections` - The maximum number of connections.

## Import

SSL-VPN server can be imported using the id, e.g.

```shell
$ terraform import alicloud_ssl_vpn_server.example vss-abc123456
```



<!-- cache-key: cdktf-0.17.0-pre.15 input-cf4b5b1bf56c496c43b68231c6050f11236e647069056d65286e0470ae0fa2d1 -->