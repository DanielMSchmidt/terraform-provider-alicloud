---
subcategory: "VPC"
layout: "alicloud"
page_title: "Alicloud: alicloud_vswitch"
sidebar_current: "docs-alicloud-resource-vswitch"
description: |-
  Provides a Alicloud VPC Vswitch resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud_vswitch

Provides a VPC Vswitch resource. ## Module Support

You can use to the existing [vpc module](https://registry.terraform.io/modules/alibaba/vpc/alicloud)  to create a VPC and several VSwitches one-click.

For information about VPC Vswitch and how to use it, see [What is Vswitch](https://www.alibabacloud.com/help/en/virtual-private-cloud/latest/work-with-vswitches).

## Example Usage

Basic Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.alicloud as alicloud
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        alicloud_vpc_foo = alicloud.vpc.Vpc(self, "foo",
            cidr_block="172.16.0.0/12",
            vpc_name="terraform-example"
        )
        data_alicloud_zones_foo =
        alicloud.data_alicloud_zones.DataAlicloudZones(self, "foo_1",
            available_resource_creation="VSwitch"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_alicloud_zones_foo.override_logical_id("foo")
        alicloud_vswitch_foo = alicloud.vswitch.Vswitch(self, "foo_2",
            cidr_block="172.16.0.0/21",
            vpc_id=cdktf.Token.as_string(alicloud_vpc_foo.id),
            vswitch_name="terraform-example",
            zone_id=cdktf.Token.as_string(
                cdktf.property_access(data_alicloud_zones_foo.zones, ["0", "id"]))
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_vswitch_foo.override_logical_id("foo")
```

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.alicloud as alicloud
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        alicloud_vpc_vpc = alicloud.vpc.Vpc(self, "vpc",
            cidr_block="172.16.0.0/12",
            vpc_name="terraform-example"
        )
        alicloud_vpc_ipv4_cidr_block_cidr_blocks =
        alicloud.vpc_ipv4_cidr_block.VpcIpv4CidrBlock(self, "cidr_blocks",
            secondary_cidr_block="192.163.0.0/16",
            vpc_id=cdktf.Token.as_string(alicloud_vpc_vpc.id)
        )
        data_alicloud_zones_foo =
        alicloud.data_alicloud_zones.DataAlicloudZones(self, "foo",
            available_resource_creation="VSwitch"
        )
        alicloud.vswitch.Vswitch(self, "island-nat",
            cidr_block="172.16.0.0/21",
            tags={
                "BuiltBy": "example_value",
                "Environment": "example_value",
                "ManagedBy": "example_value",
                "cnm_version": "example_value"
            },
            vpc_id=cdktf.Token.as_string(alicloud_vpc_ipv4_cidr_block_cidr_blocks.vpc_id),
            vswitch_name="terraform-example",
            zone_id=cdktf.Token.as_string(
                cdktf.property_access(data_alicloud_zones_foo.zones, ["0", "id"]))
        )
```

Create a switch associated with the additional network segment

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.alicloud as alicloud
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        alicloud_vpc_foo = alicloud.vpc.Vpc(self, "foo",
            cidr_block="172.16.0.0/12",
            vpc_name="terraform-example"
        )
        alicloud_vpc_ipv4_cidr_block_foo =
        alicloud.vpc_ipv4_cidr_block.VpcIpv4CidrBlock(self, "foo_1",
            secondary_cidr_block="192.163.0.0/16",
            vpc_id=cdktf.Token.as_string(alicloud_vpc_foo.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_vpc_ipv4_cidr_block_foo.override_logical_id("foo")
        data_alicloud_zones_foo =
        alicloud.data_alicloud_zones.DataAlicloudZones(self, "foo_2",
            available_resource_creation="VSwitch"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_alicloud_zones_foo.override_logical_id("foo")
        alicloud_vswitch_foo = alicloud.vswitch.Vswitch(self, "foo_3",
            cidr_block="192.163.0.0/24",
            vpc_id=cdktf.Token.as_string(alicloud_vpc_ipv4_cidr_block_foo.vpc_id),
            zone_id=cdktf.Token.as_string(
                cdktf.property_access(data_alicloud_zones_foo.zones, ["0", "id"]))
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_vswitch_foo.override_logical_id("foo")
```

## Argument Reference

The following arguments are supported:
* `cidr_block` - (Required, ForceNew) The IPv4 CIDR block of the VSwitch.
* `description` - (Optional) The description of VSwitch.
* `zone_id` - (Optional, ForceNew, Available in 1.119.0+) The AZ for the VSwitch. **Note:** Required for a VPC VSwitch.
* `enable_ipv6` - (Optional, Available in v1.201.1+) Whether the IPv6 function is enabled in the switch. Value:
  - **true**: enables IPv6.
  - **false** (default): IPv6 is not enabled.
* `ipv6_cidr_block_mask` - (Optional, Available in v1.115+) The IPv6 CIDR block of the VSwitch.
* `tags` - (Optional, Map, Available in v1.55.3+) The tags of VSwitch.
* `vswitch_name` - (Optional, Available in v1.119.0+) The name of the VSwitch.
* `vpc_id` - (Required, ForceNew) The VPC ID.

The following arguments will be discarded. Please use new fields as soon as possible:
* `name` - (Deprecated from v1.119.0+) Field 'name' has been deprecated from provider version 1.119.0. New field 'vswitch_name' instead.
* `availability_zone` - (Deprecated from v1.119.0+) Field 'availability_zone' has been deprecated from provider version 1.119.0. New field 'zone_id' instead.


## Attributes Reference

The following attributes are exported:
* `id` - The ID of the resource supplied above.
* `create_time` - The creation time of the VSwitch.
* `ipv6_cidr_block` - The IPv6 CIDR block of the VSwitch.
* `status` - The status of the resource.

### Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/docs/configuration-0-11/resources.html#timeouts) for certain actions:
* `create` - (Defaults to 5 mins) Used when create the Vswitch.
* `delete` - (Defaults to 5 mins) Used when delete the Vswitch.
* `update` - (Defaults to 5 mins) Used when update the Vswitch.

## Import

VPC Vswitch can be imported using the id, e.g.

```shell
$ terraform import alicloud_vpc_vswitch.example <id>
```
<!-- cache-key: cdktf-0.17.0-pre.15 input-b7427b591e9544688b5315694fb2c6278b37cf9efca9a25490b9681c3c6b965c -->