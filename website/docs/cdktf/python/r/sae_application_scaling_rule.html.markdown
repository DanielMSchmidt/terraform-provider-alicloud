---
subcategory: "Serverless App Engine (SAE)"
layout: "alicloud"
page_title: "Alicloud: alicloud_sae_application_scaling_rule"
sidebar_current: "docs-alicloud-resource-sae-application-scaling-rule"
description: |-
  Provides a Alicloud Serverless App Engine (SAE) Application Scaling Rule resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_sae\_application\_scaling\_rule

Provides a Serverless App Engine (SAE) Application Scaling Rule resource.

For information about Serverless App Engine (SAE) Application Scaling Rule and how to use it, see [What is Application Scaling Rule](https://help.aliyun.com/document_detail/134120.html).

-> **NOTE:** Available in v1.159.0+.

## Example Usage

Basic Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.alicloud as alicloud
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        alicloud_sae_namespace_default = alicloud.sae_namespace.SaeNamespace(self, "default",
            namespace_description="example_value",
            namespace_id="example_value",
            namespace_name="example_value"
        )
        data_alicloud_vpcs_default =
        alicloud.data_alicloud_vpcs.DataAlicloudVpcs(self, "default_1",
            name_regex="default-NODELETING"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_alicloud_vpcs_default.override_logical_id("default")
        data_alicloud_vswitches_default =
        alicloud.data_alicloud_vswitches.DataAlicloudVswitches(self, "default_2",
            vpc_id=cdktf.Token.as_string(
                cdktf.property_access(data_alicloud_vpcs_default.ids, ["0"]))
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_alicloud_vswitches_default.override_logical_id("default")
        alicloud_sae_application_default =
        alicloud.sae_application.SaeApplication(self, "default_3",
            app_description="example_value",
            app_name="example_value",
            cpu=cdktf.Token.as_number("500"),
            image_url="registry-vpc.cn-hangzhou.aliyuncs.com/lxepoo/apache-php5",
            jdk="Open JDK 8",
            memory=cdktf.Token.as_number("2048"),
            namespace_id=cdktf.Token.as_string(alicloud_sae_namespace_default.namespace_id),
            package_type="Image",
            replicas=cdktf.Token.as_number("5"),
            timezone="Asia/Shanghai",
            vpc_id=cdktf.Token.as_string(
                cdktf.property_access(data_alicloud_vpcs_default.ids, ["0"])),
            vswitch_id=cdktf.Token.as_string(
                cdktf.property_access(data_alicloud_vswitches_default.ids, ["0"]))
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_sae_application_default.override_logical_id("default")
        alicloud.sae_application_scaling_rule.SaeApplicationScalingRule(self, "example",
            app_id=cdktf.Token.as_string(alicloud_sae_application_default.id),
            scaling_rule_enable=True,
            scaling_rule_metric=SaeApplicationScalingRuleScalingRuleMetric(
                max_replicas=50,
                metrics=[SaeApplicationScalingRuleScalingRuleMetricMetrics(
                    metric_target_average_utilization=20,
                    metric_type="CPU"
                ), SaeApplicationScalingRuleScalingRuleMetricMetrics(
                    metric_target_average_utilization=30,
                    metric_type="MEMORY"
                ), SaeApplicationScalingRuleScalingRuleMetricMetrics(
                    metric_target_average_utilization=20,
                    metric_type="tcpActiveConn"
                )
                ],
                min_replicas=3,
                scale_down_rules=SaeApplicationScalingRuleScalingRuleMetricScaleDownRules(
                    disabled=False,
                    stabilization_window_seconds=10,
                    step=10
                ),
                scale_up_rules=SaeApplicationScalingRuleScalingRuleMetricScaleUpRules(
                    disabled=False,
                    stabilization_window_seconds=0,
                    step=10
                )
            ),
            scaling_rule_name="example-value",
            scaling_rule_timer=SaeApplicationScalingRuleScalingRuleTimer(
                begin_date="2022-02-25",
                end_date="2022-03-25",
                period="* * *",
                schedules=[SaeApplicationScalingRuleScalingRuleTimerSchedules(
                    at_time="08:00",
                    max_replicas=10,
                    min_replicas=3
                ), SaeApplicationScalingRuleScalingRuleTimerSchedules(
                    at_time="20:00",
                    max_replicas=50,
                    min_replicas=3
                )
                ]
            ),
            scaling_rule_type="mix"
        )
```

## Argument Reference

The following arguments are supported:

* `app_id` - (Required, ForceNew) Application ID.
* `min_ready_instance_ratio` - (Optional) The min ready instance ratio.
* `min_ready_instances` - (Optional) The min ready instances.
* `scaling_rule_enable` - (Optional, Computed) True whether the auto scaling policy is enabled. The value description is as follows: true: enabled state. false: disabled status. Valid values: `false`, `true`.
* `scaling_rule_name` - (Required, ForceNew) The name of a custom elastic scaling policy. In the application, the policy name cannot be repeated. It must start with a lowercase letter, and can only contain lowercase letters, numbers, and dashes (-), and no more than 32 characters. After the scaling policy is successfully created, the policy name cannot be modified.
* `scaling_rule_type` - (Required, ForceNew) Flexible strategy type. Valid values: `mix`, `timing` and `metric`.
* `scaling_rule_timer` - (Optional) Configuration of Timing Resilient Policies. See the following `Block scaling_rule_timer`.
* `scaling_rule_metric` - (Optional) Monitor the configuration of the indicator elasticity strategy. See the following `Block scaling_rule_metric`.

#### Block scaling_rule_timer

The scaling_rule_timer supports the following:

* `begin_date` - (Optional) The Start date. When the `begin_date` and `end_date` values are empty. it indicates long-term execution and is the default value.
* `end_date` - (Optional) The End Date. When the `begin_date` and `end_date` values are empty. it indicates long-term execution and is the default value.
* `period` - (Optional) The period in which a timed elastic scaling strategy is executed.
* `schedules` - (Optional) Resilient Scaling Strategy Trigger Timing. See the following `Block schedules`.

#### Block schedules

The schedules supports the following:

* `at_time` - (Optional) Trigger point in time. When supporting format: minutes, for example: `08:00`.
* `target_replicas` - (Optional) This parameter can specify the number of instances to be applied or the minimum number of surviving instances per deployment. value range [1,50]. -> **NOTE:** The attribute is valid when the attribute `scaling_rule_type` is `timing`.
* `max_replicas` - (Optional) Maximum number of instances applied. -> **NOTE:** The attribute is valid when the attribute `scaling_rule_type` is `mix`.
* `min_replicas` - (Optional) Minimum number of instances applied. -> **NOTE:** The attribute is valid when the attribute `scaling_rule_type` is `mix`.

#### Block scaling_rule_metric

The scaling_rule_metric supports the following:

* `max_replicas` - (Optional) Maximum number of instances applied.
* `min_replicas` - (Optional) Minimum number of instances applied.
* `metrics` - (Optional) Indicator rule configuration. See the following `Block metrics`.
* `scale_up_rules` - (Optional) Apply expansion rules. See the following `Block scale_up_rules`.
* `scale_down_rules` - (Optional) Apply shrink rules. See the following `Block scale_down_rules`.

#### Block scale_up_rules

The scale_up_rules supports the following:

* `step` - (Optional) Elastic expansion or contraction step size. the maximum number of instances to be scaled in per unit time.
* `stabilization_window_seconds` - (Optional) Cooling time for expansion or contraction. Valid values: `0` to `3600`. Unit: seconds. The default is `0` seconds.
* `disabled` - (Optional) Whether shrinkage is prohibited.

#### Block scale_down_rules

The scale_down_rules supports the following:

* `step` - (Optional) Elastic expansion or contraction step size. the maximum number of instances to be scaled in per unit time.
* `stabilization_window_seconds` - (Optional) Cooling time for expansion or contraction. Valid values: `0` to `3600`. Unit: seconds. The default is `0` seconds.
* `disabled` - (Optional) Whether shrinkage is prohibited.

#### Block metrics

The metrics supports the following:

* `metric_target_average_utilization` - (Optional) According to different `metric_type`, set the target value of the corresponding monitoring index.
* `metric_type` - (Optional) Monitoring indicator trigger condition. Valid values: `CPU`, `MEMORY`, `tcpActiveConn`, `QPS`, `RT`, `SLB_QPS`, `SLB_RT`, `INTRANET_SLB_QPS` and `INTRANET_SLB_RT`. The values are described as follows:
  - CPU: CPU usage.
  - MEMORY: MEMORY usage.
  - tcpActiveConn: The average number of TCP active connections for a single instance in 30 seconds.
  - QPS: The average QPS of a single instance within 1 minute of JAVA application.
  - RT: The average response time of all service interfaces within 1 minute of JAVA application.
  - SLB_QPS: The average public network SLB QPS of a single instance within 15 seconds.
  - SLB_RT: The average response time of public network SLB within 15 seconds.
  - INTRANET_SLB_QPS: The average private network SLB QPS of a single instance within 15 seconds.
  - INTRANET_SLB_RT: The average response time of private network SLB within 15 seconds.
**NOTE:** From version 1.206.0, `metric_type` can be set to `QPS`, `RT`, `INTRANET_SLB_QPS`, `INTRANET_SLB_RT`.
* `slb_id` - (Optional, Available in 1.206.0+) SLB ID.
* `slb_project` - (Optional, Available in 1.206.0+) The project of the Log Service.
* `slb_log_store` - (Optional, Available in 1.206.0+) The log store of the Log Service.
* `vport` - (Optional, Available in 1.206.0+) SLB listening port.

## Attributes Reference

The following attributes are exported:

* `id` - The resource ID of Application Scaling Rule. The value formats as `<app_id>:<scaling_rule_name>`.

## Import

Serverless App Engine (SAE) Application Scaling Rule can be imported using the id, e.g.

```shell
$ terraform import alicloud_sae_application_scaling_rule.example <app_id>:<scaling_rule_name>
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-ba6306da6fc2e9d051e3464ec3ad18454a07cc17ec696a1d8c944db68bc01c34 -->