---
subcategory: "NAT Gateway"
layout: "alicloud"
page_title: "Alicloud: alicloud_vpc_nat_ip"
sidebar_current: "docs-alicloud-resource-vpc-nat-ip"
description: |-
  Provides a Alicloud VPC Nat Ip resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_vpc\_nat\_ip

Provides a VPC Nat Ip resource.

For information about VPC Nat Ip and how to use it, see [What is Nat Ip](https://www.alibabacloud.com/help/doc-detail/281976.htm).

-> **NOTE:** Available in v1.136.0+.

## Example Usage

Basic Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.alicloud as alicloud
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        alicloud_vpc_example = alicloud.vpc.Vpc(self, "example",
            cidr_block="172.16.0.0/12",
            vpc_name="terraform-example"
        )
        data_alicloud_zones_example =
        alicloud.data_alicloud_zones.DataAlicloudZones(self, "example_1",
            available_resource_creation="VSwitch"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_alicloud_zones_example.override_logical_id("example")
        alicloud_vswitch_example = alicloud.vswitch.Vswitch(self, "example_2",
            cidr_block="172.16.0.0/21",
            vpc_id=cdktf.Token.as_string(alicloud_vpc_example.id),
            vswitch_name="terraform-example",
            zone_id=cdktf.Token.as_string(
                cdktf.property_access(data_alicloud_zones_example.zones, ["0", "id"]))
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_vswitch_example.override_logical_id("example")
        alicloud_nat_gateway_example = alicloud.nat_gateway.NatGateway(self, "example_3",
            description="terraform-example",
            internet_charge_type="PayByLcu",
            nat_gateway_name="terraform-example",
            nat_type="Enhanced",
            network_type="intranet",
            vpc_id=cdktf.Token.as_string(alicloud_vpc_example.id),
            vswitch_id=cdktf.Token.as_string(alicloud_vswitch_example.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_nat_gateway_example.override_logical_id("example")
        alicloud_vpc_nat_ip_cidr_example = alicloud.vpc_nat_ip_cidr.VpcNatIpCidr(self, "example_4",
            nat_gateway_id=cdktf.Token.as_string(alicloud_nat_gateway_example.id),
            nat_ip_cidr="192.168.0.0/16",
            nat_ip_cidr_description="terraform-example",
            nat_ip_cidr_name="terraform-example"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_vpc_nat_ip_cidr_example.override_logical_id("example")
        alicloud_vpc_nat_ip_example = alicloud.vpc_nat_ip.VpcNatIp(self, "example_5",
            nat_gateway_id=cdktf.Token.as_string(alicloud_nat_gateway_example.id),
            nat_ip="192.168.0.37",
            nat_ip_cidr=cdktf.Token.as_string(alicloud_vpc_nat_ip_cidr_example.nat_ip_cidr),
            nat_ip_description="example_value",
            nat_ip_name="example_value"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_vpc_nat_ip_example.override_logical_id("example")
```

## Argument Reference

The following arguments are supported:

* `dry_run` - (Optional, Computed) Specifies whether to check the validity of the request without actually making the request.
* `nat_gateway_id` - (Required, ForceNew) The ID of the Virtual Private Cloud (VPC) NAT gateway for which you want to create the NAT IP address.
* `nat_ip` - (Optional, ForceNew, Computed) The NAT IP address that you want to create. If you do not specify an IP address, the system selects a random IP address from the specified CIDR block.
* `nat_ip_cidr` - (Optional, ForceNew) NAT IP ADDRESS of the address segment.
* `nat_ip_cidr_id` - (Optional) The ID of the CIDR block to which the NAT IP address belongs.
* `nat_ip_description` - (Optional) NAT IP ADDRESS description of information. Length is from `2` to `256` characters, must start with a letter or the Chinese at the beginning, but not at the` http://` Or `https://` at the beginning.
* `nat_ip_name` - (Optional) NAT IP ADDRESS the name of the root directory. Length is from `2` to `128` characters, must start with a letter or the Chinese at the beginning can contain numbers, half a period (.), underscore (_) and dash (-). But do not start with `http://` or `https://` at the beginning.

## Attributes Reference

The following attributes are exported:

* `id` - The resource ID in terraform of Nat Ip. The value formats as `<nat_gateway_id>:<nat_ip_id>`.
* `nat_ip_id` - Ihe ID of the Nat Ip.
* `status` - The status of the NAT IP address. Valid values: `Available`, `Deleting`, `Creating` and `Deleted`. 

### Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/docs/configuration-0-11/resources.html#timeouts) for certain actions:

* `create` - (Defaults to 1 mins) Used when create the Nat Ip.
* `delete` - (Defaults to 1 mins) Used when delete the Nat Ip.

## Import

VPC Nat Ip can be imported using the id, e.g.

```shell
$ terraform import alicloud_vpc_nat_ip.example <nat_gateway_id>:<nat_ip_id>
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-4c4810bad18618a1a965c3a95e0d99ab306f33ac5c4638680ace9fc53fc8667c -->