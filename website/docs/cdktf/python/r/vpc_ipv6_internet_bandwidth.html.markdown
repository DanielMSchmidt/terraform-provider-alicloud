---
subcategory: "VPC"
layout: "alicloud"
page_title: "Alicloud: alicloud_vpc_ipv6_internet_bandwidth"
sidebar_current: "docs-alicloud-resource-vpc-ipv6-internet-bandwidth"
description: |-
  Provides a Alicloud VPC Ipv6 Internet Bandwidth resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_vpc\_ipv6\_internet\_bandwidth

Provides a VPC Ipv6 Internet Bandwidth resource.

For information about VPC Ipv6 Internet Bandwidth and how to use it, see [What is Ipv6 Internet Bandwidth](https://www.alibabacloud.com/help/doc-detail/102213.htm).

-> **NOTE:** Available in v1.143.0+.

## Example Usage

Basic Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.alicloud as alicloud
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        data_alicloud_instances_example =
        alicloud.data_alicloud_instances.DataAlicloudInstances(self, "example",
            name_regex="ecs_with_ipv6_address",
            status="Running"
        )
        data_alicloud_vpc_ipv6_addresses_example =
        alicloud.data_alicloud_vpc_ipv6_addresses.DataAlicloudVpcIpv6Addresses(self, "example_1",
            associated_instance_id=cdktf.Token.as_string(
                cdktf.property_access(data_alicloud_instances_example.instances, ["0", "id"
                ])),
            status="Available"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_alicloud_vpc_ipv6_addresses_example.override_logical_id("example")
        alicloud_vpc_ipv6_internet_bandwidth_example =
        alicloud.vpc_ipv6_internet_bandwidth.VpcIpv6InternetBandwidth(self, "example_2",
            bandwidth=cdktf.Token.as_number("20"),
            internet_charge_type="PayByBandwidth",
            ipv6_address_id=cdktf.Token.as_string(
                cdktf.property_access(data_alicloud_vpc_ipv6_addresses_example.addresses, ["0", "id"])),
            ipv6_gateway_id=cdktf.Token.as_string(
                cdktf.property_access(data_alicloud_vpc_ipv6_addresses_example.addresses, ["0", "ipv6_gateway_id"]))
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_vpc_ipv6_internet_bandwidth_example.override_logical_id("example")
```

## Argument Reference

The following arguments are supported:

* `bandwidth` - (Required) The amount of Internet bandwidth resources of the IPv6 address, Unit: `Mbit/s`. Valid values: `1` to `5000`. **NOTE:** If `internet_charge_type` is set to `PayByTraffic`, the amount of Internet bandwidth resources of the IPv6 address is limited by the specification of the IPv6 gateway. `Small` (default): specifies the Free edition and the Internet bandwidth is from `1` to `500` Mbit/s. `Medium`: specifies the Medium edition and the Internet bandwidth is from `1` to `1000` Mbit/s. `Large`: specifies the Large edition and the Internet bandwidth is from `1` to `2000` Mbit/s.
* `internet_charge_type` - (Optional, Computed, ForceNew) The metering method of the Internet bandwidth resources of the IPv6 gateway. Valid values: `PayByBandwidth`, `PayByTraffic`.
* `ipv6_address_id` - (Required, ForceNew) The ID of the IPv6 address.
* `ipv6_gateway_id` - (Required, ForceNew) The ID of the IPv6 gateway.

## Attributes Reference

The following attributes are exported:

* `id` - The resource ID in terraform of Ipv6 Internet Bandwidth.
* `status` - The status of the resource.Valid values:`Normal`, `FinancialLocked` and `SecurityLocked`.

## Import

VPC Ipv6 Internet Bandwidth can be imported using the id, e.g.

```shell
$ terraform import alicloud_vpc_ipv6_internet_bandwidth.example <id>
```
<!-- cache-key: cdktf-0.17.0-pre.15 input-a1aef20766cdac7dc5ba64c90a3b66471a0192e85b376cf051eedbb5176c24c7 -->