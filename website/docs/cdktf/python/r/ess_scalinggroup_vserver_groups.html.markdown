---
subcategory: "Auto Scaling"
layout: "alicloud"
page_title: "Alicloud: alicloud_ess_scalinggroup_vserver_groups"
sidebar_current: "docs-alicloud-resource-ess_scalinggroup_vserver_groups"
description: |-
  Provides a ESS Attachment resource to attach or remove vserver groups.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_ess\_scalinggroup\_vserver\_groups

Attaches/Detaches vserver groups to a specified scaling group.

-> **NOTE:** The load balancer of which vserver groups belongs to must be in `active` status.

-> **NOTE:** If scaling group's network type is `VPC`, the vserver groups must be in the same `VPC`.
 
-> **NOTE:** A scaling group can have at most 5 vserver groups attached by default.

-> **NOTE:** Vserver groups and the default group of loadbalancer share the same backend server quota.

-> **NOTE:** When attach vserver groups to scaling group, existing ECS instances will be added to vserver groups; Instead, ECS instances will be removed from vserver group when detach.

-> **NOTE:** Detach action will be executed before attach action.

-> **NOTE:** Vserver group is defined uniquely by `loadbalancer_id`, `vserver_group_id`, `port`.

-> **NOTE:** Modifing `weight` attribute means detach vserver group first and then, attach with new weight parameter.

-> **NOTE:** Resource `alicloud_ess_scalinggroup_vserver_groups` is available in 1.53.0+.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.alicloud as alicloud
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        # Terraform Variables are not always the best fit for getting inputs in the context of Terraform CDK.
        #     You can read more about this at https://cdk.tf/variables
        name = cdktf.TerraformVariable(self, "name",
            default="testAccEssVserverGroupsAttachment"
        )
        alicloud_vpc_default = alicloud.vpc.Vpc(self, "default",
            cidr_block="172.16.0.0/16",
            name=name.string_value
        )
        data_alicloud_zones_default =
        alicloud.data_alicloud_zones.DataAlicloudZones(self, "default_2",
            available_disk_category="cloud_efficiency",
            available_resource_creation="VSwitch"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_alicloud_zones_default.override_logical_id("default")
        alicloud_vswitch_default = alicloud.vswitch.Vswitch(self, "default_3",
            cidr_block="172.16.0.0/24",
            name=name.string_value,
            vpc_id=cdktf.Token.as_string(alicloud_vpc_default.id),
            zone_id=cdktf.Token.as_string(
                cdktf.property_access(data_alicloud_zones_default.zones, ["0", "id"]))
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_vswitch_default.override_logical_id("default")
        alicloud_ess_scaling_group_default =
        alicloud.ess_scaling_group.EssScalingGroup(self, "default_4",
            max_size=cdktf.Token.as_number("2"),
            min_size=cdktf.Token.as_number("2"),
            scaling_group_name=name.string_value,
            vswitch_ids=[cdktf.Token.as_string(alicloud_vswitch_default.id)]
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_ess_scaling_group_default.override_logical_id("default")
        alicloud_slb_load_balancer_default =
        alicloud.slb_load_balancer.SlbLoadBalancer(self, "default_5",
            load_balancer_name=name.string_value,
            vswitch_id=cdktf.Token.as_string(alicloud_vswitch_default.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_slb_load_balancer_default.override_logical_id("default")
        alicloud_slb_server_group_default =
        alicloud.slb_server_group.SlbServerGroup(self, "default_6",
            load_balancer_id=cdktf.Token.as_string(alicloud_slb_load_balancer_default.id),
            name="test"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_slb_server_group_default.override_logical_id("default")
        alicloud_ess_scalinggroup_vserver_groups_default =
        alicloud.ess_scalinggroup_vserver_groups.EssScalinggroupVserverGroups(self, "default_7",
            scaling_group_id=cdktf.Token.as_string(alicloud_ess_scaling_group_default.id),
            vserver_groups=[EssScalinggroupVserverGroupsVserverGroups(
                loadbalancer_id=cdktf.Token.as_string(alicloud_slb_load_balancer_default.id),
                vserver_attributes=[EssScalinggroupVserverGroupsVserverGroupsVserverAttributes(
                    port=cdktf.Token.as_number("100"),
                    vserver_group_id=cdktf.Token.as_string(alicloud_slb_server_group_default.id),
                    weight=cdktf.Token.as_number("60")
                )
                ]
            )
            ]
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_ess_scalinggroup_vserver_groups_default.override_logical_id("default")
        # In most cases loops should be handled in the programming language context and
        #     not inside of the Terraform context. If you are looping over something external, e.g. a variable or a file input
        #     you should consider using a for loop. If you are looping over something only known to Terraform, e.g. a result of a data source
        #     you need to keep this like it is.
        alicloud_slb_listener_default_count = cdktf.TerraformCount.of(
            cdktf.Token.as_number("2"))
        alicloud_slb_listener_default = alicloud.slb_listener.SlbListener(self, "default_8",
            backend_port=cdktf.Token.as_number("22"),
            bandwidth=cdktf.Token.as_number("10"),
            frontend_port=cdktf.Token.as_number("22"),
            health_check_type="tcp",
            load_balancer_id=cdktf.Token.as_string(
                cdktf.Fn.element(
                    cdktf.property_access(alicloud_slb_load_balancer_default, ["*", "id"]),
                    cdktf.Token.as_number(alicloud_slb_listener_default_count.index))),
            protocol="tcp",
            count=alicloud_slb_listener_default_count
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_slb_listener_default.override_logical_id("default")
```

## Argument Reference

The following arguments are supported:

* `scaling_group_id` - (Required) ID of the scaling group.
* `vserver_groups` - (Required) A list of vserver groups attached on scaling group. See [Block vserver_group](#block-vserver_group) below for details.
* `force` - (Optional, Available in 1.64.0+) If instances of scaling group are attached/removed from slb backend server when attach/detach vserver group from scaling group. Default to true.

## Block vserver_group

the vserver_group supports the following:

* `loadbalancer_id` - (Required) Loadbalancer server ID of VServer Group.
* `vserver_attributes` - (Required) A list of VServer Group attributes. See [Block vserver_attribute](#block-vserver_attribute) below for details.

## Block vserver_attribute

* `vserver_group_id` - (Required) ID of VServer Group.
* `port` - (Required) - The port will be used for VServer Group backend server.
* `weight` - (Required) The weight of an ECS instance attached to the VServer Group.

## Attributes Reference

The following attributes are exported:

* `id` - (Required, ForceNew) The ESS vserver groups attachment resource ID.

## Import

ESS vserver groups can be imported using the id, e.g.

```shell
$ terraform import alicloud_ess_vserver_groups.example abc123456
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-6e96384417700efaf088c24f8fea50e5552f7f8d8214db281214271a19571569 -->