---
subcategory: "Auto Scaling"
layout: "alicloud"
page_title: "Alicloud: alicloud_ess_attachment"
sidebar_current: "docs-alicloud-resource-ess-attachment"
description: |-
  Provides a ESS Attachment resource to attach or remove ECS instances.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_ess\_attachment

Attaches several ECS instances to a specified scaling group or remove them from it.

-> **NOTE:** ECS instances can be attached or remove only when the scaling group is active, and it has no scaling activity in progress.

-> **NOTE:** There are two types ECS instances in a scaling group: "AutoCreated" and "Attached". The total number of them can not larger than the scaling group "MaxSize".

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.alicloud as alicloud
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        # Terraform Variables are not always the best fit for getting inputs in the context of Terraform CDK.
        #     You can read more about this at https://cdk.tf/variables
        name = cdktf.TerraformVariable(self, "name",
            default="essattachmentconfig"
        )
        alicloud_vpc_default = alicloud.vpc.Vpc(self, "default",
            cidr_block="172.16.0.0/16",
            vpc_name=name.string_value
        )
        data_alicloud_images_default =
        alicloud.data_alicloud_images.DataAlicloudImages(self, "default_2",
            most_recent=True,
            name_regex="^ubuntu_18.*64",
            owners="system"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_alicloud_images_default.override_logical_id("default")
        data_alicloud_zones_default =
        alicloud.data_alicloud_zones.DataAlicloudZones(self, "default_3",
            available_disk_category="cloud_efficiency",
            available_resource_creation="VSwitch"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_alicloud_zones_default.override_logical_id("default")
        alicloud_security_group_default =
        alicloud.security_group.SecurityGroup(self, "default_4",
            name=name.string_value,
            vpc_id=cdktf.Token.as_string(alicloud_vpc_default.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_security_group_default.override_logical_id("default")
        alicloud_security_group_rule_default =
        alicloud.security_group_rule.SecurityGroupRule(self, "default_5",
            cidr_ip="172.16.0.0/24",
            ip_protocol="tcp",
            nic_type="intranet",
            policy="accept",
            port_range="22/22",
            priority=1,
            security_group_id=cdktf.Token.as_string(alicloud_security_group_default.id),
            type="ingress"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_security_group_rule_default.override_logical_id("default")
        alicloud_vswitch_default = alicloud.vswitch.Vswitch(self, "default_6",
            cidr_block="172.16.0.0/24",
            name=name.string_value,
            vpc_id=cdktf.Token.as_string(alicloud_vpc_default.id),
            zone_id=cdktf.Token.as_string(
                cdktf.property_access(data_alicloud_zones_default.zones, ["0", "id"]))
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_vswitch_default.override_logical_id("default")
        data_alicloud_instance_types_default =
        alicloud.data_alicloud_instance_types.DataAlicloudInstanceTypes(self, "default_7",
            availability_zone=cdktf.Token.as_string(
                cdktf.property_access(data_alicloud_zones_default.zones, ["0", "id"])),
            cpu_core_count=2,
            memory_size=4
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_alicloud_instance_types_default.override_logical_id("default")
        alicloud_ess_scaling_group_default =
        alicloud.ess_scaling_group.EssScalingGroup(self, "default_8",
            max_size=2,
            min_size=0,
            removal_policies=["OldestInstance", "NewestInstance"],
            scaling_group_name=name.string_value,
            vswitch_ids=[cdktf.Token.as_string(alicloud_vswitch_default.id)]
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_ess_scaling_group_default.override_logical_id("default")
        # In most cases loops should be handled in the programming language context and
        #     not inside of the Terraform context. If you are looping over something external, e.g. a variable or a file input
        #     you should consider using a for loop. If you are looping over something only known to Terraform, e.g. a result of a data source
        #     you need to keep this like it is.
        alicloud_instance_default_count = cdktf.TerraformCount.of(
            cdktf.Token.as_number("2"))
        alicloud_instance_default = alicloud.instance.Instance(self, "default_9",
            image_id=cdktf.Token.as_string(
                cdktf.property_access(data_alicloud_images_default.images, ["0", "id"])),
            instance_charge_type="PostPaid",
            instance_name=name.string_value,
            instance_type=cdktf.Token.as_string(
                cdktf.property_access(data_alicloud_instance_types_default.instance_types, ["0", "id"
                ])),
            internet_charge_type="PayByTraffic",
            internet_max_bandwidth_out=cdktf.Token.as_number("10"),
            security_groups=[cdktf.Token.as_string(alicloud_security_group_default.id)],
            system_disk_category="cloud_efficiency",
            vswitch_id=cdktf.Token.as_string(alicloud_vswitch_default.id),
            count=alicloud_instance_default_count
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_instance_default.override_logical_id("default")
        alicloud_ess_attachment_default =
        alicloud.ess_attachment.EssAttachment(self, "default_10",
            force=True,
            instance_ids=[
                cdktf.Token.as_string(
                    cdktf.property_access(alicloud_instance_default, ["0", "id"])),
                cdktf.Token.as_string(
                    cdktf.property_access(alicloud_instance_default, ["1", "id"]))
            ],
            scaling_group_id=cdktf.Token.as_string(alicloud_ess_scaling_group_default.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_ess_attachment_default.override_logical_id("default")
        alicloud_ess_scaling_configuration_default =
        alicloud.ess_scaling_configuration.EssScalingConfiguration(self, "default_11",
            active=True,
            enable=True,
            force_delete=True,
            image_id=cdktf.Token.as_string(
                cdktf.property_access(data_alicloud_images_default.images, ["0", "id"])),
            instance_type=cdktf.Token.as_string(
                cdktf.property_access(data_alicloud_instance_types_default.instance_types, ["0", "id"])),
            scaling_group_id=cdktf.Token.as_string(alicloud_ess_scaling_group_default.id),
            security_group_id=cdktf.Token.as_string(alicloud_security_group_default.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_ess_scaling_configuration_default.override_logical_id("default")
```

## Argument Reference

The following arguments are supported:

* `scaling_group_id` - (Required) ID of the scaling group of a scaling configuration.
* `instance_ids` - (Required) ID of the ECS instance to be attached to the scaling group. You can input up to 20 IDs.
* `force` - (Optional) Whether to remove forcibly "AutoCreated" ECS instances in order to release scaling group capacity "MaxSize" for attaching ECS instances. Default to false.

-> **NOTE:** "AutoCreated" ECS instance will be deleted after it is removed from scaling group, but "Attached" will be not.

-> **NOTE:** Restrictions on attaching ECS instances:

   - The attached ECS instances and the scaling group must have the same region and network type(`Classic` or `VPC`).
   - The attached ECS instances and the instance with active scaling configurations must have the same instance type.
   - The attached ECS instances must in the running state.
   - The attached ECS instances has not been attached to other scaling groups.
   - The attached ECS instances supports Subscription and Pay-As-You-Go payment methods.

## Attributes Reference

The following attributes are exported:

* `id` - (Required, ForceNew) The ESS attachment resource ID.
* `instance_ids` - (Required)ID of list "Attached" ECS instance.
* `force` - Whether to delete "AutoCreated" ECS instances.

## Import

ESS attachment can be imported using the id or scaling group id, e.g.

```shell
$ terraform import alicloud_ess_attachment.example asg-abc123456
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-20f6e456df69aa7e471a4b3ad854090793d6cc38aa41f2fd4f64da0a101599b3 -->