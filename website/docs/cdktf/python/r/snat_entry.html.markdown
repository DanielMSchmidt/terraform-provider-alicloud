---
subcategory: "NAT Gateway"
layout: "alicloud"
page_title: "Alicloud: alicloud_snat_entry"
sidebar_current: "docs-alicloud-resource-vpc"
description: |-
  Provides a Alicloud snat resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_snat\_entry

Provides a snat resource.

## Example Usage

Basic Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.alicloud as alicloud
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        # Terraform Variables are not always the best fit for getting inputs in the context of Terraform CDK.
        #     You can read more about this at https://cdk.tf/variables
        name = cdktf.TerraformVariable(self, "name",
            default="snat-entry-example-name"
        )
        alicloud_common_bandwidth_package_default =
        alicloud.common_bandwidth_package.CommonBandwidthPackage(self, "default",
            bandwidth=cdktf.Token.as_string(10),
            internet_charge_type="PayByTraffic",
            name="tf_cbp",
            ratio=100
        )
        # In most cases loops should be handled in the programming language context and
        #     not inside of the Terraform context. If you are looping over something external, e.g. a variable or a file input
        #     you should consider using a for loop. If you are looping over something only known to Terraform, e.g. a result of a data source
        #     you need to keep this like it is.
        alicloud_eip_address_default_count = cdktf.TerraformCount.of(
            cdktf.Token.as_number("2"))
        alicloud_eip_address_default = alicloud.eip_address.EipAddress(self, "default_2",
            address_name=name.string_value,
            count=alicloud_eip_address_default_count
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_eip_address_default.override_logical_id("default")
        alicloud_vpc_vpc = alicloud.vpc.Vpc(self, "vpc",
            cidr_block="172.16.0.0/12",
            vpc_name=name.string_value
        )
        data_alicloud_zones_default =
        alicloud.data_alicloud_zones.DataAlicloudZones(self, "default_4",
            available_resource_creation="VSwitch"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_alicloud_zones_default.override_logical_id("default")
        # In most cases loops should be handled in the programming language context and
        #     not inside of the Terraform context. If you are looping over something external, e.g. a variable or a file input
        #     you should consider using a for loop. If you are looping over something only known to Terraform, e.g. a result of a data source
        #     you need to keep this like it is.
        alicloud_common_bandwidth_package_attachment_default_count =
        cdktf.TerraformCount.of(cdktf.Token.as_number("2"))
        alicloud_common_bandwidth_package_attachment_default =
        alicloud.common_bandwidth_package_attachment.CommonBandwidthPackageAttachment(self, "default_5",
            bandwidth_package_id=cdktf.Token.as_string(alicloud_common_bandwidth_package_default.id),
            instance_id=cdktf.Token.as_string(
                cdktf.Fn.element(
                    cdktf.property_access(alicloud_eip_address_default, ["*", "id"]),
                    cdktf.Token.as_number(alicloud_common_bandwidth_package_attachment_default_count.index))),
            count=alicloud_common_bandwidth_package_attachment_default_count
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_common_bandwidth_package_attachment_default.override_logical_id("default")
        alicloud_vswitch_vswitch = alicloud.vswitch.Vswitch(self, "vswitch",
            cidr_block="172.16.0.0/21",
            name=name.string_value,
            vpc_id=cdktf.Token.as_string(alicloud_vpc_vpc.id),
            zone_id=cdktf.Token.as_string(
                cdktf.property_access(data_alicloud_zones_default.zones, ["0", "id"]))
        )
        alicloud_nat_gateway_default = alicloud.nat_gateway.NatGateway(self, "default_7",
            name=name.string_value,
            specification="Small",
            vpc_id=cdktf.Token.as_string(alicloud_vswitch_vswitch.vpc_id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_nat_gateway_default.override_logical_id("default")
        # In most cases loops should be handled in the programming language context and
        #     not inside of the Terraform context. If you are looping over something external, e.g. a variable or a file input
        #     you should consider using a for loop. If you are looping over something only known to Terraform, e.g. a result of a data source
        #     you need to keep this like it is.
        alicloud_eip_association_default_count = cdktf.TerraformCount.of(
            cdktf.Token.as_number("2"))
        alicloud_eip_association_default =
        alicloud.eip_association.EipAssociation(self, "default_8",
            allocation_id=cdktf.Token.as_string(
                cdktf.Fn.element(
                    cdktf.property_access(alicloud_eip_address_default, ["*", "id"]),
                    cdktf.Token.as_number(alicloud_eip_association_default_count.index))),
            instance_id=cdktf.Token.as_string(alicloud_nat_gateway_default.id),
            count=alicloud_eip_association_default_count
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_eip_association_default.override_logical_id("default")
        alicloud_snat_entry_default = alicloud.snat_entry.SnatEntry(self, "default_9",
            depends_on=[alicloud_eip_association_default],
            snat_ip=cdktf.Fn.join(",",
                cdktf.Token.as_list(
                    cdktf.property_access(alicloud_eip_address_default, ["*", "ip_address"]))),
            snat_table_id=cdktf.Token.as_string(alicloud_nat_gateway_default.snat_table_ids),
            source_vswitch_id=cdktf.Token.as_string(alicloud_vswitch_vswitch.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_snat_entry_default.override_logical_id("default")
```

## Argument Reference

The following arguments are supported:

* `snat_table_id` - (Required, ForceNew) The value can get from `alicloud_nat_gateway` Attributes "snat_table_ids".
* `source_vswitch_id` - (Optional, ForceNew, Computed) The vswitch ID.
* `source_cidr` - (Optional, ForceNew, Available in 1.71.1+, Computed) The private network segment of Ecs. This parameter and the `source_vswitch_id` parameter are mutually exclusive and cannot appear at the same time.
* `snat_entry_name` - (Optional, Available in 1.71.2+) The name of snat entry.
* `snat_ip` - (Required, ForceNew) The SNAT ip address, the ip must along bandwidth package public ip which `alicloud_nat_gateway` argument `bandwidth_packages`.

## Attributes Reference

The following attributes are exported:

* `id` - The ID of the snat entry. The value formats as `<snat_table_id>:<snat_entry_id>`
* `snat_entry_id` - The id of the snat entry on the server.
* `status` - (Available in 1.119.1+) The status of snat entry.

### Timeouts

-> **NOTE:** Available in 1.119.1+.

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/docs/configuration-0-11/resources.html#timeouts) for certain actions:

* `create` - (Defaults to 2 mins) Used when create the snat.
* `update` - (Defaults to 2 mins) Used when update the snat.
* `delete` - (Defaults to 2 mins) Used when delete the snat.

## Import

Snat Entry can be imported using the id, e.g.

```shell
$ terraform import alicloud_snat_entry.foo stb-1aece3:snat-232ce2
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-a63c4a86d82cef39a72840082cadd5b1b79cc996edbb1d93a4e4a74d7b68a14d -->