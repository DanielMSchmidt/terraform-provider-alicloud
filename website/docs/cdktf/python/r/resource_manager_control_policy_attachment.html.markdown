---
subcategory: "Resource Manager"
layout: "alicloud"
page_title: "Alicloud: alicloud_resource_manager_control_policy_attachment"
sidebar_current: "docs-alicloud-resource-resource-manager-control-policy-attachment"
description: |-
  Provides a Alicloud Resource Manager Control Policy Attachment resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_resource\_manager\_control\_policy\_attachment

Provides a Resource Manager Control Policy Attachment resource.

For information about Resource Manager Control Policy Attachment and how to use it, see [What is Control Policy Attachment](https://help.aliyun.com/document_detail/208330.html).

-> **NOTE:** Available in v1.120.0+.

## Example Usage

Basic Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.alicloud as alicloud
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        alicloud_resource_manager_control_policy_example =
        alicloud.resource_manager_control_policy.ResourceManagerControlPolicy(self, "example",
            control_policy_name="tf-testAccName",
            description="tf-testAccRDControlPolicy",
            effect_scope="RAM",
            policy_document="  {\n    \"Version\": \"1\",\n    \"Statement\": [\n      {\n        \"Effect\": \"Deny\",\n        \"Action\": [\n          \"ram:UpdateRole\",\n          \"ram:DeleteRole\",\n          \"ram:AttachPolicyToRole\",\n          \"ram:DetachPolicyFromRole\"\n        ],\n        \"Resource\": \"acs:ram:*:*:role/ResourceDirectoryAccountAccessRole\"\n      }\n    ]\n  }\n"
        )
        alicloud_resource_manager_folder_example =
        alicloud.resource_manager_folder.ResourceManagerFolder(self, "example_1",
            folder_name="tf-testAccName"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_resource_manager_folder_example.override_logical_id("example")
        alicloud_resource_manager_resource_directory_example =
        alicloud.resource_manager_resource_directory.ResourceManagerResourceDirectory(self, "example_2",
            status="Enabled"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_resource_manager_resource_directory_example.override_logical_id("example")
        alicloud_resource_manager_control_policy_attachment_example =
        alicloud.resource_manager_control_policy_attachment.ResourceManagerControlPolicyAttachment(self, "example_3",
            depends_on=[alicloud_resource_manager_resource_directory_example],
            policy_id=cdktf.Token.as_string(alicloud_resource_manager_control_policy_example.id),
            target_id=cdktf.Token.as_string(alicloud_resource_manager_folder_example.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_resource_manager_control_policy_attachment_example.override_logical_id("example")
```

## Argument Reference

The following arguments are supported:

* `policy_id` - (Required, ForceNew) The ID of control policy.
* `target_id` - (Required, ForceNew) The ID of target.

## Attributes Reference

The following attributes are exported:

* `id` - The resource ID of Control Policy Attachment. The value is formatted `<policy_id>:<target_id>`.

## Import

Resource Manager Control Policy Attachment can be imported using the id, e.g.

```shell
$ terraform import alicloud_resource_manager_control_policy_attachment.example <policy_id>:<target_id>
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-26218044700b39b52ff43a38d1bdaff102453e232d9a6f887b2041ebf7327010 -->