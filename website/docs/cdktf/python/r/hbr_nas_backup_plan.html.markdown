---
subcategory: "Hybrid Backup Recovery (HBR)"
layout: "alicloud"
page_title: "Alicloud: alicloud_hbr_nas_backup_plan"
sidebar_current: "docs-alicloud-resource-hbr-nas-backup-plan"
description: |-
  Provides a Alicloud Hybrid Backup Recovery (HBR) Nas Backup Plan resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_hbr\_nas\_backup\_plan

Provides a HBR Nas Backup Plan resource.

For information about HBR Nas Backup Plan and how to use it, see [What is Nas Backup Plan](https://www.alibabacloud.com/help/doc-detail/132248.htm).

-> **NOTE:** Available in v1.132.0+.

## Example Usage

Basic Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.alicloud as alicloud
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        # Terraform Variables are not always the best fit for getting inputs in the context of Terraform CDK.
        #     You can read more about this at https://cdk.tf/variables
        name = cdktf.TerraformVariable(self, "name",
            default="tf-testAccHBRNas"
        )
        alicloud_hbr_vault_default = alicloud.hbr_vault.HbrVault(self, "default",
            vault_name=name.string_value
        )
        alicloud_nas_file_system_default =
        alicloud.nas_file_system.NasFileSystem(self, "default_2",
            description=name.string_value,
            encrypt_type=cdktf.Token.as_number("1"),
            protocol_type="NFS",
            storage_type="Performance"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_nas_file_system_default.override_logical_id("default")
        data_alicloud_nas_file_systems_default =
        alicloud.data_alicloud_nas_file_systems.DataAlicloudNasFileSystems(self, "default_3",
            description_regex=cdktf.Token.as_string(alicloud_nas_file_system_default.description),
            protocol_type="NFS"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_alicloud_nas_file_systems_default.override_logical_id("default")
        alicloud_hbr_nas_backup_plan_default =
        alicloud.hbr_nas_backup_plan.HbrNasBackupPlan(self, "default_4",
            backup_type="COMPLETE",
            create_time=cdktf.Token.as_string(
                cdktf.property_access(data_alicloud_nas_file_systems_default.systems, ["0", "create_time"
                ])),
            depends_on=["alicloud_nas_file_system.default"],
            file_system_id=cdktf.Token.as_string(alicloud_nas_file_system_default.id),
            nas_backup_plan_name=name.string_value,
            path=["/"],
            retention="2",
            schedule="I|1602673264|PT2H",
            vault_id=cdktf.Token.as_string(alicloud_hbr_vault_default.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_hbr_nas_backup_plan_default.override_logical_id("default")
```

## Argument Reference

The following arguments are supported:

* `nas_backup_plan_name` - (Required) The name of the backup plan. 1~64 characters, the backup plan name of each data source type in a single warehouse required to be unique.
* `vault_id` - (Required, ForceNew) The ID of Backup vault.
* `retention` - (Required) Backup retention days, the minimum is 1.
* `schedule` - (Required) Backup strategy. Optional format: `I|{startTime}|{interval}`. It means to execute a backup task every `{interval}` starting from `{startTime}`. The backup task for the elapsed time will not be compensated. If the last backup task has not completed yet, the next backup task will not be triggered.
    * `startTime` Backup start time, UNIX time seconds.
    * `interval` ISO8601 time interval. E.g: `PT1H` means one hour apart. `P1D` means one day apart.
* `disabled` - (Optional) Whether to disable the backup task. Valid values: `true`, `false`.
* `backup_type` - (Required, ForceNew) Backup type. Valid values: `COMPLETE`.
* `file_system_id` - (Required, ForceNew) The File System ID of Nas.
* `create_time` - (Optional, Deprecated) This field has been deprecated from provider version 1.153.0+. The creation time of NAS file system. **Note** The time format of the API adopts the ISO 8601, such as `2021-07-09T15:45:30CST` or `2021-07-09T07:45:30Z`.
* `options` - (Optional) This parameter specifies whether to use Windows VSS to define a backup path.
* `path` - (Required) List of backup path. Up to 65536 characters. e.g.`["/home", "/var"]`. **Note** You should at least specify a backup path, empty array not allowed here.
* `cross_account_type` - (Optional, ForceNew, Computed, Available in v1.189.0+) The type of the cross account backup. Valid values: `SELF_ACCOUNT`, `CROSS_ACCOUNT`.
* `cross_account_user_id` - (Optional, ForceNew, Available in v1.189.0+) The original account ID of the cross account backup managed by the current account.
* `cross_account_role_name` - (Optional, ForceNew, Available in v1.189.0+) The role name created in the original account RAM backup by the cross account managed by the current account.

-> **Note** `alicloud_hbr_nas_backup_plan` depends on the `alicloud_nas_file_system` and creates a mount point on the file system. If this dependency has not declared, the file system may not be deleted correctly.

## Attributes Reference

The following attributes are exported:

* `id` - The resource ID in terraform of Nas Backup Plan.

## Import

HBR Nas Backup Plan can be imported using the id, e.g.

```shell
$ terraform import alicloud_hbr_nas_backup_plan.example <id>
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-7f491e10c154b57b5ac9d7b799c0c7da492a1e6ac15732440eaa4c9362453315 -->