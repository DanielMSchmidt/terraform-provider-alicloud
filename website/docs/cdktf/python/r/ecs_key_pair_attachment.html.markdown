---
subcategory: "ECS"
layout: "alicloud"
page_title: "Alicloud: alicloud_ecs_key_pair_attachment"
sidebar_current: "docs-alicloud-resource-ecs-key-pair-attachment"
description: |-
  Provides a Alicloud ECS Key Pair Attachment resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_ecs\_key\_pair\_attachment

Provides a ECS Key Pair Attachment resource.

For information about ECS Key Pair Attachment and how to use it, see [What is Key Pair Attachment](https://www.alibabacloud.com/help/en/doc-detail/51775.htm).

-> **NOTE:** Available in v1.121.0+.

## Example Usage

Basic Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.alicloud as alicloud
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        alicloud_ecs_key_pair_example = alicloud.ecs_key_pair.EcsKeyPair(self, "example",
            key_pair_name="terraform-example"
        )
        alicloud_vpc_example = alicloud.vpc.Vpc(self, "example_1",
            cidr_block="172.17.3.0/24",
            vpc_name="terraform-example"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_vpc_example.override_logical_id("example")
        data_alicloud_images_example =
        alicloud.data_alicloud_images.DataAlicloudImages(self, "example_2",
            name_regex="^ubuntu_[0-9]+_[0-9]+_x64*",
            owners="system"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_alicloud_images_example.override_logical_id("example")
        data_alicloud_zones_example =
        alicloud.data_alicloud_zones.DataAlicloudZones(self, "example_3",
            available_resource_creation="Instance"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_alicloud_zones_example.override_logical_id("example")
        alicloud_security_group_example =
        alicloud.security_group.SecurityGroup(self, "example_4",
            name="terraform-example",
            vpc_id=cdktf.Token.as_string(alicloud_vpc_example.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_security_group_example.override_logical_id("example")
        alicloud_vswitch_example = alicloud.vswitch.Vswitch(self, "example_5",
            cidr_block="172.17.3.0/24",
            vpc_id=cdktf.Token.as_string(alicloud_vpc_example.id),
            vswitch_name="terraform-example",
            zone_id=cdktf.Token.as_string(
                cdktf.property_access(data_alicloud_zones_example.zones, ["0", "id"]))
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_vswitch_example.override_logical_id("example")
        data_alicloud_instance_types_example =
        alicloud.data_alicloud_instance_types.DataAlicloudInstanceTypes(self, "example_6",
            availability_zone=cdktf.Token.as_string(
                cdktf.property_access(data_alicloud_zones_example.zones, ["0", "id"])),
            cpu_core_count=1,
            memory_size=2
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_alicloud_instance_types_example.override_logical_id("example")
        alicloud_instance_example = alicloud.instance.Instance(self, "example_7",
            availability_zone=cdktf.Token.as_string(
                cdktf.property_access(data_alicloud_zones_example.zones, ["0", "id"])),
            image_id=cdktf.Token.as_string(
                cdktf.property_access(data_alicloud_images_example.images, ["0", "id"])),
            instance_name="terraform-example",
            instance_type=cdktf.Token.as_string(
                cdktf.property_access(data_alicloud_instance_types_example.instance_types, ["0", "id"
                ])),
            internet_charge_type="PayByBandwidth",
            security_groups=[cdktf.Token.as_string(alicloud_security_group_example.id)],
            vswitch_id=cdktf.Token.as_string(alicloud_vswitch_example.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_instance_example.override_logical_id("example")
        alicloud_ecs_key_pair_attachment_example =
        alicloud.ecs_key_pair_attachment.EcsKeyPairAttachment(self, "example_8",
            instance_ids=[cdktf.Token.as_string(alicloud_instance_example.id)],
            key_pair_name=cdktf.Token.as_string(alicloud_ecs_key_pair_example.key_pair_name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_ecs_key_pair_attachment_example.override_logical_id("example")
```

## Argument Reference

The following arguments are supported:

* `key_pair_name` - (Required, ForceNew) The name of key pair used to bind.
* `force` - (Optional, ForceNew) Set it to true and it will reboot instances which attached with the key pair to make key pair affect immediately.
* `instance_ids` - (Required, ForceNew) The list of ECS instance's IDs.

## Attributes Reference

The following attributes are exported:

* `id` - The resource ID of Key Pair Attachment. The value is formatted `<key_pair_name>:<instance_ids>`.

## Import

ECS Key Pair Attachment can be imported using the id, e.g.

```shell
$ terraform import alicloud_ecs_key_pair_attachment.example <key_pair_name>:<instance_ids>
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-c7ebf89de1308c88f74a8928c69410abcbfd1aab8976e4ede1a27e9b451298b3 -->