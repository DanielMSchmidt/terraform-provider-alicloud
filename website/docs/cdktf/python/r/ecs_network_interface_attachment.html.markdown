---
subcategory: "ECS"
layout: "alicloud"
page_title: "Alicloud: alicloud_ecs_network_interface_attachment"
sidebar_current: "docs-alicloud-resource-ecs-network-interface-attachment"
description: |-
  Provides a Alicloud ECS Network Interface Attachment resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_ecs\_network\_interface\_attachment

Provides a ECS Network Interface Attachment resource.

For information about ECS Network Interface Attachment and how to use it, see [What is Network Interface Attachment](https://www.alibabacloud.com/help/en/doc-detail/58515.htm).

-> **NOTE:** Available in v1.123.1+.

## Example Usage

Basic Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.alicloud as alicloud
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        # Terraform Variables are not always the best fit for getting inputs in the context of Terraform CDK.
        #     You can read more about this at https://cdk.tf/variables
        name = cdktf.TerraformVariable(self, "name",
            default="tf-testAcc"
        )
        alicloud_vpc_default = alicloud.vpc.Vpc(self, "default",
            cidr_block="192.168.0.0/24",
            vpc_name=name.string_value
        )
        data_alicloud_images_default =
        alicloud.data_alicloud_images.DataAlicloudImages(self, "default_2",
            most_recent=True,
            name_regex="^ubuntu_[0-9]+_[0-9]+_x64*",
            owners="system"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_alicloud_images_default.override_logical_id("default")
        data_alicloud_resource_manager_resource_groups_default =
        alicloud.data_alicloud_resource_manager_resource_groups.DataAlicloudResourceManagerResourceGroups(self, "default_3",
            status="OK"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_alicloud_resource_manager_resource_groups_default.override_logical_id("default")
        data_alicloud_zones_default =
        alicloud.data_alicloud_zones.DataAlicloudZones(self, "default_4",
            available_resource_creation="Instance"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_alicloud_zones_default.override_logical_id("default")
        alicloud_security_group_default =
        alicloud.security_group.SecurityGroup(self, "default_5",
            description="New security group",
            name=name.string_value,
            vpc_id=cdktf.Token.as_string(alicloud_vpc_default.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_security_group_default.override_logical_id("default")
        alicloud_vswitch_default = alicloud.vswitch.Vswitch(self, "default_6",
            cidr_block="192.168.0.0/24",
            vpc_id=cdktf.Token.as_string(alicloud_vpc_default.id),
            vswitch_name=name.string_value,
            zone_id=cdktf.Token.as_string(
                cdktf.property_access(data_alicloud_zones_default.zones, ["0", "id"]))
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_vswitch_default.override_logical_id("default")
        data_alicloud_instance_types_default =
        alicloud.data_alicloud_instance_types.DataAlicloudInstanceTypes(self, "default_7",
            availability_zone=cdktf.Token.as_string(
                cdktf.property_access(data_alicloud_zones_default.zones, ["0", "id"])),
            eni_amount=3
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_alicloud_instance_types_default.override_logical_id("default")
        alicloud_ecs_network_interface_default =
        alicloud.ecs_network_interface.EcsNetworkInterface(self, "default_8",
            description="Basic test",
            network_interface_name=name.string_value,
            primary_ip_address="192.168.0.2",
            resource_group_id=cdktf.Token.as_string(
                cdktf.property_access(data_alicloud_resource_manager_resource_groups_default.ids, ["0"])),
            security_group_ids=[
                cdktf.Token.as_string(alicloud_security_group_default.id)
            ],
            tags={
                "Created": "TF",
                "For": "Test"
            },
            vswitch_id=cdktf.Token.as_string(alicloud_vswitch_default.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_ecs_network_interface_default.override_logical_id("default")
        alicloud_instance_default = alicloud.instance.Instance(self, "default_9",
            availability_zone=cdktf.Token.as_string(
                cdktf.property_access(data_alicloud_zones_default.zones, ["0", "id"])),
            host_name="tf-testAcc",
            image_id=cdktf.Token.as_string(
                cdktf.property_access(data_alicloud_images_default.images, ["0", "id"])),
            instance_name=name.string_value,
            instance_type=cdktf.Token.as_string(
                cdktf.property_access(data_alicloud_instance_types_default.instance_types, ["0", "id"
                ])),
            security_groups=[cdktf.Token.as_string(alicloud_security_group_default.id)],
            vswitch_id=cdktf.Token.as_string(alicloud_vswitch_default.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_instance_default.override_logical_id("default")
        alicloud_ecs_network_interface_attachment_default =
        alicloud.ecs_network_interface_attachment.EcsNetworkInterfaceAttachment(self, "default_10",
            instance_id=cdktf.Token.as_string(alicloud_instance_default.id),
            network_interface_id=cdktf.Token.as_string(alicloud_ecs_network_interface_default.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_ecs_network_interface_attachment_default.override_logical_id("default")
```

## Argument Reference

The following arguments are supported:

* `instance_id` - (Required, ForceNew) The instance id.
* `network_interface_id` - (Required, ForceNew) The network interface id.
* `trunk_network_instance_id` - (Optional) The trunk network instance id.
* `wait_for_network_configuration_ready` - (Optional) The wait for network configuration ready.

## Attributes Reference

The following attributes are exported:

* `id` - The resource ID of Network Interface Attachment. The value is formatted `<network_interface_id>:<instance_id>`.

## Import

ECS Network Interface Attachment can be imported using the id, e.g.

```shell
$ terraform import alicloud_ecs_network_interface_attachment.example eni-abcd1234:i-abcd1234
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-0e6987a85202b68d5d38cdce276e63b898a03822d21d78a303b655ce25616000 -->