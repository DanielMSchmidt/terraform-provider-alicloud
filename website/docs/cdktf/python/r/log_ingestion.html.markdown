---
subcategory: "Log Service (SLS)"
layout: "alicloud"
page_title: "Alicloud: alicloud_log_ingestion"
sidebar_current: "docs-alicloud-resource-log-ingestion"
description: |-
  Provides a Alicloud log ingestion resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_log\_ingestion
Log service ingestion, this service provides the function of importing logs of various data sources(OSS, MaxCompute) into logstore.
[Refer to details](https://www.alibabacloud.com/help/en/doc-detail/147819.html).

-> **NOTE:** Available in 1.161.0+

## Example Usage

Basic Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.alicloud as alicloud
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        alicloud_log_project_example = alicloud.log_project.LogProject(self, "example",
            description="created by terraform",
            name="tf-log-project",
            tags={
                "test": "test"
            }
        )
        alicloud_log_store_example = alicloud.log_store.LogStore(self, "example_1",
            append_meta=True,
            auto_split=True,
            max_split_shard_count=60,
            name="tf-log-logstore",
            project=cdktf.Token.as_string(alicloud_log_project_example.name),
            retention_period=3650,
            shard_count=3
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_log_store_example.override_logical_id("example")
        alicloud_log_ingestion_example = alicloud.log_ingestion.LogIngestion(self, "example_2",
            description="oss2sls",
            display_name="display_name",
            ingestion_name="ingestion_name",
            interval="30m",
            logstore=cdktf.Token.as_string(alicloud_log_store_example.name),
            project=cdktf.Token.as_string(alicloud_log_project_example.name),
            run_immediately=True,
            source="        {\n          \"bucket\": \"bucket_name\",\n          \"compressionCodec\": \"none\",\n          \"encoding\": \"UTF-8\",\n          \"endpoint\": \"oss-cn-hangzhou-internal.aliyuncs.com\",\n          \"format\": {\n            \"escapeChar\": \"\\\\\",\n            \"fieldDelimiter\": \",\",\n            \"fieldNames\": [],\n            \"firstRowAsHeader\": true,\n            \"maxLines\": 1,\n            \"quoteChar\": \"\\\"\",\n            \"skipLeadingRows\": 0,\n            \"timeField\": \"\",\n            \"type\": \"DelimitedText\"\n          },\n          \"pattern\": \"\",\n          \"prefix\": \"test-prefix/\",\n          \"restoreObjectEnabled\": false,\n          \"roleARN\": \"acs:ram::1049446484210612:role/aliyunlogimportossrole\",\n          \"type\": \"AliyunOSS\"\n        }\n",
            time_zone="+0800"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_log_ingestion_example.override_logical_id("example")
```

## Argument Reference

The following arguments are supported:

* `project` - (Required, ForceNew) The name of the log project. It is the only in one Alicloud account.
* `logstore` - (Required，ForceNew) The name of the target logstore.
* `ingestion_name` - (Required，ForceNew) Ingestion job name, it can only contain lowercase letters, numbers, dashes `-` and underscores `_`. It must start and end with lowercase letters or numbers, and the name must be 2 to 128 characters long.
* `display_name` - (Required) The name displayed on the web page.
* `description` - (Optional) Ingestion job description.
* `interval` - (Required) Task execution interval, support minute `m`, hour `h`, day `d`, for example 30 minutes `30m`.
* `run_immediately` - (Required) Whether to run the ingestion job immediately, if false, wait for an interval before starting the ingestion.
* `time_zone` - (Optional) Which time zone is the log time imported in, e.g. `+0800`.
* `source` - (Required) Data source and data format details. [Refer to details](https://www.alibabacloud.com/help/en/doc-detail/147819.html).


## Attributes Reference

The following attributes are exported:

* `id` - The ID of the log ingestion. It formats of `<project>:<logstore>:<ingetion_name>`.

### Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/docs/configuration-0-11/resources.html#timeouts) for certain actions:

* `create` - (Defaults to 1 mins) Used when Creating LogIngestion instance.
* `update` - (Defaults to 1 mins) Used when Updating LogIngestion instance.
* `delete` - (Defaults to 1 mins) Used when terminating the LogIngestion instance.

## Import

Log ingestion can be imported using the id or name, e.g.

```shell
$ terraform import alicloud_log_ingestion.example tf-log-project:tf-log-logstore:ingestion_name
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-67985d3187138861462f703d7a350fa00f540e40be9063b8ad489279928249f0 -->