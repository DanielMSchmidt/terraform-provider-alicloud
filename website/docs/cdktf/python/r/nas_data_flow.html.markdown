---
subcategory: "Network Attached Storage (NAS)"
layout: "alicloud"
page_title: "Alicloud: alicloud_nas_data_flow"
sidebar_current: "docs-alicloud-resource-nas-data-flow"
description: |-
  Provides a Alicloud Network Attached Storage (NAS) Data Flow resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_nas\_data\_flow

Provides a Network Attached Storage (NAS) Data Flow resource.

For information about Network Attached Storage (NAS) Data Flow and how to use it, see [What is Data Flow](https://www.alibabacloud.com/help/en/doc-detail/27530.html).

-> **NOTE:** Available in v1.153.0+.

## Example Usage

Basic Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.alicloud as alicloud
import ...gen.providers.random as random
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        # The following providers are missing schema information and might need manual adjustments to synthesize correctly: random.
        #     For a more precise conversion please use the --provider flag in convert.
        alicloud_vpc_example = alicloud.vpc.Vpc(self, "example",
            cidr_block="172.17.3.0/24",
            vpc_name="terraform-example"
        )
        random_integer_example = random.integer.Integer(self, "example_1",
            max=99999,
            min=10000
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        random_integer_example.override_logical_id("example")
        data_alicloud_nas_zones_example =
        alicloud.data_alicloud_nas_zones.DataAlicloudNasZones(self, "example_2",
            file_system_type="cpfs"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_alicloud_nas_zones_example.override_logical_id("example")
        alicloud_oss_bucket_example = alicloud.oss_bucket.OssBucket(self, "example_3",
            acl="private",
            bucket="example-value-${" + random_integer_example.result + "}",
            tags={
                "cpfs-dataflow": "true"
            }
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_oss_bucket_example.override_logical_id("example")
        alicloud_vswitch_example = alicloud.vswitch.Vswitch(self, "example_4",
            cidr_block="172.17.3.0/24",
            vpc_id=cdktf.Token.as_string(alicloud_vpc_example.id),
            vswitch_name="terraform-example",
            zone_id=cdktf.Token.as_string(
                cdktf.property_access(data_alicloud_nas_zones_example.zones, ["1", "zone_id"
                ]))
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_vswitch_example.override_logical_id("example")
        alicloud_nas_file_system_example =
        alicloud.nas_file_system.NasFileSystem(self, "example_5",
            capacity=3600,
            description="terraform-example",
            file_system_type="cpfs",
            protocol_type="cpfs",
            storage_type="advance_200",
            vpc_id=cdktf.Token.as_string(alicloud_vpc_example.id),
            vswitch_id=cdktf.Token.as_string(alicloud_vswitch_example.id),
            zone_id=cdktf.Token.as_string(
                cdktf.property_access(data_alicloud_nas_zones_example.zones, ["1", "zone_id"
                ]))
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_nas_file_system_example.override_logical_id("example")
        alicloud_nas_mount_target_example =
        alicloud.nas_mount_target.NasMountTarget(self, "example_6",
            file_system_id=cdktf.Token.as_string(alicloud_nas_file_system_example.id),
            vswitch_id=cdktf.Token.as_string(alicloud_vswitch_example.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_nas_mount_target_example.override_logical_id("example")
        alicloud_nas_fileset_example = alicloud.nas_fileset.NasFileset(self, "example_7",
            depends_on=[alicloud_nas_mount_target_example],
            description="terraform-example",
            file_system_id=cdktf.Token.as_string(alicloud_nas_file_system_example.id),
            file_system_path="/example_path/"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_nas_fileset_example.override_logical_id("example")
        alicloud_nas_data_flow_example = alicloud.nas_data_flow.NasDataFlow(self, "example_8",
            description="terraform-example",
            file_system_id=cdktf.Token.as_string(alicloud_nas_file_system_example.id),
            fset_id=cdktf.Token.as_string(alicloud_nas_fileset_example.fileset_id),
            source_security_type="SSL",
            source_storage=cdktf.Fn.join("",
                cdktf.Token.as_list(["oss://", alicloud_oss_bucket_example.bucket])),
            throughput=600
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_nas_data_flow_example.override_logical_id("example")
```

## Argument Reference

The following arguments are supported:

* `description` - (Optional) The Description of the data flow. Restrictions:
  - `2` ~ `128` English or Chinese characters in length.
  - Must start with uppercase or lowercase letters or Chinese, and cannot start with `http://` and `https://`.
  - Can contain numbers, semicolons (:), underscores (_), or dashes (-).
* `dry_run` - (Optional) The dry run.
* `file_system_id` - (Required, ForceNew) The ID of the file system.
* `fset_id` - (Required, ForceNew) The ID of the Fileset.
* `source_security_type` - (Optional, Computed, ForceNew) The security protection type of the source storage. If the source storage must be accessed through security protection, specify the security protection type of the source storage. Value:
  - `NONE` (default): Indicates that the source storage does not need to be accessed through security protection.
  - `SSL`: Protects access through SSL certificates.
* `source_storage` - (Required, ForceNew) The access path of the source store. Format: `<storage type>://<path>`. Among them:
  - storage type: currently only OSS is supported.
  - path: the bucket name of OSS.
    - Only lowercase letters, numbers, and dashes (-) are supported and must start and end with lowercase letters or numbers.
    - `8` to `128` English characters in length.
    - Use UTF-8 coding.
    - Cannot start with `http://` and `https://`.
* `status` - (Optional, Computed) The status of the Data flow. Valid values: `Running`, `Stopped`.
* `throughput` - (Required) The maximum transmission bandwidth of data flow, unit: `MB/s`. Valid values: `1200`, `1500`, `600`. **NOTE:** The transmission bandwidth of data flow must be less than the IO bandwidth of the file system.

## Attributes Reference

The following attributes are exported:

* `id` - The resource ID of Data Flow. The value formats as `<file_system_id>:<data_flow_id>`.
* `data_flow_id` - The ID of the Data flow.

### Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/docs/configuration-0-11/resources.html#timeouts) for certain actions:

* `create` - (Defaults to 10 mins) Used when create the Data Flow.
* `update` - (Defaults to 10 mins) Used when update the Data Flow.
* `delete` - (Defaults to 10 mins) Used when delete the Data Flow.

## Import

Network Attached Storage (NAS) Data Flow can be imported using the id, e.g.

```shell
$ terraform import alicloud_nas_data_flow.example <file_system_id>:<data_flow_id>
```
<!-- cache-key: cdktf-0.17.0-pre.15 input-ace8659fe9d29baa74e110834e90d16927f9bf75155a2f4094d39532d65a8d14 -->