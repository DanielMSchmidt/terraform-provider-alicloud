---
subcategory: "Private Zone"
layout: "alicloud"
page_title: "Alicloud: alicloud_pvtz_zone_attachment"
sidebar_current: "docs-alicloud-resource-pvtz-zone-attachment"
description: |-
  Provides vpcs bound to Alicloud Private Zone resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_pvtz\_zone\_attachment

Provides vpcs bound to Alicloud Private Zone resource.

-> **NOTE:** Terraform will auto bind vpc to a Private Zone while it uses `alicloud_pvtz_zone_attachment` to build a Private Zone and VPC binding resource.

## Example Usage

Using `vpc_ids` to attach being in same region several vpc instances to a private zone

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.alicloud as alicloud
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        alicloud_pvtz_zone_zone = alicloud.pvtz_zone.PvtzZone(self, "zone",
            name="foo.test.com"
        )
        alicloud_vpc_first = alicloud.vpc.Vpc(self, "first",
            cidr_block="172.16.0.0/12",
            name="the-first-vpc"
        )
        alicloud_vpc_second = alicloud.vpc.Vpc(self, "second",
            cidr_block="172.16.0.0/16",
            name="the-second-vpc"
        )
        alicloud.pvtz_zone_attachment.PvtzZoneAttachment(self, "zone-attachment",
            vpc_ids=[
                cdktf.Token.as_string(alicloud_vpc_first.id),
                cdktf.Token.as_string(alicloud_vpc_second.id)
            ],
            zone_id=cdktf.Token.as_string(alicloud_pvtz_zone_zone.id)
        )
```

Using `vpcs` to attach being in same region several vpc instances to a private zone

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.alicloud as alicloud
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        alicloud_pvtz_zone_zone = alicloud.pvtz_zone.PvtzZone(self, "zone",
            name="foo.test.com"
        )
        alicloud_vpc_first = alicloud.vpc.Vpc(self, "first",
            cidr_block="172.16.0.0/12",
            name="the-first-vpc"
        )
        alicloud_vpc_second = alicloud.vpc.Vpc(self, "second",
            cidr_block="172.16.0.0/16",
            name="the-second-vpc"
        )
        alicloud.pvtz_zone_attachment.PvtzZoneAttachment(self, "zone-attachment",
            vpcs=[PvtzZoneAttachmentVpcs(
                vpc_id=cdktf.Token.as_string(alicloud_vpc_first.id)
            ), PvtzZoneAttachmentVpcs(
                vpc_id=cdktf.Token.as_string(alicloud_vpc_second.id)
            )
            ],
            zone_id=cdktf.Token.as_string(alicloud_pvtz_zone_zone.id)
        )
```

Using `vpcs` to attach being in different regions several vpc instances to a private zone


```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.alicloud as alicloud
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        alicloud_eu = alicloud.provider.AlicloudProvider(self, "alicloud",
            alias="eu",
            region="eu-central-1"
        )
        alicloud_pvtz_zone_zone = alicloud.pvtz_zone.PvtzZone(self, "zone",
            name="foo.test.com"
        )
        alicloud_vpc_first = alicloud.vpc.Vpc(self, "first",
            cidr_block="172.16.0.0/12",
            name="the-first-vpc"
        )
        alicloud_vpc_second = alicloud.vpc.Vpc(self, "second",
            cidr_block="172.16.0.0/16",
            name="the-second-vpc"
        )
        alicloud_vpc_third = alicloud.vpc.Vpc(self, "third",
            cidr_block="172.16.0.0/16",
            name="the-third-vpc",
            provider=alicloud_eu
        )
        alicloud.pvtz_zone_attachment.PvtzZoneAttachment(self, "zone-attachment",
            vpcs=[PvtzZoneAttachmentVpcs(
                vpc_id=cdktf.Token.as_string(alicloud_vpc_first.id)
            ), PvtzZoneAttachmentVpcs(
                vpc_id=cdktf.Token.as_string(alicloud_vpc_second.id)
            ), PvtzZoneAttachmentVpcs(
                region_id="eu-central-1",
                vpc_id=cdktf.Token.as_string(alicloud_vpc_third.id)
            )
            ],
            zone_id=cdktf.Token.as_string(alicloud_pvtz_zone_zone.id)
        )
```

## Argument Reference

The following arguments are supported:

* `zone_id` - (Required, ForceNew) The name of the Private Zone Record.
* `vpc_ids` - (Optional, Conflict with `vpcs`) The id List of the VPC with the same region, for example:["vpc-1","vpc-2"]. 
* `vpcs` - (Optional, Conflict with `vpc_ids`, Available in 1.62.1+) The List of the VPC:
    * `vpc_id` - (Required) The Id of the vpc.
    * `region_id` - (Optional) The region of the vpc. If not set, the current region will instead of.
    
    Recommend to use `vpcs`.

* `lang` - (Optional, ForceNew, Available in 1.62.1+) The language of code.
* `user_client_ip` - (Optional, ForceNew, Available in 1.62.1+) The user custom IP address.

### Timeouts

-> **NOTE:** Available in 1.110.0+.

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/docs/configuration-0-11/resources.html#timeouts) for certain actions:

* `create` - (Defaults to 5 mins) Used when creating the Private Zone Attachment.
* `update` - (Defaults to 5 mins) Used when updating the Private Zone Attachment.
* `delete` - (Defaults to 5 mins) Used when terminating the Private Zone Attachment. 

## Attributes Reference

The following attributes are exported:

* `id` - The ID of the Private Zone VPC Attachment. It sames with `zone_id`.

## Import

Private Zone attachment can be imported using the id(same with `zone_id`), e.g.

```shell
$ terraform import alicloud_pvtz_zone_attachment.example abc123456
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-8df826793b5bd695374e482a2c695b542399272a30052090521346720334f16a -->