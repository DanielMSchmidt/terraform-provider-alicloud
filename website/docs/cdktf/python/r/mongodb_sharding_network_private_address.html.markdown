---
subcategory: "MongoDB"
layout: "alicloud"
page_title: "Alicloud: alicloud_mongodb_sharding_network_private_address"
sidebar_current: "docs-alicloud-resource-mongodb-sharding-network-private-address"
description: |-
  Provides a Alicloud MongoDB Sharding Network Private Address resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_mongodb\_sharding\_network\_private\_address

Provides a MongoDB Sharding Network Private Address resource.

For information about MongoDB Sharding Network Private Address and how to use it, see [What is Sharding Network Private Address](https://www.alibabacloud.com/help/en/doc-detail/141403.html).

-> **NOTE:** Available in v1.157.0+.

## Example Usage

Basic Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.alicloud as alicloud
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        # Terraform Variables are not always the best fit for getting inputs in the context of Terraform CDK.
        #     You can read more about this at https://cdk.tf/variables
        name = cdktf.TerraformVariable(self, "name",
            default="tf-example"
        )
        data_alicloud_mongodb_zones_default =
        alicloud.data_alicloud_mongodb_zones.DataAlicloudMongodbZones(self, "default")
        data_alicloud_vpcs_default =
        alicloud.data_alicloud_vpcs.DataAlicloudVpcs(self, "default_2",
            name_regex="default-NODELETING"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_alicloud_vpcs_default.override_logical_id("default")
        data_alicloud_vswitches_default =
        alicloud.data_alicloud_vswitches.DataAlicloudVswitches(self, "default_3",
            vpc_id=cdktf.Token.as_string(
                cdktf.property_access(data_alicloud_vpcs_default.ids, ["0"])),
            zone_id=cdktf.Token.as_string(
                cdktf.property_access(data_alicloud_mongodb_zones_default.zones, ["0", "id"
                ]))
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_alicloud_vswitches_default.override_logical_id("default")
        alicloud_mongodb_sharding_instance_default =
        alicloud.mongodb_sharding_instance.MongodbShardingInstance(self, "default_4",
            engine_version="4.2",
            mongo_list=[MongodbShardingInstanceMongoList(
                node_class="dds.mongos.mid"
            ), MongodbShardingInstanceMongoList(
                node_class="dds.mongos.mid"
            )
            ],
            name=name.string_value,
            shard_list=[MongodbShardingInstanceShardList(
                node_class="dds.shard.mid",
                node_storage=10
            ), MongodbShardingInstanceShardList(
                node_class="dds.shard.mid",
                node_storage=10
            )
            ],
            vswitch_id=cdktf.Token.as_string(
                cdktf.property_access(data_alicloud_vswitches_default.ids, ["0"])),
            zone_id=cdktf.Token.as_string(
                cdktf.property_access(data_alicloud_mongodb_zones_default.zones, ["0", "id"
                ]))
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_mongodb_sharding_instance_default.override_logical_id("default")
        alicloud.mongodb_sharding_network_private_address.MongodbShardingNetworkPrivateAddress(self, "example",
            account_name="example_value",
            account_password="YourPassword+12345",
            db_instance_id=cdktf.Token.as_string(alicloud_mongodb_sharding_instance_default.id),
            node_id=cdktf.Token.as_string(
                cdktf.property_access(alicloud_mongodb_sharding_instance_default.shard_list, ["0", "node_id"])),
            zone_id=cdktf.Token.as_string(alicloud_mongodb_sharding_instance_default.zone_id)
        )
```

## Argument Reference

The following arguments are supported:

* `account_name` - (Optional) The name of the account. 
  - The name must be 4 to 16 characters in length and can contain lowercase letters, digits, and underscores (_). It must start with a lowercase letter.
  - You need to set the account name and password only when you apply for an endpoint for a shard or Configserver node for the first time. In this case, the account name and password are used for all shard and Configserver nodes.
  - The permissions of this account are fixed to read-only.
* `account_password` - (Optional, Sensitive) Account password. 
  - The password must contain at least three of the following character types: uppercase letters, lowercase letters, digits, and special characters. Special characters include `!#$%^&*()_+-=`.
  - The password must be 8 to 32 characters in length.
* `db_instance_id` - (Required) The db instance id.
* `zone_id` - (Required) The zone ID of the instance.
* `node_id` - (Required) The ID of the Shard node or the ConfigServer node.

## Attributes Reference

The following attributes are exported:

* `id` - The resource ID of Sharding Network Private Address. The value formats as `<db_instance_id>:<node_id>`.
* `network_address` - An array that consists of the endpoints of ApsaraDB for MongoDB instances.
  * `network_type` - The network type.
  * `network_address` - The endpoint of the instance.
  * `node_type` - The type of the node.
  * `port` - The port number.
  * `role` - The role of the node.
  * `vpc_id` - The ID of the VPC.
  * `expired_time` - The remaining duration of the classic network address. Unit: `seconds`.
  * `ip_address` - The IP address of the instance.
  * `vswitch_id` - The vSwitch ID of the VPC.
  * `node_id` - The ID of the `mongos`, `shard`, or `Configserver` node in the sharded cluster instance.

## Import

MongoDB Sharding Network Private Address can be imported using the id, e.g.

```shell
$ terraform import alicloud_mongodb_sharding_network_private_address.example <db_instance_id>:<node_id>
```
<!-- cache-key: cdktf-0.17.0-pre.15 input-93ca399fd31dc65885b185933672facb5a4608fe2557646164b30a99a89eafdf -->