---
subcategory: "Application Load Balancer (ALB)"
layout: "alicloud"
page_title: "Alicloud: alicloud_alb_acl_entry_attachment"
sidebar_current: "docs-alicloud-resource-alb-acl-entry-attachment"
description: |-
  Provides a Acl entry attachment resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_alb\_acl\_entry\_attachment

-> **NOTE:** Available in v1.166.0+.


For information about acl entry attachment and how to use it, see [Configure an acl entry](https://www.alibabacloud.com/help/en/server-load-balancer/latest/addentriestoacl).


## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.alicloud as alicloud
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        # Terraform Variables are not always the best fit for getting inputs in the context of Terraform CDK.
        #     You can read more about this at https://cdk.tf/variables
        name = cdktf.TerraformVariable(self, "name",
            default="terraformalbaclconfig"
        )
        data_alicloud_resource_manager_resource_groups_default =
        alicloud.data_alicloud_resource_manager_resource_groups.DataAlicloudResourceManagerResourceGroups(self, "default")
        alicloud_alb_acl_default = alicloud.alb_acl.AlbAcl(self, "default_2",
            acl_name=name.string_value,
            resource_group_id=cdktf.Token.as_string(
                cdktf.property_access(data_alicloud_resource_manager_resource_groups_default.groups, ["0", "id"]))
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_alb_acl_default.override_logical_id("default")
        alicloud_alb_acl_entry_attachment_default =
        alicloud.alb_acl_entry_attachment.AlbAclEntryAttachment(self, "default_3",
            acl_id=cdktf.Token.as_string(alicloud_alb_acl_default.id),
            description=name.string_value,
            entry="168.10.10.0/24"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_alb_acl_entry_attachment_default.override_logical_id("default")
```

## Argument Reference

The following arguments are supported:

* `acl_id` - (Required, ForceNew) The ID of the Acl.
* `entry` - (Required, ForceNew) The CIDR blocks.
* `description` - (Optional, ForceNew) The description of the entry.

## Attributes Reference

The following attributes are exported:

* `id` - The ID of the resource. The value formats as `<acl_id>:<entry>`.
* `status` - The Status of the resource.

### Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/docs/configuration-0-11/resources.html#timeouts) for certain actions:

* `create` - (Defaults to 5 mins) Used when create the resource.
* `delete` - (Defaults to 5 mins) Used when delete the resource.

## Import

Acl entry attachment can be imported using the id, e.g.

```shell
$ terraform import alicloud_alb_acl_entry_attachment.example <acl_id>:<entry>
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-84cac83e6a26dbc1a60cf5dcac477ef8e9ed1488dd6c16f72440a95de21a813a -->