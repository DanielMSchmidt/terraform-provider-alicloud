---
subcategory: "AnalyticDB for MySQL (ADB)"
layout: "alicloud"
page_title: "Alicloud: alicloud_adb_db_cluster_lake_version"
sidebar_current: "docs-alicloud-resource-adb-db-cluster-lake-version"
description: |-
  Provides a Alicloud AnalyticDB for MySQL (ADB) DB Cluster Lake Version resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_adb\_db\_cluster\_lake\_version

Provides a AnalyticDB for MySQL (ADB) DB Cluster Lake Version resource.

For information about AnalyticDB for MySQL (ADB) DB Cluster Lake Version and how to use it, see [What is DB Cluster Lake Version](https://www.alibabacloud.com/help/en/analyticdb-for-mysql/latest/what-is-analyticdb-for-mysql).

-> **NOTE:** Available in v1.190.0+.

## Example Usage

Basic Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.alicloud as alicloud
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        alicloud.data_alicloud_resource_manager_resource_groups.DataAlicloudResourceManagerResourceGroups(self, "default")
        data_alicloud_vpcs_default =
        alicloud.data_alicloud_vpcs.DataAlicloudVpcs(self, "default_1",
            name_regex="^default-NODELETING"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_alicloud_vpcs_default.override_logical_id("default")
        data_alicloud_vswitches_default =
        alicloud.data_alicloud_vswitches.DataAlicloudVswitches(self, "default_2",
            vpc_id=cdktf.Token.as_string(
                cdktf.property_access(data_alicloud_vpcs_default.ids, ["0"])),
            zone_id="example"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_alicloud_vswitches_default.override_logical_id("default")
        alicloud_adb_db_cluster_lake_version_default =
        alicloud.adb_db_cluster_lake_version.AdbDbClusterLakeVersion(self, "default_3",
            compute_resource="16ACU",
            db_cluster_version="5.0",
            payment_type="PayAsYouGo",
            storage_resource="0ACU",
            vpc_id=cdktf.Token.as_string(
                cdktf.property_access(data_alicloud_vpcs_default.ids, ["0"])),
            vswitch_id=cdktf.Token.as_string(
                cdktf.property_access(data_alicloud_vswitches_default.ids, ["0"])),
            zone_id="example"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_adb_db_cluster_lake_version_default.override_logical_id("default")
```

## Argument Reference

The following arguments are supported:

* `payment_type` - (Required, ForceNew) The payment type of the resource. Valid values are `PayAsYouGo`.
* `compute_resource` - (Required) The computing resources of the cluster.
* `db_cluster_version` - (Required, ForceNew) The version of the cluster. Value options: `5.0`.
* `storage_resource` - (Required) The storage resources of the cluster.
* `vswitch_id` - (Required, ForceNew) The ID of the vSwitch.
* `vpc_id` - (Required, ForceNew) The vpc ID of the resource.
* `zone_id` - (Required, ForceNew) The zone ID of the resource.
* `enable_default_resource_group` - (Optional) Whether to enable default allocation of resources to user_default resource groups.
* `security_ips` - (Optional, Computed, Available in v1.198.0+) The IP addresses in an IP address whitelist of a cluster. Separate multiple IP addresses with commas (,). You can add a maximum of 500 different IP addresses to a whitelist. The entries in the IP address whitelist must be in one of the following formats:
  - IP addresses, such as 10.23.XX.XX.
  - CIDR blocks, such as 10.23.xx.xx/24. In this example, 24 indicates that the prefix of each IP address in the IP whitelist is 24 bits in length. You can replace 24 with a value within the range of 1 to 32.
* `db_cluster_description` - (Optional, Computed, Available in v1.198.0+) The description of the cluster.

## Attributes Reference

The following attributes are exported:

* `id` - The resource ID in terraform of DBCluster Lake Version.
* `status` - The status of the resource.
* `commodity_code` - The name of the service.
* `engine` - The engine of the database.
* `engine_version` - The engine version of the database.
* `expire_time` - The time when the cluster expires.
* `expired` - Indicates whether the cluster has expired.
* `lock_mode` - The lock mode of the cluster.
* `lock_reason` - The reason why the cluster is locked.
* `port` - The port that is used to access the cluster.
* `connection_string` - The endpoint of the cluster.
* `create_time` - The createTime of the cluster.
* `resource_group_id` - The ID of the resource group.

### Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/docs/configuration-0-11/resources.html#timeouts) for certain actions:

* `create` - (Defaults to 50 mins) Used when create the DB Cluster Lake Version.
* `update` - (Defaults to 72 mins) Used when update the DB Cluster Lake Version.
* `delete` - (Defaults to 5 mins) Used when delete the DB Cluster Lake Version.

## Import

AnalyticDB for MySQL (ADB) DB Cluster Lake Version can be imported using the id, e.g.

```shell
$ terraform import alicloud_adb_db_cluster_lake_version.example <id>
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-1932a7b5d3e2be8712aa2e5729017827807ef66156bdf1592d3595b62f96d00d -->