---
subcategory: "Classic Load Balancer (SLB)"
layout: "alicloud"
page_title: "Alicloud: alicloud_slb_backend_server"
sidebar_current: "docs-alicloud-resource-slb-backend-server"
description: |-
  Provides an Application Load Balancer Backend Server resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_slb\_backend\_server

Add a group of backend servers (ECS or ENI instance) to the Server Load Balancer or remove them from it.

-> **NOTE:** Available in 1.53.0+

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.alicloud as alicloud
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        # Terraform Variables are not always the best fit for getting inputs in the context of Terraform CDK.
        #     You can read more about this at https://cdk.tf/variables
        slb_backend_server_name = cdktf.TerraformVariable(self, "slb_backend_server_name",
            default="slbbackendservertest"
        )
        alicloud_vpc_backend_server = alicloud.vpc.Vpc(self, "backend_server",
            cidr_block="172.16.0.0/16",
            vpc_name=slb_backend_server_name.string_value
        )
        data_alicloud_images_backend_server =
        alicloud.data_alicloud_images.DataAlicloudImages(self, "backend_server_2",
            most_recent=True,
            name_regex="^ubuntu_18.*64",
            owners="system"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_alicloud_images_backend_server.override_logical_id("backend_server")
        data_alicloud_zones_backend_server =
        alicloud.data_alicloud_zones.DataAlicloudZones(self, "backend_server_3",
            available_disk_category="cloud_efficiency",
            available_resource_creation="VSwitch"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_alicloud_zones_backend_server.override_logical_id("backend_server")
        alicloud_security_group_backend_server =
        alicloud.security_group.SecurityGroup(self, "backend_server_4",
            name=slb_backend_server_name.string_value,
            vpc_id=cdktf.Token.as_string(alicloud_vpc_backend_server.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_security_group_backend_server.override_logical_id("backend_server")
        alicloud_vswitch_backend_server = alicloud.vswitch.Vswitch(self, "backend_server_5",
            cidr_block="172.16.0.0/16",
            vpc_id=cdktf.Token.as_string(alicloud_vpc_backend_server.id),
            vswitch_name=slb_backend_server_name.string_value,
            zone_id=cdktf.Token.as_string(
                cdktf.property_access(data_alicloud_zones_backend_server.zones, ["0", "id"
                ]))
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_vswitch_backend_server.override_logical_id("backend_server")
        data_alicloud_instance_types_backend_server =
        alicloud.data_alicloud_instance_types.DataAlicloudInstanceTypes(self, "backend_server_6",
            availability_zone=cdktf.Token.as_string(
                cdktf.property_access(data_alicloud_zones_backend_server.zones, ["0", "id"
                ])),
            cpu_core_count=1,
            memory_size=2
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_alicloud_instance_types_backend_server.override_logical_id("backend_server")
        # In most cases loops should be handled in the programming language context and
        #     not inside of the Terraform context. If you are looping over something external, e.g. a variable or a file input
        #     you should consider using a for loop. If you are looping over something only known to Terraform, e.g. a result of a data source
        #     you need to keep this like it is.
        alicloud_instance_backend_server_count = cdktf.TerraformCount.of(
            cdktf.Token.as_number("2"))
        alicloud_instance_backend_server = alicloud.instance.Instance(self, "backend_server_7",
            availability_zone=cdktf.Token.as_string(
                cdktf.property_access(data_alicloud_zones_backend_server.zones, ["0", "id"
                ])),
            image_id=cdktf.Token.as_string(
                cdktf.property_access(data_alicloud_images_backend_server.images, ["0", "id"
                ])),
            instance_charge_type="PostPaid",
            instance_name=slb_backend_server_name.string_value,
            instance_type=cdktf.Token.as_string(
                cdktf.property_access(data_alicloud_instance_types_backend_server.instance_types, ["0", "id"])),
            internet_charge_type="PayByTraffic",
            internet_max_bandwidth_out=cdktf.Token.as_number("10"),
            security_groups=cdktf.Token.as_list(
                cdktf.property_access(alicloud_security_group_backend_server, ["*", "id"])),
            system_disk_category="cloud_efficiency",
            vswitch_id=cdktf.Token.as_string(alicloud_vswitch_backend_server.id),
            count=alicloud_instance_backend_server_count
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_instance_backend_server.override_logical_id("backend_server")
        alicloud_slb_load_balancer_backend_server =
        alicloud.slb_load_balancer.SlbLoadBalancer(self, "backend_server_8",
            instance_charge_type="PayByCLCU",
            load_balancer_name=slb_backend_server_name.string_value,
            vswitch_id=cdktf.Token.as_string(alicloud_vswitch_backend_server.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_slb_load_balancer_backend_server.override_logical_id("backend_server")
        alicloud_slb_backend_server_backend_server =
        alicloud.slb_backend_server.SlbBackendServer(self, "backend_server_9",
            backend_servers=[SlbBackendServerBackendServers(
                server_id=cdktf.Token.as_string(
                    cdktf.property_access(alicloud_instance_backend_server, ["0", "id"])),
                weight=100
            ), SlbBackendServerBackendServers(
                server_id=cdktf.Token.as_string(
                    cdktf.property_access(alicloud_instance_backend_server, ["1", "id"])),
                weight=100
            )
            ],
            load_balancer_id=cdktf.Token.as_string(alicloud_slb_load_balancer_backend_server.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_slb_backend_server_backend_server.override_logical_id("backend_server")
```

## Argument Reference

The following arguments are supported:

* `load_balancer_id` - (Required) ID of the load balancer.
* `backend_servers` - (Optional) A list of instances to added backend server in the SLB. It contains three sub-fields as `Block server` follows.
* `delete_protection_validation` - (Optional, Available in 1.63.0+) Checking DeleteProtection of SLB instance before deleting. If true, this resource will not be deleted when its SLB instance enabled DeleteProtection. Default to false.

## Block servers

The servers mapping supports the following:

* `server_id` - (Required) A list backend server ID (ECS instance ID).
* `weight` - (Optional) Weight of the backend server. Valid value range: [0-100]. 
* `type` - (Optional) Type of the backend server. Valid value `ecs`, `eni`, `eci`. Default to `ecs`. **NOTE:** From 1.170.0+, The `eci` is valid. 
* `server_ip` - (Optional, Computed, Available in 1.93.0+) ServerIp of the backend server. This parameter can be specified when the type is `eni`. `ecs` type currently does not support adding `server_ip` parameter.

## Attributes Reference

The following attributes are exported:

* `id` - The ID of the resource and the value same as load balancer id.

## Import

Load balancer backend server can be imported using the load balancer id.

```shell
$ terraform import alicloud_slb_backend_server.example <load_balancer_id>
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-5c277989b6b747e548b5e0f297fbbd4302222d041bdb43567244a37009496f1e -->