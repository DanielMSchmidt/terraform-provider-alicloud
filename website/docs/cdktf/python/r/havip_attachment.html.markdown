---
subcategory: "VPC"
layout: "alicloud"
page_title: "Alicloud: alicloud_havip_attachment"
sidebar_current: "docs-alicloud-resource-havip-attachment"
description: |-
  Provides an Alicloud HaVip Attachment resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_havip\_attachment

Provides an Alicloud HaVip Attachment resource for associating HaVip to ECS Instance.

-> **NOTE:** Terraform will auto build havip attachment while it uses `alicloud_havip_attachment` to build a havip attachment resource.

## Example Usage

Basic Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.alicloud as alicloud
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        # Terraform Variables are not always the best fit for getting inputs in the context of Terraform CDK.
        #     You can read more about this at https://cdk.tf/variables
        name = cdktf.TerraformVariable(self, "name",
            default="test_havip_attachment"
        )
        alicloud_vpc_foo = alicloud.vpc.Vpc(self, "foo",
            cidr_block="172.16.0.0/12",
            name=name.string_value
        )
        data_alicloud_images_default =
        alicloud.data_alicloud_images.DataAlicloudImages(self, "default",
            most_recent=True,
            name_regex="^ubuntu_18.*64",
            owners="system"
        )
        data_alicloud_zones_default =
        alicloud.data_alicloud_zones.DataAlicloudZones(self, "default_3",
            available_resource_creation="VSwitch"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_alicloud_zones_default.override_logical_id("default")
        alicloud_security_group_tf_test_foo =
        alicloud.security_group.SecurityGroup(self, "tf_test_foo",
            description="foo",
            name=name.string_value,
            vpc_id=cdktf.Token.as_string(alicloud_vpc_foo.id)
        )
        alicloud_vswitch_foo = alicloud.vswitch.Vswitch(self, "foo_5",
            cidr_block="172.16.0.0/21",
            name=name.string_value,
            vpc_id=cdktf.Token.as_string(alicloud_vpc_foo.id),
            zone_id=cdktf.Token.as_string(
                cdktf.property_access(data_alicloud_zones_default.zones, ["0", "id"]))
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_vswitch_foo.override_logical_id("foo")
        data_alicloud_instance_types_default =
        alicloud.data_alicloud_instance_types.DataAlicloudInstanceTypes(self, "default_6",
            availability_zone=cdktf.Token.as_string(
                cdktf.property_access(data_alicloud_zones_default.zones, ["0", "id"])),
            cpu_core_count=1,
            memory_size=2
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_alicloud_instance_types_default.override_logical_id("default")
        alicloud_havip_foo = alicloud.havip.Havip(self, "foo_7",
            description=name.string_value,
            vswitch_id=cdktf.Token.as_string(alicloud_vswitch_foo.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_havip_foo.override_logical_id("foo")
        alicloud_instance_foo = alicloud.instance.Instance(self, "foo_8",
            availability_zone=cdktf.Token.as_string(
                cdktf.property_access(data_alicloud_zones_default.zones, ["0", "id"])),
            image_id=cdktf.Token.as_string(
                cdktf.property_access(data_alicloud_images_default.images, ["0", "id"])),
            instance_name=name.string_value,
            instance_type=cdktf.Token.as_string(
                cdktf.property_access(data_alicloud_instance_types_default.instance_types, ["0", "id"
                ])),
            internet_charge_type="PayByTraffic",
            internet_max_bandwidth_out=5,
            security_groups=[cdktf.Token.as_string(alicloud_security_group_tf_test_foo.id)],
            system_disk_category="cloud_efficiency",
            user_data="echo 'net.ipv4.ip_forward=1'>> /etc/sysctl.conf",
            vswitch_id=cdktf.Token.as_string(alicloud_vswitch_foo.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_instance_foo.override_logical_id("foo")
        alicloud_havip_attachment_foo =
        alicloud.havip_attachment.HavipAttachment(self, "foo_9",
            havip_id=cdktf.Token.as_string(alicloud_havip_foo.id),
            instance_id=cdktf.Token.as_string(alicloud_instance_foo.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_havip_attachment_foo.override_logical_id("foo")
```
## Argument Reference

The following arguments are supported:

* `havip_id` - (Required, ForceNew) The havip_id of the havip attachment, the field can't be changed.
* `instance_id` - (Required, ForceNew) The instance_id of the havip attachment, the field can't be changed.
* `force` - (Optional, Available in v1.200.0+) Specifies whether to forcefully disassociate the HAVIP from the ECS instance or ENI. Default value: `False`. Valid values: `True` and `False`.
* `instance_type` - (Optional, Available in v1.201.0+) The Type of instance to bind HaVip to. Valid values: `EcsInstance` and `NetworkInterface`. When the HaVip instance is bound to a resilient NIC, the resilient NIC instance must be filled in.

## Attributes Reference

The following attributes are exported:

* `id` - The ID of the havip attachment id and formates as `<havip_id>:<instance_id>`.
* `status` - (Available in v1.201.0+) The status of the HaVip instance.

#### Timeouts

-> **NOTE:** Available in 1.194.0+.

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/docs/configuration-0-11/resources.html#timeouts) for certain actions:

* `create` - (Defaults to 5 mins) Used when create the HaVip Attachment.
* `delete` - (Defaults to 5 mins) Used when delete the HaVip Attachment.

## Import

The havip attachment can be imported using the id, e.g.

```shell
$ terraform import alicloud_havip_attachment.foo havip-abc123456:i-abc123456
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-330deb0284e2b627d31ac910f3f899e6c143ef3525d0acd8c3233f5aabfeee0b -->