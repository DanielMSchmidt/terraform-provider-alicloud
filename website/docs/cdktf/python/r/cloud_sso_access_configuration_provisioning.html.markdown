---
subcategory: "Cloud SSO"
layout: "alicloud"
page_title: "Alicloud: alicloud_cloud_sso_access_configuration_provisioning"
sidebar_current: "docs-alicloud-resource-cloud-sso-access-configuration-provisioning"
description: |-
  Provides a Alicloud Cloud SSO Access Configuration Provisioning resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_cloud\_sso\_access\_configuration\_provisioning

Provides a Cloud SSO Access Configuration Provisioning resource.

For information about Cloud SSO Access Configuration Provisioning and how to use it, see [What is Access Configuration Provisioning](https://www.alibabacloud.com/help/en/doc-detail/266737.html).

-> **NOTE:** Available in v1.148.0+.

## Example Usage

Basic Usage


```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.alicloud as alicloud
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        # Terraform Variables are not always the best fit for getting inputs in the context of Terraform CDK.
        #     You can read more about this at https://cdk.tf/variables
        name = cdktf.TerraformVariable(self, "name",
            default="example-name"
        )
        data_alicloud_cloud_sso_directories_default =
        alicloud.data_alicloud_cloud_sso_directories.DataAlicloudCloudSsoDirectories(self, "default")
        data_alicloud_resource_manager_resource_directories_default =
        alicloud.data_alicloud_resource_manager_resource_directories.DataAlicloudResourceManagerResourceDirectories(self, "default_2")
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_alicloud_resource_manager_resource_directories_default.override_logical_id("default")
        # In most cases loops should be handled in the programming language context and
        #     not inside of the Terraform context. If you are looping over something external, e.g. a variable or a file input
        #     you should consider using a for loop. If you are looping over something only known to Terraform, e.g. a result of a data source
        #     you need to keep this like it is.
        alicloud_cloud_sso_directory_default_count = cdktf.TerraformCount.of(
            cdktf.Token.as_number(
                cdktf.conditional(
                    cdktf.Op.gt(
                        cdktf.Fn.length_of(data_alicloud_cloud_sso_directories_default.ids), 0), 0, 1)))
        alicloud_cloud_sso_directory_default =
        alicloud.cloud_sso_directory.CloudSsoDirectory(self, "default_3",
            directory_name=name.string_value,
            count=alicloud_cloud_sso_directory_default_count
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_cloud_sso_directory_default.override_logical_id("default")
        alicloud_cloud_sso_access_configuration_default =
        alicloud.cloud_sso_access_configuration.CloudSsoAccessConfiguration(self, "default_4",
            access_configuration_name=name.string_value,
            directory_id=cdktf.Token.as_string(
                cdktf.conditional(
                    cdktf.Op.gt(
                        cdktf.Fn.length_of(data_alicloud_cloud_sso_directories_default.ids), 0),
                    cdktf.property_access(data_alicloud_cloud_sso_directories_default.ids, ["0"
                    ]),
                    cdktf.property_access(
                        cdktf.Fn.concat([
                            cdktf.property_access(
                                cdktf.property_access(alicloud_cloud_sso_directory_default, ["*", "id"
                                ]), ["\"\""])
                        ]), ["0"])))
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_cloud_sso_access_configuration_default.override_logical_id("default")
        alicloud_cloud_sso_access_configuration_provisioning_default =
        alicloud.cloud_sso_access_configuration_provisioning.CloudSsoAccessConfigurationProvisioning(self, "default_5",
            access_configuration_id=cdktf.Token.as_string(alicloud_cloud_sso_access_configuration_default.access_configuration_id),
            directory_id=cdktf.Token.as_string(
                cdktf.conditional(
                    cdktf.Op.gt(
                        cdktf.Fn.length_of(data_alicloud_cloud_sso_directories_default.ids), 0),
                    cdktf.property_access(data_alicloud_cloud_sso_directories_default.ids, ["0"
                    ]),
                    cdktf.property_access(
                        cdktf.Fn.concat([
                            cdktf.property_access(
                                cdktf.property_access(alicloud_cloud_sso_directory_default, ["*", "id"
                                ]), ["\"\""])
                        ]), ["0"]))),
            target_id=cdktf.Token.as_string(
                cdktf.property_access(data_alicloud_resource_manager_resource_directories_default.directories, ["0", "master_account_id"])),
            target_type="RD-Account"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_cloud_sso_access_configuration_provisioning_default.override_logical_id("default")
```

## Argument Reference

The following arguments are supported:

* `access_configuration_id` - (Required, ForceNew) The Access configuration ID.
* `directory_id` - (Required, ForceNew) The ID of the Directory.
* `target_id` - (Required, ForceNew) The ID of the target to create the resource range.
* `target_type` - (Required, ForceNew) The type of the resource range target to be accessed. Valid values: `RD-Account`.

## Attributes Reference

The following attributes are exported:

* `id` - The resource ID of Access Assignment. The value formats as `<directory_id>:<access_configuration_id>:<target_type>:<target_id>`.
* `status` - The status of the resource. Valid values: `Provisioned`, `ReprovisionRequired` and `DeprovisionFailed`.


## Import

Cloud SSO Access Configuration Provisioning can be imported using the id, e.g.

```shell
$ terraform import alicloud_cloud_sso_access_assignment.example <directory_id>:<access_configuration_id>:<target_type>:<target_id>
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-59bdfdcd839223061b1bf3dd19ae5f002e261e027a13373f4b5cfa2b4d174f42 -->