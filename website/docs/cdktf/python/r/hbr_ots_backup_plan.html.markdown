---
subcategory: "Hybrid Backup Recovery (HBR)"
layout: "alicloud"
page_title: "Alicloud: alicloud_hbr_ots_backup_plan"
sidebar_current: "docs-alicloud-resource-hbr-ots-backup-plan"
description: |-
  Provides a Alicloud HBR Ots Backup Plan resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_hbr\_ots\_backup\_plan

Provides a HBR Ots Backup Plan resource.

For information about HBR Ots Backup Plan and how to use it, see [What is Ots Backup Plan](https://www.alibabacloud.com/help/en/hybrid-backup-recovery/latest/overview).

-> **NOTE:** Available in v1.163.0+.

## Example Usage

Basic Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.alicloud as alicloud
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        # Terraform Variables are not always the best fit for getting inputs in the context of Terraform CDK.
        #     You can read more about this at https://cdk.tf/variables
        name = cdktf.TerraformVariable(self, "name",
            default="testAcc"
        )
        alicloud_hbr_vault_default = alicloud.hbr_vault.HbrVault(self, "default",
            vault_name=name.string_value,
            vault_type="OTS_BACKUP"
        )
        alicloud_ots_instance_foo = alicloud.ots_instance.OtsInstance(self, "foo",
            accessed_by="Any",
            description=name.string_value,
            name=name.string_value,
            tags={
                "Created": "TF",
                "For": "acceptance test"
            }
        )
        alicloud_ots_table_basic = alicloud.ots_table.OtsTable(self, "basic",
            deviation_cell_version_in_sec=cdktf.Token.as_string(1),
            instance_name=cdktf.Token.as_string(alicloud_ots_instance_foo.name),
            max_version=1,
            primary_key=[OtsTablePrimaryKey(
                name="pk1",
                type="Integer"
            )
            ],
            table_name=name.string_value,
            time_to_live=cdktf.Token.as_number(cdktf.Op.negate(1))
        )
        alicloud.hbr_ots_backup_plan.HbrOtsBackupPlan(self, "example",
            backup_type="COMPLETE",
            instance_name=cdktf.Token.as_string(alicloud_ots_instance_foo.name),
            ots_backup_plan_name=name.string_value,
            ots_detail=[HbrOtsBackupPlanOtsDetail(
                table_names=[cdktf.Token.as_string(alicloud_ots_table_basic.table_name)]
            )
            ],
            retention="2",
            schedule="I|1602673264|PT2H",
            vault_id=cdktf.Token.as_string(alicloud_hbr_vault_default.id)
        )
```

## Argument Reference

The following arguments are supported:

* `backup_type` - (Required) Backup type. Valid values: `COMPLETE`.
* `disabled` - (Optional) Whether to disable the backup task. Valid values: `true`, `false`. Default values: `false`.
* `ots_backup_plan_name` - (Required) The name of the backup plan. 1~64 characters, the backup plan name of each data source type in a single warehouse required to be unique.
* `retention` - (Required) Backup retention days, the minimum is 1.
* `schedule` - (Optional, Deprecated) Backup strategy. Optional format: `I|{startTime}|{interval}`. It means to execute a backup task every `{interval}` starting from `{startTime}`. The backup task for the elapsed time will not be compensated. If the last backup task has not completed yet, the next backup task will not be triggered.
  - `startTime` Backup start time, UNIX time seconds.
  - `interval` ISO8601 time interval. E.g: `PT1H` means one hour apart. `P1D` means one day apart.
* `vault_id` - (Required) The ID of backup vault.
* `instance_name` - (Optional) The name of the Table store instance. **Note:** Required while source_type equals `OTS_TABLE`.
* `cross_account_type` - (Optional, ForceNew, Computed, Available in v1.189.0+) The type of the cross account backup. Valid values: `SELF_ACCOUNT`, `CROSS_ACCOUNT`.
* `cross_account_user_id` - (Optional, ForceNew, Available in v1.189.0+) The original account ID of the cross account backup managed by the current account.
* `cross_account_role_name` - (Optional, ForceNew, Available in v1.189.0+) The role name created in the original account RAM backup by the cross account managed by the current account.
* `ots_detail` - (Optional) The details about the Table store instance. See the following `Block ots_detail`. **Note:** Required while source_type equals `OTS_TABLE`.
* `rules` - (Optional,Available in v1.164.0+) The backup plan rule. See the following `Block rules`. **Note:** Required while source_type equals `OTS_TABLE`.

### Block ots_detail

The ots_detail supports the following:

* `table_names` - (Optional) The names of the destination tables in the Tablestore instance. **Note:** Required while source_type equals `OTS_TABLE`.

### Block rules

The rules support the following:

* `schedule` - (Optional) Backup strategy. Optional format: `I|{startTime}|{interval}`. It means to execute a backup task every `{interval}` starting from `{startTime}`. The backup task for the elapsed time will not be compensated. If the last backup task has not completed yet, the next backup task will not be triggered. **Note:** Required while source_type equals `OTS_TABLE`.
  - `startTime` Backup start time, UNIX time seconds.
  - `interval` ISO8601 time interval. E.g: `PT1H` means one hour apart. `P1D` means one day apart.
* `retention` - (Optional) Backup retention days, the minimum is 1. **Note:** Required while source_type equals `OTS_TABLE`.
* `rule_name` - (Optional)  The name of the backup rule.**Note:** Required while source_type equals `OTS_TABLE`. `rule_name` should be unique for the specific user.
* `backup_type` - (Optional) The name of the tableStore instance. Valid values: `COMPLETE`, `INCREMENTAL`. **Note:** Required while source_type equals `OTS_TABLE`.
* `disabled` - (Optional) Whether to disable the backup task. Valid values: true, false.

## Attributes Reference

The following attributes are exported:

* `id` - The resource ID in terraform of Ots Backup Plan.

## Import

HBR Ots Backup Plan can be imported using the id, e.g.

```shell
$ terraform import alicloud_hbr_ots_backup_plan.example <id>
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-9f60e2d8c30380c5e982ff1590e2eb535009552c03351cb5ac1b1e1685dedb94 -->