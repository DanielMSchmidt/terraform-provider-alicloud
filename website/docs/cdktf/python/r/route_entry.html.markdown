---
subcategory: "VPC"
layout: "alicloud"
page_title: "Alicloud: alicloud_route_entry"
sidebar_current: "docs-alicloud-resource-route-entry"
description: |-
  Provides a Alicloud Route Entry resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_route\_entry

Provides a route entry resource. A route entry represents a route item of one VPC route table.

## Example Usage

Basic Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.alicloud as alicloud
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        # Terraform Variables are not always the best fit for getting inputs in the context of Terraform CDK.
        #     You can read more about this at https://cdk.tf/variables
        name = cdktf.TerraformVariable(self, "name",
            default="RouteEntryConfig"
        )
        alicloud_vpc_foo = alicloud.vpc.Vpc(self, "foo",
            cidr_block="10.1.0.0/21",
            vpc_name=name.string_value
        )
        data_alicloud_images_default =
        alicloud.data_alicloud_images.DataAlicloudImages(self, "default",
            most_recent=True,
            name_regex="^ubuntu_18.*64",
            owners="system"
        )
        data_alicloud_zones_default =
        alicloud.data_alicloud_zones.DataAlicloudZones(self, "default_3",
            available_resource_creation="VSwitch"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_alicloud_zones_default.override_logical_id("default")
        alicloud_security_group_tf_test_foo =
        alicloud.security_group.SecurityGroup(self, "tf_test_foo",
            description="foo",
            name=name.string_value,
            vpc_id=cdktf.Token.as_string(alicloud_vpc_foo.id)
        )
        alicloud.security_group_rule.SecurityGroupRule(self, "ingress",
            cidr_ip="0.0.0.0/0",
            ip_protocol="tcp",
            nic_type="intranet",
            policy="accept",
            port_range="22/22",
            priority=1,
            security_group_id=cdktf.Token.as_string(alicloud_security_group_tf_test_foo.id),
            type="ingress"
        )
        alicloud_vswitch_foo = alicloud.vswitch.Vswitch(self, "foo_6",
            cidr_block="10.1.1.0/24",
            vpc_id=cdktf.Token.as_string(alicloud_vpc_foo.id),
            vswitch_name=name.string_value,
            zone_id=cdktf.Token.as_string(
                cdktf.property_access(data_alicloud_zones_default.zones, ["0", "id"]))
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_vswitch_foo.override_logical_id("foo")
        data_alicloud_instance_types_default =
        alicloud.data_alicloud_instance_types.DataAlicloudInstanceTypes(self, "default_7",
            availability_zone=cdktf.Token.as_string(
                cdktf.property_access(data_alicloud_zones_default.zones, ["0", "id"])),
            cpu_core_count=1,
            memory_size=2
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_alicloud_instance_types_default.override_logical_id("default")
        alicloud_instance_foo = alicloud.instance.Instance(self, "foo_8",
            image_id=cdktf.Token.as_string(
                cdktf.property_access(data_alicloud_images_default.images, ["0", "id"])),
            instance_charge_type="PostPaid",
            instance_name=name.string_value,
            instance_type=cdktf.Token.as_string(
                cdktf.property_access(data_alicloud_instance_types_default.instance_types, ["0", "id"
                ])),
            internet_charge_type="PayByTraffic",
            internet_max_bandwidth_out=5,
            security_groups=[cdktf.Token.as_string(alicloud_security_group_tf_test_foo.id)],
            system_disk_category="cloud_efficiency",
            vswitch_id=cdktf.Token.as_string(alicloud_vswitch_foo.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_instance_foo.override_logical_id("foo")
        alicloud_route_entry_foo = alicloud.route_entry.RouteEntry(self, "foo_9",
            destination_cidrblock="172.11.1.1/32",
            nexthop_id=cdktf.Token.as_string(alicloud_instance_foo.id),
            nexthop_type="Instance",
            route_table_id=cdktf.Token.as_string(alicloud_vpc_foo.route_table_id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_route_entry_foo.override_logical_id("foo")
```

## Module Support

You can use to the existing [vpc module](https://registry.terraform.io/modules/alibaba/vpc/alicloud) 
to create a VPC, several VSwitches and add several route entries one-click.

## Argument Reference

The following arguments are supported:

* `router_id` - (Deprecated) This argument has been deprecated. Please use other arguments to launch a custom route entry.
* `route_table_id` - (Required, ForceNew) The ID of the route table.
* `destination_cidrblock` - (ForceNew) The RouteEntry's target network segment.
* `nexthop_type` - (ForceNew) The next hop type. Available values:
    - `Instance` (Default): an Elastic Compute Service (ECS) instance. This is the default value.
    - `RouterInterface`: a router interface.
    - `VpnGateway`: a VPN Gateway.
    - `HaVip`: a high-availability virtual IP address (HAVIP).
    - `NetworkInterface`: an elastic network interface (ENI).
    - `NatGateway`: a Nat Gateway.
    - `IPv6Gateway`: an IPv6 gateway.
    - `Attachment`: a transit router.
    - `VpcPeer`: a VPC Peering Connection.
    - `Ipv4Gateway`  (Available in 1.193.0+): an IPv4 gateway.

* `nexthop_id` - (ForceNew) The route entry's next hop. ECS instance ID or VPC router interface ID.
* `name` - (Optional, ForceNew, Available in 1.55.1+) The name of the route entry. This name can have a string of 2 to 128 characters, must contain only alphanumeric characters or hyphens, such as "-",".","_", and must not begin or end with a hyphen, and must not begin with http:// or https://.

## Attributes Reference

The following attributes are exported:

* `id` - The route entry id,it formats of `<route_table_id:router_id:destination_cidrblock:nexthop_type:nexthop_id>`.

## Import

Router entry can be imported using the id, e.g (formatted as<route_table_id:router_id:destination_cidrblock:nexthop_type:nexthop_id>).

```shell
$ terraform import alicloud_route_entry.example vtb-123456:vrt-123456:0.0.0.0/0:NatGateway:ngw-123456
```


<!-- cache-key: cdktf-0.17.0-pre.15 input-fb94d466a4a1462afbaf1065260d29973168f743ee073b0d4aa52ab49db1d227 -->