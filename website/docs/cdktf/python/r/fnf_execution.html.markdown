---
subcategory: "Serverless Workflow (FnF)"
layout: "alicloud"
page_title: "Alicloud: alicloud_fnf_execution"
sidebar_current: "docs-alicloud-resource-fnf-execution"
description: |-
  Provides a Alicloud Serverless Workflow Execution resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_fnf\_execution

Provides a Serverless Workflow Execution resource.

For information about Serverless Workflow Execution and how to use it, see [What is Execution](https://www.alibabacloud.com/help/en/doc-detail/122628.html).

-> **NOTE:** Available in v1.149.0+.

## Example Usage

Basic Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.alicloud as alicloud
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        # Terraform Variables are not always the best fit for getting inputs in the context of Terraform CDK.
        #     You can read more about this at https://cdk.tf/variables
        name = cdktf.TerraformVariable(self, "name",
            default="tf-testacc-fnfflow"
        )
        alicloud_ram_role_default = alicloud.ram_role.RamRole(self, "default",
            document="  {\n    \"Statement\": [\n      {\n        \"Action\": \"sts:AssumeRole\",\n        \"Effect\": \"Allow\",\n        \"Principal\": {\n          \"Service\": [\n            \"fnf.aliyuncs.com\"\n          ]\n        }\n      }\n    ],\n    \"Version\": \"1\"\n  }\n",
            name=name.string_value
        )
        alicloud_fnf_flow_default = alicloud.fnf_flow.FnfFlow(self, "default_2",
            definition="  version: v1beta1\n  type: flow\n  steps:\n    - type: wait\n      name: custom_wait\n      duration: $.wait\n",
            description="Test for terraform fnf_flow.",
            name=name.string_value,
            role_arn=cdktf.Token.as_string(alicloud_ram_role_default.arn),
            type="FDL"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_fnf_flow_default.override_logical_id("default")
        alicloud_fnf_execution_default = alicloud.fnf_execution.FnfExecution(self, "default_3",
            execution_name=name.string_value,
            flow_name=cdktf.Token.as_string(alicloud_fnf_flow_default.name),
            input="{\\\"wait\\\": 600}"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_fnf_execution_default.override_logical_id("default")
```

## Argument Reference

The following arguments are supported:

* `execution_name` - (Required, ForceNew) The name of the execution.
* `flow_name` - (Required, ForceNew) The name of the flow.
* `input` - (Optional, ForceNew) The Input information for this execution.
* `status` - (Optional, Computed) The status of the resource. Valid values: `Stopped`.

## Attributes Reference

The following attributes are exported:

* `id` - The resource ID of Execution. The value formats as `<flow_name>:<execution_name>`.

### Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/docs/configuration-0-11/resources.html#timeouts) for certain actions:

* `create` - (Defaults to 5 mins) Used when create the Execution.
* `update` - (Defaults to 5 mins) Used when update the Execution.

## Import

Serverless Workflow Execution can be imported using the id, e.g.

```shell
$ terraform import alicloud_fnf_execution.example <flow_name>:<execution_name>
```
<!-- cache-key: cdktf-0.17.0-pre.15 input-c6ab50d030a52bc1e9c617967365559b9119456f1b5d6bd891ca367aa5349105 -->