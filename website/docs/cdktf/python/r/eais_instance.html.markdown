---
subcategory: "Elastic Accelerated Computing Instances (EAIS)"
layout: "alicloud"
page_title: "Alicloud: alicloud_eais_instance"
sidebar_current: "docs-alicloud-resource-eais-instance"
description: |-
  Provides a Alicloud EAIS Instance resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_eais\_instance

Provides a EAIS Instance resource.

For information about EAIS Instance and how to use it, see [What is Instance](https://help.aliyun.com/document_detail/185066.html).

-> **NOTE:** Available in v1.137.0+.

## Example Usage

Basic Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.alicloud as alicloud
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        # Terraform Variables are not always the best fit for getting inputs in the context of Terraform CDK.
        #     You can read more about this at https://cdk.tf/variables
        name = cdktf.TerraformVariable(self, "name",
            default="%v"
        )
        data_alicloud_vpcs_default =
        alicloud.data_alicloud_vpcs.DataAlicloudVpcs(self, "default",
            cidr_block="172.16.0.0/12"
        )
        # In most cases loops should be handled in the programming language context and
        #     not inside of the Terraform context. If you are looping over something external, e.g. a variable or a file input
        #     you should consider using a for loop. If you are looping over something only known to Terraform, e.g. a result of a data source
        #     you need to keep this like it is.
        alicloud_vpc_default_count = cdktf.TerraformCount.of(
            cdktf.Token.as_number(
                cdktf.conditional(
                    cdktf.Op.gt(cdktf.Fn.length_of(data_alicloud_vpcs_default.ids), 0), 0, 1)))
        alicloud_vpc_default = alicloud.vpc.Vpc(self, "default_2",
            cidr_block="172.16.0.0/12",
            vpc_name=name.string_value,
            count=alicloud_vpc_default_count
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_vpc_default.override_logical_id("default")
        data_alicloud_vswitches_default =
        alicloud.data_alicloud_vswitches.DataAlicloudVswitches(self, "default_3",
            vpc_id=cdktf.Token.as_string(
                cdktf.conditional(
                    cdktf.Op.gt(cdktf.Fn.length_of(data_alicloud_vpcs_default.ids), 0),
                    cdktf.property_access(data_alicloud_vpcs_default.ids, ["0"]),
                    cdktf.property_access(alicloud_vpc_default, ["0", "id"]))),
            zone_id="cn-hangzhou-h"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_alicloud_vswitches_default.override_logical_id("default")
        alicloud_security_group_default =
        alicloud.security_group.SecurityGroup(self, "default_4",
            description="tf test",
            name=name.string_value,
            vpc_id=cdktf.Token.as_string(
                cdktf.conditional(
                    cdktf.Op.gt(cdktf.Fn.length_of(data_alicloud_vpcs_default.ids), 0),
                    cdktf.property_access(data_alicloud_vpcs_default.ids, ["0"]),
                    cdktf.property_access(alicloud_vpc_default, ["0", "id"])))
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_security_group_default.override_logical_id("default")
        # In most cases loops should be handled in the programming language context and
        #     not inside of the Terraform context. If you are looping over something external, e.g. a variable or a file input
        #     you should consider using a for loop. If you are looping over something only known to Terraform, e.g. a result of a data source
        #     you need to keep this like it is.
        alicloud_vswitch_default_count = cdktf.TerraformCount.of(
            cdktf.Token.as_number(
                cdktf.conditional(
                    cdktf.Op.gt(cdktf.Fn.length_of(data_alicloud_vswitches_default.ids), 0), 0, 1)))
        alicloud_vswitch_default = alicloud.vswitch.Vswitch(self, "default_5",
            cidr_block=cdktf.Fn.cidrsubnet(
                cdktf.Token.as_string(
                    cdktf.property_access(data_alicloud_vpcs_default.vpcs, ["0", "cidr_block"
                    ])), 8, 2),
            vpc_id=cdktf.Token.as_string(
                cdktf.conditional(
                    cdktf.Op.gt(cdktf.Fn.length_of(data_alicloud_vpcs_default.ids), 0),
                    cdktf.property_access(data_alicloud_vpcs_default.ids, ["0"]),
                    cdktf.property_access(alicloud_vpc_default, ["0", "id"]))),
            vswitch_name=name.string_value,
            zone_id="cn-hangzhou-h",
            count=alicloud_vswitch_default_count
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_vswitch_default.override_logical_id("default")
        alicloud_eais_instance_default = alicloud.eais_instance.EaisInstance(self, "default_6",
            instance_name=name.string_value,
            instance_type="eais.ei-a6.4xlarge",
            security_group_id=cdktf.Token.as_string(alicloud_security_group_default.id),
            vswitch_id=cdktf.Token.as_string(
                cdktf.conditional(
                    cdktf.Op.gt(cdktf.Fn.length_of(data_alicloud_vswitches_default.ids), 0),
                    cdktf.property_access(data_alicloud_vswitches_default.ids, ["0"]),
                    cdktf.property_access(alicloud_vswitch_default, ["0", "id"])))
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_eais_instance_default.override_logical_id("default")
```

## Argument Reference

The following arguments are supported:

* `force` - (Optional) Whether to force deletion when the instance status does not meet the deletion conditions. Valid values: `true` and `false`.
* `instance_name` - (Optional, ForceNew) The name of the instance.
* `instance_type` - (Required, ForceNew) The type of the resource. Valid values: `eais.ei-a6.4xlarge`, `eais.ei-a6.2xlarge`, `eais.ei-a6.xlarge`, `eais.ei-a6.large`, `eais.ei-a6.medium`.
* `security_group_id` - (Required) The ID of the security group.
* `vswitch_id` - (Required) The ID of the vswitch.

## Attributes Reference

The following attributes are exported:

* `id` - The resource ID in terraform of Instance.
* `status` - The status of the resource. Valid values: `Attaching`, `Available`, `Detaching`, `InUse`, `Starting`, `Unavailable`.

### Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/docs/configuration-0-11/resources.html#timeouts) for certain actions:

* `create` - (Defaults to 5 mins) Used when create the Instance.

## Import

EAIS Instance can be imported using the id, e.g.

```shell
$ terraform import alicloud_eais_instance.example <id>
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-19c430450b70e6fa26de40bf3f9eab65790528087e01942027c2ec3e543e1bcf -->