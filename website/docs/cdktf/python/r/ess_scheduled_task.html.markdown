---
subcategory: "Auto Scaling"
layout: "alicloud"
page_title: "Alicloud: alicloud_ess_schedule"
sidebar_current: "docs-alicloud-resource-ess-schedule"
description: |-
  Provides a ESS schedule resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_ess\_scheduled\_task

Provides a ESS schedule resource.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.alicloud as alicloud
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        # Terraform Variables are not always the best fit for getting inputs in the context of Terraform CDK.
        #     You can read more about this at https://cdk.tf/variables
        name = cdktf.TerraformVariable(self, "name",
            default="essscheduleconfig"
        )
        alicloud_vpc_default = alicloud.vpc.Vpc(self, "default",
            cidr_block="172.16.0.0/16",
            vpc_name=name.string_value
        )
        data_alicloud_images_default =
        alicloud.data_alicloud_images.DataAlicloudImages(self, "default_2",
            most_recent=True,
            name_regex="^ubuntu_18.*64",
            owners="system"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_alicloud_images_default.override_logical_id("default")
        data_alicloud_zones_default =
        alicloud.data_alicloud_zones.DataAlicloudZones(self, "default_3",
            available_disk_category="cloud_efficiency",
            available_resource_creation="VSwitch"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_alicloud_zones_default.override_logical_id("default")
        alicloud_security_group_default =
        alicloud.security_group.SecurityGroup(self, "default_4",
            name=name.string_value,
            vpc_id=cdktf.Token.as_string(alicloud_vpc_default.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_security_group_default.override_logical_id("default")
        alicloud_security_group_rule_default =
        alicloud.security_group_rule.SecurityGroupRule(self, "default_5",
            cidr_ip="172.16.0.0/24",
            ip_protocol="tcp",
            nic_type="intranet",
            policy="accept",
            port_range="22/22",
            priority=1,
            security_group_id=cdktf.Token.as_string(alicloud_security_group_default.id),
            type="ingress"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_security_group_rule_default.override_logical_id("default")
        alicloud_vswitch_default = alicloud.vswitch.Vswitch(self, "default_6",
            cidr_block="172.16.0.0/24",
            name=name.string_value,
            vpc_id=cdktf.Token.as_string(alicloud_vpc_default.id),
            zone_id=cdktf.Token.as_string(
                cdktf.property_access(data_alicloud_zones_default.zones, ["0", "id"]))
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_vswitch_default.override_logical_id("default")
        data_alicloud_instance_types_default =
        alicloud.data_alicloud_instance_types.DataAlicloudInstanceTypes(self, "default_7",
            availability_zone=cdktf.Token.as_string(
                cdktf.property_access(data_alicloud_zones_default.zones, ["0", "id"])),
            cpu_core_count=2,
            memory_size=4
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_alicloud_instance_types_default.override_logical_id("default")
        alicloud_ess_scaling_group_default =
        alicloud.ess_scaling_group.EssScalingGroup(self, "default_8",
            max_size=1,
            min_size=1,
            removal_policies=["OldestInstance", "NewestInstance"],
            scaling_group_name=name.string_value,
            vswitch_ids=[cdktf.Token.as_string(alicloud_vswitch_default.id)]
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_ess_scaling_group_default.override_logical_id("default")
        alicloud_ess_scaling_rule_default =
        alicloud.ess_scaling_rule.EssScalingRule(self, "default_9",
            adjustment_type="TotalCapacity",
            adjustment_value=2,
            cooldown=60,
            scaling_group_id=cdktf.Token.as_string(alicloud_ess_scaling_group_default.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_ess_scaling_rule_default.override_logical_id("default")
        alicloud_ess_scheduled_task_default =
        alicloud.ess_scheduled_task.EssScheduledTask(self, "default_10",
            launch_time="2019-05-21T11:37Z",
            scheduled_action=cdktf.Token.as_string(alicloud_ess_scaling_rule_default.ari),
            scheduled_task_name=name.string_value
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_ess_scheduled_task_default.override_logical_id("default")
        alicloud_ess_scaling_configuration_default =
        alicloud.ess_scaling_configuration.EssScalingConfiguration(self, "default_11",
            force_delete=cdktf.Token.as_boolean("true"),
            image_id=cdktf.Token.as_string(
                cdktf.property_access(data_alicloud_images_default.images, ["0", "id"])),
            instance_type=cdktf.Token.as_string(
                cdktf.property_access(data_alicloud_instance_types_default.instance_types, ["0", "id"])),
            scaling_group_id=cdktf.Token.as_string(alicloud_ess_scaling_group_default.id),
            security_group_id=cdktf.Token.as_string(alicloud_security_group_default.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_ess_scaling_configuration_default.override_logical_id("default")
```

## Module Support

You can use to the existing [autoscaling-rule module](https://registry.terraform.io/modules/terraform-alicloud-modules/autoscaling-rule/alicloud) 
to create scheduled task, different type rules and alarm task one-click.

## Argument Reference

The following arguments are supported:

* `scheduled_action` - (Optional) The operation to be performed when a scheduled task is triggered. Enter the unique identifier of a scaling rule. **NOTE:** You cannot specify `scheduled_action` and `scaling_group_id` at the same time.
* `scheduled_task_name` - (Optional) Display name of the scheduled task, which must be 2-40 characters (English or Chinese) long.
* `scaling_group_id` - (Optional, Available in 1.90.0+) The ID of the scaling group where the number of instances is modified when the scheduled task is triggered. After the `ScalingGroupId` parameter is specified, the scaling method of the scheduled task is to specify the number of instances in a scaling group. You must specify at least one of the following parameters: `MinValue`, `MaxValue`, and `DesiredCapacity`. **NOTE:** You cannot specify `scheduled_action` and `scaling_group_id` at the same time.
* `min_value` - (Optional, Available in 1.90.0+) The minimum number of instances in a scaling group when the scaling method of the scheduled task is to specify the number of instances in a scaling group.
* `max_value` - (Optional, Available in 1.90.0+) The maximum number of instances in a scaling group when the scaling method of the scheduled task is to specify the number of instances in a scaling group.
* `desired_capacity` - (Optional, Available in 1.90.0+) The expected number of instances in a scaling group when the scaling method of the scheduled task is to specify the number of instances in a scaling group. **NOTE:** You must specify the `DesiredCapacity` parameter when you create the scaling group.
* `description` - (Optional) Description of the scheduled task, which is 2-200 characters (English or Chinese) long.
* `launch_time` - (Optional) The time at which the scheduled task is triggered. Specify the time in the ISO 8601 standard in the YYYY-MM-DDThh:mmZ format. 
The time must be in UTC. You cannot enter a time point later than 90 days from the date of scheduled task creation. 
If the `recurrence_type` parameter is specified, the task is executed repeatedly at the time specified by LaunchTime. 
Otherwise, the task is only executed once at the date and time specified by LaunchTime.
* `launch_expiration_time` - (Optional) The time period during which a failed scheduled task is retried. Unit: seconds. Valid values: 0 to 21600. Default value: 600
* `recurrence_type` - (Optional) Specifies the recurrence type of the scheduled task. **NOTE:** You must specify `RecurrenceType`, `RecurrenceValue`, and `RecurrenceEndTime` at the same time. Valid values:
    - Daily: The scheduled task is executed once every specified number of days.
    - Weekly: The scheduled task is executed on each specified day of a week.
    - Monthly: The scheduled task is executed on each specified day of a month.
    - Cron: (Available in 1.60.0+) The scheduled task is executed based on the specified cron expression.
* `recurrence_value` - (Optional) Specifies how often a scheduled task recurs. **NOTE:** You must specify `RecurrenceType`, `RecurrenceValue`, and `RecurrenceEndTime` at the same time. The valid value depends on `recurrence_type`
    - Daily: You can enter one value. Valid values: 1 to 31.
    - Weekly: You can enter multiple values and separate them with commas (,). For example, the values 0 to 6 correspond to the days of the week in sequence from Sunday to Saturday.
    - Monthly: You can enter two values in A-B format. Valid values of A and B: 1 to 31. The value of B must be greater than or equal to the value of A.
    - Cron: You can enter a cron expression which is written in UTC and consists of five fields: minute, hour, day of month (date), month, and day of week. The expression can contain wildcard characters including commas (,), question marks (?), hyphens (-), asterisks (*), number signs (#), forward slashes (/), and the L and W letters.
* `recurrence_end_time` - (Optional) Specifies the end time after which the scheduled task is no longer repeated. Specify the time in the ISO 8601 standard in the YYYY-MM-DDThh:mm:ssZ format. 
The time must be in UTC. You cannot enter a time point later than 365 days from the date of scheduled task creation. **NOTE:** You must specify `RecurrenceType`, `RecurrenceValue`, and `RecurrenceEndTime` at the same time.                                
* `task_enabled` - (Optional) Specifies whether to start the scheduled task. Default to true.
                                  
                                 
## Attributes Reference

The following attributes are exported:

* `id` - The schedule task ID.

## Import

ESS schedule task can be imported using the id, e.g.

```shell
$ terraform import alicloud_ess_scheduled_task.example abc123456
```


<!-- cache-key: cdktf-0.17.0-pre.15 input-cb95ca666799d8d0ae69c6a6b58d1ff145b40820b6c8518eb9207fd292a92733 -->