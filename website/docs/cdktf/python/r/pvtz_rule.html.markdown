---
subcategory: "Private Zone"
layout: "alicloud"
page_title: "Alicloud: alicloud_pvtz_rule"
sidebar_current: "docs-alicloud-resource-pvtz-rule"
description: |-
  Provides a Alicloud PrivateZone Rule resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_pvtz\_rule

Provides a Private Zone Rule resource.

For information about Private Zone Rule and how to use it, see [What is Rule](https://www.alibabacloud.com/help/en/doc-detail/177601.htm).

-> **NOTE:** Available in v1.143.0+.

## Example Usage

Basic Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.alicloud as alicloud
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        # Terraform Variables are not always the best fit for getting inputs in the context of Terraform CDK.
        #     You can read more about this at https://cdk.tf/variables
        name = cdktf.TerraformVariable(self, "name",
            default="example_value"
        )
        alicloud_vpc_default = alicloud.vpc.Vpc(self, "default",
            cidr_block="172.16.0.0/12",
            vpc_name=name.string_value
        )
        data_alicloud_pvtz_resolver_zones_default =
        alicloud.data_alicloud_pvtz_resolver_zones.DataAlicloudPvtzResolverZones(self, "default_2",
            status="NORMAL"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_alicloud_pvtz_resolver_zones_default.override_logical_id("default")
        alicloud_security_group_default =
        alicloud.security_group.SecurityGroup(self, "default_3",
            name=name.string_value,
            vpc_id=cdktf.Token.as_string(alicloud_vpc_default.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_security_group_default.override_logical_id("default")
        # In most cases loops should be handled in the programming language context and
        #     not inside of the Terraform context. If you are looping over something external, e.g. a variable or a file input
        #     you should consider using a for loop. If you are looping over something only known to Terraform, e.g. a result of a data source
        #     you need to keep this like it is.
        alicloud_vswitch_default_count = cdktf.TerraformCount.of(
            cdktf.Token.as_number("2"))
        alicloud_vswitch_default = alicloud.vswitch.Vswitch(self, "default_4",
            cidr_block=cdktf.Fn.cidrsubnet(
                cdktf.Token.as_string(alicloud_vpc_default.cidr_block), 8,
                cdktf.Token.as_number(alicloud_vswitch_default_count.index)),
            vpc_id=cdktf.Token.as_string(alicloud_vpc_default.id),
            zone_id=cdktf.Token.as_string(
                cdktf.property_access(
                    cdktf.property_access(data_alicloud_pvtz_resolver_zones_default.zones, [alicloud_vswitch_default_count.index
                    ]), ["zone_id"])),
            count=alicloud_vswitch_default_count
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_vswitch_default.override_logical_id("default")
        alicloud_pvtz_endpoint_default = alicloud.pvtz_endpoint.PvtzEndpoint(self, "default_5",
            endpoint_name=name.string_value,
            ip_configs=[PvtzEndpointIpConfigs(
                cidr_block=cdktf.Token.as_string(
                    cdktf.property_access(alicloud_vswitch_default, ["0", "cidr_block"])),
                vswitch_id=cdktf.Token.as_string(
                    cdktf.property_access(alicloud_vswitch_default, ["0", "id"])),
                zone_id=cdktf.Token.as_string(
                    cdktf.property_access(alicloud_vswitch_default, ["0", "zone_id"]))
            ), PvtzEndpointIpConfigs(
                cidr_block=cdktf.Token.as_string(
                    cdktf.property_access(alicloud_vswitch_default, ["1", "cidr_block"])),
                vswitch_id=cdktf.Token.as_string(
                    cdktf.property_access(alicloud_vswitch_default, ["1", "id"])),
                zone_id=cdktf.Token.as_string(
                    cdktf.property_access(alicloud_vswitch_default, ["1", "zone_id"]))
            )
            ],
            security_group_id=cdktf.Token.as_string(alicloud_security_group_default.id),
            vpc_id=cdktf.Token.as_string(alicloud_vpc_default.id),
            vpc_region_id="vpc_region_id"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_pvtz_endpoint_default.override_logical_id("default")
        alicloud_pvtz_rule_default = alicloud.pvtz_rule.PvtzRule(self, "default_6",
            endpoint_id=cdktf.Token.as_string(alicloud_pvtz_endpoint_default.id),
            forward_ips=[PvtzRuleForwardIps(
                ip="114.114.114.114",
                port=8080
            )
            ],
            rule_name=name.string_value,
            type="OUTBOUND",
            zone_name=name.string_value
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_pvtz_rule_default.override_logical_id("default")
```

## Argument Reference

The following arguments are supported:

* `endpoint_id` - (Required, ForceNew) The ID of the Endpoint.
* `forward_ips` - (Required) Forwarding target. See the following `Block forward_ip`.
* `rule_name` - (Required, ForceNew) The name of the resource.
* `type` - (Optional, ForceNew) The type of the rule. Valid values: `OUTBOUND`.
* `zone_name` - (Required, ForceNew) The name of the forwarding zone.

#### Block forward_ips

The forward_ips supports the following:

* `ip` - (Required) The ip of the forwarding destination.
* `port` - (Required) The port of the forwarding destination.

## Attributes Reference

The following attributes are exported:

* `id` - The resource ID in terraform of Rule.

## Import

Private Zone Rule can be imported using the id, e.g.

```shell
$ terraform import alicloud_pvtz_rule.example <id>
```
<!-- cache-key: cdktf-0.17.0-pre.15 input-4644b6a3c5d94b01553c241703ab466a4aeda38c4c1b2bf4dab810a0c8944e22 -->