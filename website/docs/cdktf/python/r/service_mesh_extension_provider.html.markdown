---
subcategory: "Service Mesh"
layout: "alicloud"
page_title: "Alicloud: alicloud_service_mesh_extension_provider"
sidebar_current: "docs-alicloud-resource-service-mesh-extension-provider"
description: |-
  Provides a Alicloud Service Mesh Extension Provider resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_service\_mesh\_extension\_provider

Provides a Service Mesh Extension Provider resource.

For information about Service Mesh Extension Provider and how to use it, see [What is Extension Provider](https://help.aliyun.com/document_detail/461549.html).

-> **NOTE:** Available in v1.191.0+.

## Example Usage

Basic Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.alicloud as alicloud
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        data_alicloud_vpcs_default =
        alicloud.data_alicloud_vpcs.DataAlicloudVpcs(self, "default",
            name_regex="default-NODELETING"
        )
        data_alicloud_zones_default =
        alicloud.data_alicloud_zones.DataAlicloudZones(self, "default_1",
            available_resource_creation="VSwitch"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_alicloud_zones_default.override_logical_id("default")
        # In most cases loops should be handled in the programming language context and
        #     not inside of the Terraform context. If you are looping over something external, e.g. a variable or a file input
        #     you should consider using a for loop. If you are looping over something only known to Terraform, e.g. a result of a data source
        #     you need to keep this like it is.
        alicloud_vpc_default_count = cdktf.TerraformCount.of(
            cdktf.Token.as_number(
                cdktf.conditional(
                    cdktf.Op.gt(cdktf.Fn.length_of(data_alicloud_vpcs_default.ids), 0), 0, 1)))
        alicloud_vpc_default = alicloud.vpc.Vpc(self, "default_2",
            count=alicloud_vpc_default_count
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_vpc_default.override_logical_id("default")
        data_alicloud_vswitches_default =
        alicloud.data_alicloud_vswitches.DataAlicloudVswitches(self, "default_3",
            vpc_id=cdktf.Token.as_string(
                cdktf.conditional(
                    cdktf.Op.gt(cdktf.Fn.length_of(data_alicloud_vpcs_default.ids), 0),
                    cdktf.property_access(data_alicloud_vpcs_default.ids, ["0"]),
                    cdktf.property_access(alicloud_vpc_default, ["0", "id"])))
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_alicloud_vswitches_default.override_logical_id("default")
        # In most cases loops should be handled in the programming language context and
        #     not inside of the Terraform context. If you are looping over something external, e.g. a variable or a file input
        #     you should consider using a for loop. If you are looping over something only known to Terraform, e.g. a result of a data source
        #     you need to keep this like it is.
        alicloud_vswitch_default_count = cdktf.TerraformCount.of(
            cdktf.Token.as_number(
                cdktf.conditional(
                    cdktf.Op.gt(cdktf.Fn.length_of(data_alicloud_vswitches_default.ids), 0), 0, 1)))
        alicloud_vswitch_default = alicloud.vswitch.Vswitch(self, "default_4",
            cidr_block=cdktf.Fn.cidrsubnet(
                cdktf.Token.as_string(
                    cdktf.property_access(data_alicloud_vpcs_default.vpcs, ["0", "cidr_block"
                    ])), 8, 2),
            vpc_id=cdktf.Token.as_string(
                cdktf.conditional(
                    cdktf.Op.gt(cdktf.Fn.length_of(data_alicloud_vpcs_default.ids), 0),
                    cdktf.property_access(data_alicloud_vpcs_default.ids, ["0"]),
                    cdktf.property_access(alicloud_vpc_default, ["0", "id"]))),
            zone_id=cdktf.Token.as_string(
                cdktf.property_access(data_alicloud_zones_default.zones, ["0", "id"])),
            count=alicloud_vswitch_default_count
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_vswitch_default.override_logical_id("default")
        alicloud_service_mesh_service_mesh_default =
        alicloud.service_mesh_service_mesh.ServiceMeshServiceMesh(self, "default_5",
            network=ServiceMeshServiceMeshNetwork(
                vpc_id=cdktf.Token.as_string(
                    cdktf.conditional(
                        cdktf.Op.gt(cdktf.Fn.length_of(data_alicloud_vpcs_default.ids), 0),
                        cdktf.property_access(data_alicloud_vpcs_default.ids, ["0"]),
                        cdktf.property_access(alicloud_vpc_default, ["0", "id"]))),
                vswitche_list=[
                    cdktf.Token.as_string(
                        cdktf.conditional(
                            cdktf.Op.gt(
                                cdktf.Fn.length_of(data_alicloud_vswitches_default.ids), 0),
                            cdktf.property_access(data_alicloud_vswitches_default.ids, ["0"]),
                            cdktf.property_access(alicloud_vswitch_default, ["0", "id"])))
                ]
            )
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_service_mesh_service_mesh_default.override_logical_id("default")
        alicloud_service_mesh_extension_provider_default =
        alicloud.service_mesh_extension_provider.ServiceMeshExtensionProvider(self, "default_6",
            config="{\\\"headersToDownstreamOnDeny\\\":[\\\"content-type\\\",\\\"set-cookie\\\"],\\\"headersToUpstreamOnAllow\\\":[\\\"authorization\\\",\\\"cookie\\\",\\\"path\\\",\\\"x-auth-request-access-token\\\",\\\"x-forwarded-access-token\\\"],\\\"includeRequestHeadersInCheck\\\":[\\\"cookie\\\",\\\"x-forward-access-token\\\"],\\\"oidc\\\":{\\\"clientID\\\":\\\"qweqweqwewqeqwe\\\",\\\"clientSecret\\\":\\\"asdasdasdasdsadas\\\",\\\"cookieExpire\\\":\\\"1000\\\",\\\"cookieRefresh\\\":\\\"500\\\",\\\"cookieSecret\\\":\\\"scxzcxzcxzcxzcxz\\\",\\\"issuerURI\\\":\\\"qweqwewqeqweqweqwe\\\",\\\"redirectDomain\\\":\\\"www.alicloud-provider.cn\\\",\\\"redirectProtocol\\\":\\\"http\\\",\\\"scopes\\\":[\\\"profile\\\"]},\\\"port\\\":4180,\\\"service\\\":\\\"asm-oauth2proxy-httpextauth-tf-example.istio-system.svc.cluster.local\\\",\\\"timeout\\\":\\\"10s\\\"}",
            extension_provider_name="httpextauth-tf-example",
            service_mesh_id=cdktf.Token.as_string(alicloud_service_mesh_service_mesh_default.id),
            type="httpextauth"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_service_mesh_extension_provider_default.override_logical_id("default")
```

## Argument Reference

The following arguments are supported:

* `service_mesh_id` - (Required, ForceNew) The ID of the Service Mesh.
* `extension_provider_name` - (Required, ForceNew) The name of the Service Mesh Extension Provider. It must be prefixed with `$type-`, for example `httpextauth-xxx`, `grpcextauth-xxx`.
* `type` - (Required, ForceNew) The type of the Service Mesh Extension Provider. Valid values: `httpextauth`, `grpcextauth`.
* `config` - (Required) The config of the Service Mesh Extension Provider. The `config` format is json.

## Attributes Reference

The following attributes are exported:

* `id` - The resource ID in terraform of Extension Provider. The value formats as `<service_mesh_id>:<type>:<extension_provider_name>`.

### Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/docs/configuration-0-11/resources.html#timeouts) for certain actions:

* `create` - (Defaults to 3 mins) Used when create the Extension Provider.
* `update` - (Defaults to 3 mins) Used when update the Extension Provider.
* `delete` - (Defaults to 3 mins) Used when delete the Extension Provider.

## Import

Service Mesh Extension Provider can be imported using the id, e.g.

```shell
$ terraform import alicloud_service_mesh_extension_provider.example <service_mesh_id>:<type>:<extension_provider_name>
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-e37493c0916cbc766fca446fb9e4f322997c8b6eddef3f8fb507aace329bd072 -->