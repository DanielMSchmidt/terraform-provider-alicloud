---
subcategory: "Auto Scaling"
layout: "alicloud"
page_title: "Alicloud: alicloud_ess_scaling_rule"
sidebar_current: "docs-alicloud-resource-ess-scaling-rule"
description: |-
  Provides a ESS scaling rule resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_ess\_scaling\_rule

Provides a ESS scaling rule resource.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.alicloud as alicloud
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        # Terraform Variables are not always the best fit for getting inputs in the context of Terraform CDK.
        #     You can read more about this at https://cdk.tf/variables
        name = cdktf.TerraformVariable(self, "name",
            default="essscalingruleconfig"
        )
        alicloud_vpc_default = alicloud.vpc.Vpc(self, "default",
            cidr_block="172.16.0.0/16",
            name=name.string_value
        )
        data_alicloud_images_default =
        alicloud.data_alicloud_images.DataAlicloudImages(self, "default_2",
            most_recent=True,
            name_regex="^ubuntu_18.*64",
            owners="system"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_alicloud_images_default.override_logical_id("default")
        data_alicloud_zones_default =
        alicloud.data_alicloud_zones.DataAlicloudZones(self, "default_3",
            available_disk_category="cloud_efficiency",
            available_resource_creation="VSwitch"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_alicloud_zones_default.override_logical_id("default")
        alicloud_security_group_default =
        alicloud.security_group.SecurityGroup(self, "default_4",
            name=name.string_value,
            vpc_id=cdktf.Token.as_string(alicloud_vpc_default.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_security_group_default.override_logical_id("default")
        alicloud_security_group_rule_default =
        alicloud.security_group_rule.SecurityGroupRule(self, "default_5",
            cidr_ip="172.16.0.0/24",
            ip_protocol="tcp",
            nic_type="intranet",
            policy="accept",
            port_range="22/22",
            priority=1,
            security_group_id=cdktf.Token.as_string(alicloud_security_group_default.id),
            type="ingress"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_security_group_rule_default.override_logical_id("default")
        alicloud_vswitch_default = alicloud.vswitch.Vswitch(self, "default_6",
            cidr_block="172.16.0.0/24",
            vpc_id=cdktf.Token.as_string(alicloud_vpc_default.id),
            vswitch_name=name.string_value,
            zone_id=cdktf.Token.as_string(
                cdktf.property_access(data_alicloud_zones_default.zones, ["0", "id"]))
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_vswitch_default.override_logical_id("default")
        data_alicloud_instance_types_default =
        alicloud.data_alicloud_instance_types.DataAlicloudInstanceTypes(self, "default_7",
            availability_zone=cdktf.Token.as_string(
                cdktf.property_access(data_alicloud_zones_default.zones, ["0", "id"])),
            cpu_core_count=2,
            memory_size=4
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_alicloud_instance_types_default.override_logical_id("default")
        alicloud_ess_scaling_group_default =
        alicloud.ess_scaling_group.EssScalingGroup(self, "default_8",
            max_size=1,
            min_size=1,
            removal_policies=["OldestInstance", "NewestInstance"],
            scaling_group_name=name.string_value,
            vswitch_ids=[cdktf.Token.as_string(alicloud_vswitch_default.id)]
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_ess_scaling_group_default.override_logical_id("default")
        alicloud_ess_scaling_rule_default =
        alicloud.ess_scaling_rule.EssScalingRule(self, "default_9",
            adjustment_type="TotalCapacity",
            adjustment_value=1,
            scaling_group_id=cdktf.Token.as_string(alicloud_ess_scaling_group_default.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_ess_scaling_rule_default.override_logical_id("default")
        alicloud_ess_scaling_configuration_default =
        alicloud.ess_scaling_configuration.EssScalingConfiguration(self, "default_10",
            force_delete=cdktf.Token.as_boolean("true"),
            image_id=cdktf.Token.as_string(
                cdktf.property_access(data_alicloud_images_default.images, ["0", "id"])),
            instance_type=cdktf.Token.as_string(
                cdktf.property_access(data_alicloud_instance_types_default.instance_types, ["0", "id"])),
            scaling_group_id=cdktf.Token.as_string(alicloud_ess_scaling_group_default.id),
            security_group_id=cdktf.Token.as_string(alicloud_security_group_default.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_ess_scaling_configuration_default.override_logical_id("default")
```

## Module Support

You can use to the existing [autoscaling-rule module](https://registry.terraform.io/modules/terraform-alicloud-modules/autoscaling-rule/alicloud) 
to create different type rules, alarm task and scheduled task one-click.

## Argument Reference

The following arguments are supported:

* `scaling_group_id` - (Required) ID of the scaling group of a scaling rule.
* `adjustment_type` - (Optional) Adjustment mode of a scaling rule. Optional values:
    - QuantityChangeInCapacity: It is used to increase or decrease a specified number of ECS instances.
    - PercentChangeInCapacity: It is used to increase or decrease a specified proportion of ECS instances.
    - TotalCapacity: It is used to adjust the quantity of ECS instances in the current scaling group to a specified value.
* `adjustment_value` - (Optional) The number of ECS instances to be adjusted in the scaling rule. This parameter is required and applicable only to simple scaling rules. The number of ECS instances to be adjusted in a single scaling activity cannot exceed 500. Value range:
    - QuantityChangeInCapacity：(0, 500] U (-500, 0]
    - PercentChangeInCapacity：[0, 10000] U [-100, 0]
    - TotalCapacity：[0, 1000]
* `scaling_rule_name` - (Optional) Name shown for the scaling rule, which must contain 2-64 characters (English or Chinese), starting with numbers, English letters or Chinese characters, and can contain number, underscores `_`, hypens `-`, and decimal point `.`. If this parameter value is not specified, the default value is scaling rule id. 
* `cooldown` - (Optional) The cooldown time of the scaling rule. This parameter is applicable only to simple scaling rules. Value range: [0, 86,400], in seconds. The default value is empty，if not set, the return value will be 0, which is the default value of integer.
* `scaling_rule_type` - (Optional, Available in 1.58.0+) The scaling rule type, either "SimpleScalingRule", "TargetTrackingScalingRule", "StepScalingRule". Default to "SimpleScalingRule".
* `estimated_instance_warmup` - (Optional, Available in 1.58.0+) The estimated time, in seconds, until a newly launched instance will contribute CloudMonitor metrics. Default to 300.
* `metric_name` - (Optional, Available in 1.58.0+) A CloudMonitor metric name.
* `target_value` - (Optional, Available in 1.58.0+) The target value for the metric.
* `disable_scale_in` - (Optional, Available in 1.58.0+) Indicates whether scale in by the target tracking policy is disabled. Default to false.
* `step_adjustment` - (Optional, Available in 1.58.0+) Steps for StepScalingRule. See [Block stepAdjustment](#block-stepAdjustment) below for details.

## Block stepAdjustment

The stepAdjustment mapping supports the following:

* `metric_interval_lower_bound` - (Optional) The lower bound of step.
* `metric_interval_upper_bound` - (Optional) The upper bound of step.
* `scaling_adjustment` - (Optional) The adjust value of step.

## Attributes Reference

The following attributes are exported:

* `id` - The scaling rule ID.

## Import

ESS scaling rule can be imported using the id, e.g.

```shell
$ terraform import alicloud_ess_scaling_rule.example abc123456
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-2f5094085ea472feb0c14912acd13709a83d04663200dd503a83712ada87548e -->