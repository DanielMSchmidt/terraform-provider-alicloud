---
subcategory: "ECS"
layout: "alicloud"
page_title: "Alicloud: alicloud_security_groups"
sidebar_current: "docs-alicloud-datasource-security-groups"
description: |-
    Provides a list of Security Groups available to the user.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_security\_groups

This data source provides a list of Security Groups in an Alibaba Cloud account according to the specified filters.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.alicloud as alicloud
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        alicloud_vpc_primary_vpc_ds = alicloud.vpc.Vpc(self, "primary_vpc_ds")
        data_alicloud_security_groups_primary_sec_groups_ds =
        alicloud.data_alicloud_security_groups.DataAlicloudSecurityGroups(self, "primary_sec_groups_ds",
            vpc_id=cdktf.Token.as_string(alicloud_vpc_primary_vpc_ds.id)
        )
        alicloud.data_alicloud_security_groups.DataAlicloudSecurityGroups(self, "sec_groups_ds",
            name_regex="^web-",
            output_file="web_access.json"
        )
        cdktf.TerraformOutput(self, "first_group_id",
            value=cdktf.property_access(data_alicloud_security_groups_primary_sec_groups_ds.groups, ["0", "id"])
        )
```

## Argument Reference

The following arguments are supported:

* `ids` - (Optional, Available 1.52.0+) A list of Security Group IDs.
* `name_regex` - (Optional) A regex string to filter the resulting security groups by their names.
* `vpc_id` - (Optional) Used to retrieve security groups that belong to the specified VPC ID.
* `resource_group_id` - (Optional, ForceNew, Available in 1.58.0+) The Id of resource group which the security_group belongs.
* `output_file` - (Optional) File name where to save data source results (after running `terraform plan`).
* `tags` - (Optional) A map of tags assigned to the ECS instances. It must be in the format:
  ```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.alicloud as alicloud
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        alicloud.data_alicloud_security_groups.DataAlicloudSecurityGroups(self, "taggedSecurityGroups",
            tags={
                "tag_key1": "tagValue1",
                "tag_key2": "tagValue2"
            }
        )
```

## Attributes Reference

The following attributes are exported in addition to the arguments listed above:

* `ids` - A list of Security Group IDs.
* `names` - A list of Security Group names.
* `groups` - A list of Security Groups. Each element contains the following attributes:
  * `id` - The ID of the security group.
  * `name` - The name of the security group.
  * `description` - The description of the security group.
  * `vpc_id` - The ID of the VPC that owns the security group.
  * `resource_group_id` - The Id of resource group which the security_group belongs.
  * `security_group_type` - The type of the security group.
  * `inner_access` - Whether to allow inner network access.
  * `creation_time` - Creation time of the security group.
  * `tags` - A map of tags assigned to the ECS instance.

<!-- cache-key: cdktf-0.17.0-pre.15 input-e3b08e05c848a78b193ee246eb9aeb92a25926cabb8a356f71dc70d673a82b4c -->