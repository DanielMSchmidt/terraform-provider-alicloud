---
subcategory: "Threat Detection"
layout: "alicloud"
page_title: "Alicloud: alicloud_threat_detection_honeypot_probes"
sidebar_current: "docs-alicloud-datasource-threat-detection-honeypot-probes"
description: |-
  Provides a list of Threat Detection Honeypot Probe owned by an Alibaba Cloud account.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud_threat_detection_honeypot_probes

This data source provides Threat Detection Honeypot Probe available to the user.[What is Honeypot Probe](https://www.alibabacloud.com/help/en/security-center/latest/api-doc-sas-2018-12-03-api-doc-createhoneypotprobe)

-> **NOTE:** Available in 1.195.0+

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.alicloud as alicloud
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        # Terraform Variables are not always the best fit for getting inputs in the context of Terraform CDK.
        #     You can read more about this at https://cdk.tf/variables
        name = cdktf.TerraformVariable(self, "name",
            default="tf-testAccThreatDetectionHoneypotProbe"
        )
        alicloud_threat_detection_honeypot_probe_default =
        alicloud.threat_detection_honeypot_probe.ThreatDetectionHoneypotProbe(self, "default",
            arp=True,
            control_node_id="e1397077-4941-4b14-b533-ca2bdebd00a3",
            display_name=name.string_value,
            honeypot_bind_list=[ThreatDetectionHoneypotProbeHoneypotBindList(
                bind_port_list=[ThreatDetectionHoneypotProbeHoneypotBindListBindPortList(
                    end_port=80,
                    start_port=80
                )
                ],
                honeypot_id="4925bf9784de992ecd017ad051528a03b3927ef814eeff76c2ebb3ab9a84bf05"
            )
            ],
            ping=True,
            probe_type="host_probe",
            uuid="e52c7872-29d1-4aa1-9908-0299abd53606"
        )
        data_alicloud_threat_detection_honeypot_probes_default =
        alicloud.data_alicloud_threat_detection_honeypot_probes.DataAlicloudThreatDetectionHoneypotProbes(self, "default_2",
            display_name=name.string_value,
            enable_details=True,
            ids=[
                cdktf.Token.as_string(alicloud_threat_detection_honeypot_probe_default.id)
            ],
            probe_type="host_probe"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_alicloud_threat_detection_honeypot_probes_default.override_logical_id("default")
        cdktf.TerraformOutput(self, "alicloud_threat_detection_honeypot_probe_example_id",
            value=cdktf.property_access(data_alicloud_threat_detection_honeypot_probes_default.probes, ["0", "id"])
        )
```

## Argument Reference

The following arguments are supported:
* `display_name` - (ForceNew, Optional) Probe name
* `probe_type` - (ForceNew, Optional) Probe type
* `ids` - (Optional, ForceNew, Computed) A list of Honeypot Probe IDs.
* `output_file` - (Optional) File name where to save data source results (after running `terraform plan`).
* `enable_details` - (Optional, ForceNew) Default to `false`. Set it to `true` can output more details about resource attributes.
* `name_regex` - (Optional, ForceNew) A regex string to filter results by display name.


## Attributes Reference

The following attributes are exported in addition to the arguments listed above:
* `ids` - A list of Honeypot Probe IDs.
* `probes` - A list of Honeypot Probe Entries. Each element contains the following attributes:
    * `id` - The ID of the honeypot probe. Its value is the same as `honeypot_probe_id`.
    * `control_node_id` - The ID of the management node.
    * `display_name` - Probe name.
    * `honeypot_probe_id` - The first ID of the resource
    * `probe_type` - Probe type, support `host_probe` and `vpc_black_hole_probe`.
    * `status` - The status of the resource.
    * `uuid` - Machine uuid. Has a value when the type is `host_probe`.
    * `vpc_id` - The ID of the VPC. Has a value when the type is `vpc_black_hole_probe`.
    * `ping` - Ping scan detection. Value:**true**: Enable **false**: Disabled. Available when `enable_details` is on.
    * `arp` - ARP spoofing detection.-**true**: Enable-**false**: Disabled. Available when `enable_details` is on.
    * `service_ip_list` - Listen to the IP address list. Available when `enable_details` is on.
    * `proxy_ip` - Proxy IP. Available when `enable_details` is on.
    * `bind_port_list` - List of listening ports. Available when `enable_details` is on.
      * `bind_port` - Whether to bind the port.
      * `end_port` - End port.
      * `fixed` - Whether the port is fixed.
      * `start_port` - Start port.
      * `target_port` - Destination port.

<!-- cache-key: cdktf-0.17.0-pre.15 input-76809779dbc9e47f145ed313c98abd3f065c1251cff37b1679be43e9324bc9aa -->