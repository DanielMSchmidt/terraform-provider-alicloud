---
subcategory: "Elastic Desktop Service (ECD)"
layout: "alicloud"
page_title: "Alicloud: alicloud_ecd_desktops"
sidebar_current: "docs-alicloud-datasource-ecd-desktops"
description: |-
  Provides a list of Ecd Desktops to the user.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_ecd\_desktops

This data source provides the Ecd Desktops of the current Alibaba Cloud user.

-> **NOTE:** Available in v1.144.0+.

## Example Usage

Basic Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.alicloud as alicloud
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        alicloud_ecd_policy_group_default =
        alicloud.ecd_policy_group.EcdPolicyGroup(self, "default",
            authorize_access_policy_rules=[EcdPolicyGroupAuthorizeAccessPolicyRules(
                cidr_ip="1.2.3.4/24",
                description="example_value"
            )
            ],
            authorize_security_policy_rules=[EcdPolicyGroupAuthorizeSecurityPolicyRules(
                cidr_ip="0.0.0.0/0",
                description="example_value",
                ip_protocol="TCP",
                policy="accept",
                port_range="80/80",
                priority="1",
                type="inflow"
            )
            ],
            clipboard="readwrite",
            local_drive="read",
            policy_group_name="your_policy_group_name"
        )
        alicloud_ecd_simple_office_site_default =
        alicloud.ecd_simple_office_site.EcdSimpleOfficeSite(self, "default_1",
            cidr_block="172.16.0.0/12",
            desktop_access_type="Internet",
            office_site_name="your_office_site_name"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_ecd_simple_office_site_default.override_logical_id("default")
        alicloud_ecd_user_default = alicloud.ecd_user.EcdUser(self, "default_2",
            email="your_email",
            end_user_id="your_end_user_id",
            password="your_password",
            phone="your_phone"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_ecd_user_default.override_logical_id("default")
        data_alicloud_ecd_bundles_default =
        alicloud.data_alicloud_ecd_bundles.DataAlicloudEcdBundles(self, "default_3",
            bundle_type="SYSTEM"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_alicloud_ecd_bundles_default.override_logical_id("default")
        alicloud_ecd_desktop_default = alicloud.ecd_desktop.EcdDesktop(self, "default_4",
            bundle_id=cdktf.Token.as_string(
                cdktf.property_access(data_alicloud_ecd_bundles_default.bundles, ["0", "id"
                ])),
            desktop_name="your_desktop_name",
            end_user_ids=[cdktf.Token.as_string(alicloud_ecd_user_default.id)],
            office_site_id=cdktf.Token.as_string(alicloud_ecd_simple_office_site_default.id),
            policy_group_id=cdktf.Token.as_string(alicloud_ecd_policy_group_default.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_ecd_desktop_default.override_logical_id("default")
        data_alicloud_ecd_desktops_ids =
        alicloud.data_alicloud_ecd_desktops.DataAlicloudEcdDesktops(self, "ids",
            ids=[cdktf.Token.as_string(alicloud_ecd_desktop_default.id)]
        )
        data_alicloud_ecd_desktops_name_regex =
        alicloud.data_alicloud_ecd_desktops.DataAlicloudEcdDesktops(self, "nameRegex",
            name_regex=cdktf.Token.as_string(alicloud_ecd_desktop_default.desktop_name)
        )
        cdktf.TerraformOutput(self, "ecd_desktop_id_1",
            value=cdktf.property_access(data_alicloud_ecd_desktops_ids.desktops, ["0", "id"
            ])
        )
        cdktf.TerraformOutput(self, "ecd_desktop_id_2",
            value=cdktf.property_access(data_alicloud_ecd_desktops_name_regex.desktops, ["0", "id"
            ])
        )
```

## Argument Reference

The following arguments are supported:

* `desktop_name` - (Optional, ForceNew) The desktop name.
* `office_site_id` - (Optional, ForceNew) The ID of the Simple Office Site.
* `ids` - (Optional, ForceNew, Computed)  A list of Desktop IDs.
* `name_regex` - (Optional, ForceNew) A regex string to filter results by Desktop name.
* `output_file` - (Optional) File name where to save data source results (after running `terraform plan`).
* `policy_group_id` - (Optional, ForceNew) The policy group id of the Desktop.
* `status` - (Optional, ForceNew) The status of the Desktop. Valid values: `Deleted`, `Expired`, `Pending`, `Running`, `Starting`, `Stopped`, `Stopping`.

## Argument Reference

The following attributes are exported in addition to the arguments listed above:

* `names` - A list of Desktop names.
* `desktops` - A list of Ecd Desktops. Each element contains the following attributes:
	* `cpu` - The number of CPUs.
	* `create_time` - The creation time of the Desktop.
	* `desktop_id` - The desktop id of the Desktop.
	* `desktop_name` - The desktop name of the Desktop.
	* `desktop_type` - The desktop type of the Desktop.
	* `directory_id` - The directory id of the Desktop.
	* `end_user_ids` - The desktop end user id of the Desktop.
	* `expired_time` - The expired time of the Desktop.
	* `id` - The ID of the Desktop.
	* `image_id` - The image id of the Desktop.
	* `memory` - The memory of the Desktop.
	* `network_interface_id` - The network interface id of the Desktop.
	* `payment_type` - The payment type of the Desktop.
	* `policy_group_id` - The policy group id of the Desktop.
	* `status` - The status of the Desktop. Valid values: `Deleted`, `Expired`, `Pending`, `Running`, `Starting`, `Stopped`, `Stopping`.
	* `system_disk_size` - The system disk size of the Desktop.
<!-- cache-key: cdktf-0.17.0-pre.15 input-5de145306b38dc9848b9e77e6938351571b789105e3ca31f9967214e0261f053 -->