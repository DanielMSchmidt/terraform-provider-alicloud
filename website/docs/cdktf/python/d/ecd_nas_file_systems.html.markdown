---
subcategory: "Elastic Desktop Service (ECD)"
layout: "alicloud"
page_title: "Alicloud: alicloud_ecd_nas_file_systems"
sidebar_current: "docs-alicloud-datasource-ecd-nas-file-systems"
description: |-
  Provides a list of Ecd Nas File Systems to the user.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_ecd\_nas\_file\_systems

This data source provides the Ecd Nas File Systems of the current Alibaba Cloud user.

-> **NOTE:** Available in v1.141.0+.

## Example Usage

Basic Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.alicloud as alicloud
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        alicloud_ecd_simple_office_site_default =
        alicloud.ecd_simple_office_site.EcdSimpleOfficeSite(self, "default",
            cidr_block="172.16.0.0/12",
            desktop_access_type="Internet",
            enable_internet_access=False,
            office_site_name="your_office_site_name"
        )
        data_alicloud_ecd_nas_file_systems_ids =
        alicloud.data_alicloud_ecd_nas_file_systems.DataAlicloudEcdNasFileSystems(self, "ids")
        cdktf.TerraformOutput(self, "ecd_nas_file_system_id_1",
            value=cdktf.property_access(data_alicloud_ecd_nas_file_systems_ids.systems, ["0", "id"
            ])
        )
        alicloud_ecd_nas_file_system_default =
        alicloud.ecd_nas_file_system.EcdNasFileSystem(self, "default_3",
            description="your_description",
            nas_file_system_name="your_nas_file_system_name",
            office_site_id=cdktf.Token.as_string(alicloud_ecd_simple_office_site_default.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_ecd_nas_file_system_default.override_logical_id("default")
        data_alicloud_ecd_nas_file_systems_name_regex =
        alicloud.data_alicloud_ecd_nas_file_systems.DataAlicloudEcdNasFileSystems(self, "nameRegex",
            name_regex=cdktf.Token.as_string(alicloud_ecd_nas_file_system_default.nas_file_system_name)
        )
        cdktf.TerraformOutput(self, "ecd_nas_file_system_id_2",
            value=cdktf.property_access(data_alicloud_ecd_nas_file_systems_name_regex.systems, ["0", "id"])
        )
```

## Argument Reference

The following arguments are supported:

* `ids` - (Optional, ForceNew, Computed)  A list of Nas File System IDs.
* `name_regex` - (Optional, ForceNew) A regex string to filter results by Nas File System name.
* `office_site_id` - (Optional, ForceNew) The ID of office site.
* `output_file` - (Optional) File name where to save data source results (after running `terraform plan`).
* `status` - (Optional, ForceNew) The status of nas file system. Valid values: `Pending`, `Running`, `Stopped`,`Deleting`, `Deleted`, `Invalid`.

## Argument Reference

The following attributes are exported in addition to the arguments listed above:

* `names` - A list of Nas File System names.
* `systems` - A list of Ecd Nas File Systems. Each element contains the following attributes:
	* `capacity` - The capacity of nas file system.
	* `create_time` - The create time of nas file system.
	* `description` - The description of nas file system.
	* `file_system_id` - The filesystem id of nas file system.
	* `file_system_type` - The type of nas file system.
	* `id` - The ID of the Nas File System.
	* `metered_size` - The size of metered.
	* `mount_target_domain` - The domain of mount target.
	* `mount_target_status` - The status of mount target. Valid values: `Pending`, `Active`, `Inactive`,`Deleting`,`Invalid`.
	* `nas_file_system_name` - The name of nas file system.
	* `office_site_id` - The ID of office site.
	* `office_site_name` - The name of office site.
	* `status` - The status of nas file system. Valid values: `Pending`, `Running`, `Stopped`,`Deleting`, `Deleted`, `Invalid`.
	* `storage_type` - The storage type of nas file system.
	* `support_acl` - Whether to support Acl.
	* `zone_id` - The zone id of nas file system.

<!-- cache-key: cdktf-0.17.0-pre.15 input-871d17c97535efb09d45c7f9c8e892c6617d9fe456aaede227c2ad17d63b7cce -->