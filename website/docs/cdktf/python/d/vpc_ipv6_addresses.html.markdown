---
subcategory: "VPC"
layout: "alicloud"
page_title: "Alicloud: alicloud_vpc_ipv6_addresses"
sidebar_current: "docs-alicloud-datasource-vpc-ipv6-addresses"
description: |-
  Provides a list of Vpc Ipv6 Addresses to the user.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_vpc\_ipv6\_addresses

This data source provides the Vpc Ipv6 Addresses of the current Alibaba Cloud user.

-> **NOTE:** Available in v1.142.0+.

## Example Usage

Basic Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.alicloud as alicloud
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        data_alicloud_vpc_ipv6_addresses_associated_instance_id =
        alicloud.data_alicloud_vpc_ipv6_addresses.DataAlicloudVpcIpv6Addresses(self, "associatedInstanceId",
            associated_instance_id="example_value"
        )
        data_alicloud_vpc_ipv6_addresses_status =
        alicloud.data_alicloud_vpc_ipv6_addresses.DataAlicloudVpcIpv6Addresses(self, "status",
            status="Available"
        )
        data_alicloud_vpc_ipv6_addresses_vpc_id =
        alicloud.data_alicloud_vpc_ipv6_addresses.DataAlicloudVpcIpv6Addresses(self, "vpcId",
            vpc_id="example_value"
        )
        data_alicloud_vpc_ipv6_addresses_vswitch_id =
        alicloud.data_alicloud_vpc_ipv6_addresses.DataAlicloudVpcIpv6Addresses(self, "vswitchId",
            vswitch_id="example_value"
        )
        cdktf.TerraformOutput(self, "vpc_ipv6_address_id_1",
            value=cdktf.property_access(data_alicloud_vpc_ipv6_addresses_associated_instance_id.addresses, ["0", "id"])
        )
        cdktf.TerraformOutput(self, "vpc_ipv6_address_id_2",
            value=cdktf.property_access(data_alicloud_vpc_ipv6_addresses_vswitch_id.addresses, ["0", "id"])
        )
        cdktf.TerraformOutput(self, "vpc_ipv6_address_id_3",
            value=cdktf.property_access(data_alicloud_vpc_ipv6_addresses_vpc_id.addresses, ["0", "id"
            ])
        )
        cdktf.TerraformOutput(self, "vpc_ipv6_address_id_4",
            value=cdktf.property_access(data_alicloud_vpc_ipv6_addresses_status.addresses, ["0", "id"])
        )
```

## Argument Reference

The following arguments are supported:

* `associated_instance_id` - (Optional, ForceNew) The ID of the instance that is assigned the IPv6 address.
* `output_file` - (Optional) File name where to save data source results (after running `terraform plan`).
* `status` - (Optional, ForceNew) The status of the IPv6 address. Valid values:`Pending` or `Available`. 
  - `Pending`: The IPv6 address is being configured. 
  - `Available`: The IPv6 address is available.
* `vpc_id` - (Optional, ForceNew) The ID of the VPC to which the IPv6 address belongs.
* `vswitch_id` - (Optional, ForceNew) The ID of the vSwitch to which the IPv6 address belongs.

## Argument Reference

The following attributes are exported in addition to the arguments listed above:

* `names` - A list of Ipv6 Address names.
* `addresses` - A list of Vpc Ipv6 Addresses. Each element contains the following attributes:
	* `associated_instance_id` - The ID of the instance that is assigned the IPv6 address.
	* `associated_instance_type` - The type of the instance that is assigned the IPv6 address.
	* `create_time` - The time when the IPv6 address was created.
	* `id` - The ID of the Ipv6 Address.
	* `ipv6_address` - The address of the Ipv6 Address.
	* `ipv6_address_id` - The ID of the IPv6 address.
	* `ipv6_address_name` - The name of the IPv6 address.
	* `ipv6_gateway_id` - The ID of the IPv6 gateway to which the IPv6 address belongs.
	* `network_type` - The type of communication supported by the IPv6 address. Valid values:`Private` or `Public`. `Private`: communication within the private network. `Public`: communication over the public network
	* `status` - The status of the IPv6 address. Valid values:`Pending` or `Available`.
	* `vpc_id` - The ID of the VPC to which the IPv6 address belongs.
	* `vswitch_id` - The ID of the vSwitch to which the IPv6 address belongs.

<!-- cache-key: cdktf-0.17.0-pre.15 input-fba0aac5592be800b5484f364aa3244ab43271ce2f87b8c833739c2b7246d072 -->