---
subcategory: "DMS Enterprise"
layout: "alicloud"
page_title: "Alicloud: alicloud_dms_enterprise_proxy_accesses"
sidebar_current: "docs-alicloud-datasource-dms-enterprise-proxy-accesses"
description: |-
  Provides a list of DMS Enterprise Proxy Access owned by an Alibaba Cloud account.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud_dms_enterprise_proxy_accesses

This data source provides DMS Enterprise Proxy Access available to the user.[What is Proxy Access](https://www.alibabacloud.com/help/zh/data-management-service/latest/api-doc-dms-enterprise-2018-11-01-api-doc-createproxyaccess)

-> **NOTE:** Available in 1.195.0+

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.alicloud as alicloud
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        alicloud_dms_enterprise_proxy_access_default =
        alicloud.dms_enterprise_proxy_access.DmsEnterpriseProxyAccess(self, "default",
            indep_account="dmstest",
            indep_password="PASSWORD-DEMO",
            proxy_id=cdktf.Token.as_string(1881),
            user_id=cdktf.Token.as_string(104442)
        )
        data_alicloud_dms_enterprise_proxy_accesses_default =
        alicloud.data_alicloud_dms_enterprise_proxy_accesses.DataAlicloudDmsEnterpriseProxyAccesses(self, "default_1",
            ids=[
                cdktf.Token.as_string(alicloud_dms_enterprise_proxy_access_default.id)
            ],
            proxy_id=cdktf.Token.as_string(1881)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_alicloud_dms_enterprise_proxy_accesses_default.override_logical_id("default")
        cdktf.TerraformOutput(self, "alicloud_dms_proxy_acceses_example_id",
            value=cdktf.property_access(data_alicloud_dms_enterprise_proxy_accesses_default.accesses, ["0", "id"])
        )
```

## Argument Reference

The following arguments are supported:
* `proxy_id` - (Required,ForceNew) The ID of the security agent.
* `ids` - (Optional, ForceNew, Computed) A list of Proxy Access IDs.
* `output_file` - (Optional) File name where to save data source results (after running `terraform plan`).


## Attributes Reference

The following attributes are exported in addition to the arguments listed above:
* `ids` - A list of Proxy Access IDs.
* `accesses` - A list of Proxy Access Entries. Each element contains the following attributes:
    * `id` - Security Protection authorization ID.
    * `access_id` - The authorized account of the security agent.
    * `gmt_create` - The authorization time of the security access agent permission.
    * `indep_account` - Database account.
    * `instance_id` - The ID of the instance.
    * `origin_info` - The source information of the security access agent permission is enabled, and the return value is as follows:**Owner Authorization**: The UID of the owner in parentheses.**Work Order Authorization**: The ticket number in parentheses is the number of the user to apply for permission.
    * `proxy_access_id` - Security Protection authorization ID. After the target user is authorized by the security protection agent, the system automatically generates a security protection authorization ID, which is globally unique.
    * `proxy_id` - The ID of the security agent.
    * `user_id` - The user ID.
    * `user_name` - User nickname.
    * `user_uid` - User UID.

<!-- cache-key: cdktf-0.17.0-pre.15 input-67950ed59e62f70e006cd0ab5f0111b307344307c61c8109c7d2f2e1e987fb4f -->