---
subcategory: "Container Service for Kubernetes (ACK)"
layout: "alicloud"
page_title: "Alicloud: alicloud_cs_serverless_kubernetes_clusters"
sidebar_current: "docs-alicloud-datasource-cs-serverless-kubernetes-clusters"
description: |-
  Provides a list of Container Service Serverless Kubernetes Clusters to be used by the alicloud_cs_serverless_kubernetes_clusters resource.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_cs\_serverless\_kubernetes\_clusters

This data source provides a list Container Service Serverless Kubernetes Clusters on Alibaba Cloud.

-> **NOTE:** Available in 1.58.0+

-> **NOTE:** From version 1.177.0+, We supported batch export of clusters' kube config information by `kube_config_file_prefix`.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.alicloud as alicloud
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        data_alicloud_cs_serverless_kubernetes_clusters_k8_sClusters =
        alicloud.data_alicloud_cs_serverless_kubernetes_clusters.DataAlicloudCsServerlessKubernetesClusters(self, "k8s_clusters",
            kube_config_file_prefix="~/.kube/serverless",
            name_regex="my-first-k8s",
            output_file="my-first-k8s-json"
        )
        cdktf.TerraformOutput(self, "output",
            value=data_alicloud_cs_serverless_kubernetes_clusters_k8_sClusters.clusters
        )
```

## Argument Reference

The following arguments are supported:

* `ids` - (Optional) Cluster IDs to filter.
* `name_regex` - (Optional) A regex string to filter results by cluster name.
* `output_file` - (Optional) File name where to save data source results (after running `terraform plan`).
* `enabled_details` - (Optional) Boolean, false by default, only `id` and `name` are exported. Set to true if more details are needed, e.g.,  `deletion_protection`, `connections`. See full list in attributes.
* `kube_config_file_prefix` - (Optional, Available in 1.177.0+) The path prefix of kube config. You could store kube config in a specified directory by specifying this field, like `~/.kube/serverless`, then it will be named with `~/.kube/serverless-clusterID-kubeconfig`. From version 1.187.0+, kube_config will not export kube_config if this field is not set.

## Attributes Reference

The following attributes are exported in addition to the arguments listed above:

* `ids` - A list of matched Kubernetes clusters' ids.
* `names` - A list of matched Kubernetes clusters' names.
* `clusters` - A list of matched Kubernetes clusters. Each element contains the following attributes:
  * `id` - The ID of the container cluster.
  * `name` - The name of the container cluster.
  * `vswitch_id` - The ID of VSwitch where the current cluster is located.
  * `vpc_id` - The ID of VPC where the current cluster is located.
  * `security_group_id` - The ID of security group where the current cluster  is located.
  * `nat_gateway_id` - The ID of nat gateway used to launch kubernetes cluster.
  * `deletion_protection` - Whether the cluster support delete protection.  
  * `connections` - Map of serverless cluster connection information. It contains several attributes to `Block Connections`.
  * `resource_group_id` - (Optional, ForceNew, Available in 1.101.0+) The ID of the resource group,by default these cloud resources are automatically assigned to the default resource group.
  
### Block Connections

* `api_server_internet` - API Server Internet endpoint.
* `api_server_intranet` - API Server Intranet endpoint.
* `master_public_ip` - Master node SSH IP address.

<!-- cache-key: cdktf-0.17.0-pre.15 input-43d4099636e2ae7832a7c6a0fe0c9ed02d23f02c9d5c31acb771288ef716be8e -->