---
subcategory: "Cloud Monitor Service"
layout: "alicloud"
page_title: "Alicloud: alicloud_cms_dynamic_tag_groups"
sidebar_current: "docs-alicloud-datasource-cms-dynamic-tag-groups"
description: |-
  Provides a list of Cms Dynamic Tag Groups to the user.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_cms\_dynamic\_tag\_groups

This data source provides the Cms Dynamic Tag Groups of the current Alibaba Cloud user.

-> **NOTE:** Available in v1.142.0+.

## Example Usage

Basic Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.alicloud as alicloud
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        # Terraform Variables are not always the best fit for getting inputs in the context of Terraform CDK.
        #     You can read more about this at https://cdk.tf/variables
        name = cdktf.TerraformVariable(self, "name",
            default="example_value"
        )
        alicloud_cms_alarm_contact_group_default =
        alicloud.cms_alarm_contact_group.CmsAlarmContactGroup(self, "default",
            alarm_contact_group_name=name.string_value,
            describe="example_value",
            enable_subscribed=True
        )
        alicloud_cms_dynamic_tag_group_default =
        alicloud.cms_dynamic_tag_group.CmsDynamicTagGroup(self, "default_2",
            contact_group_list=[
                cdktf.Token.as_string(alicloud_cms_alarm_contact_group_default.id)
            ],
            match_express=[CmsDynamicTagGroupMatchExpress(
                tag_value="your_tag_value",
                tag_value_match_function="all"
            )
            ],
            tag_key="your_tag_key"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_cms_dynamic_tag_group_default.override_logical_id("default")
        data_alicloud_cms_dynamic_tag_groups_ids =
        alicloud.data_alicloud_cms_dynamic_tag_groups.DataAlicloudCmsDynamicTagGroups(self, "ids",
            ids=[cdktf.Token.as_string(alicloud_cms_dynamic_tag_group_default.id)]
        )
        cdktf.TerraformOutput(self, "cms_dynamic_tag_group_id_1",
            value=cdktf.property_access(data_alicloud_cms_dynamic_tag_groups_ids.groups, ["0", "id"
            ])
        )
```

## Argument Reference

The following arguments are supported:

* `ids` - (Optional, ForceNew, Computed)  A list of Dynamic Tag Group IDs.
* `output_file` - (Optional) File name where to save data source results (after running `terraform plan`).
* `status` - (Optional, ForceNew) The status of the resource. Valid values: `RUNNING`, `FINISH`.
* `tag_key` - (Optional, ForceNew) The tag key of the tag.

## Argument Reference

The following attributes are exported in addition to the arguments listed above:

* `groups` - A list of Cms Dynamic Tag Groups. Each element contains the following attributes:
	* `dynamic_tag_rule_id` - The ID of the tag rule.
	* `id` - The ID of the Dynamic Tag Group.
	* `match_express_filter_relation` - The relationship between conditional expressions. Valid values: `and`, `or`.
	* `match_express` - The label generates a matching expression that applies the grouping. See the following `Block match_express`.
		* `tag_value` - The tag value. The Tag value must be used in conjunction with the tag value matching method TagValueMatchFunction.
		* `tag_value_match_function` - Matching method of tag value. Valid values: `all`, `startWith`,`endWith`,`contains`,`notContains`,`equals`.
	* `status` -  The status of the resource. Valid values: `RUNNING`, `FINISH`.
	* `tag_key` - The tag key of the tag.
	

<!-- cache-key: cdktf-0.17.0-pre.15 input-94d17910cb74274de1e5b2371032984836f2f06ae33fed1c877b0fc4551d02fd -->