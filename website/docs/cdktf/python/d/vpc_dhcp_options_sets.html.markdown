---
subcategory: "VPC"
layout: "alicloud"
page_title: "Alicloud: alicloud_vpc_dhcp_options_sets"
sidebar_current: "docs-alicloud-datasource-vpc-dhcp-options-sets"
description: |-
  Provides a list of Vpc Dhcp Options Sets to the user.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_vpc\_dhcp\_options\_sets

This data source provides the Vpc Dhcp Options Sets of the current Alibaba Cloud user.

-> **NOTE:** Available in v1.134.0+.

## Example Usage

Basic Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.alicloud as alicloud
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        data_alicloud_vpc_dhcp_options_sets_dhcp_options_set_name =
        alicloud.data_alicloud_vpc_dhcp_options_sets.DataAlicloudVpcDhcpOptionsSets(self, "dhcpOptionsSetName",
            dhcp_options_set_name="my-DhcpOptionsSet"
        )
        data_alicloud_vpc_dhcp_options_sets_domain_name =
        alicloud.data_alicloud_vpc_dhcp_options_sets.DataAlicloudVpcDhcpOptionsSets(self, "domainName",
            domain_name="example.com",
            ids=["example_value"]
        )
        data_alicloud_vpc_dhcp_options_sets_ids =
        alicloud.data_alicloud_vpc_dhcp_options_sets.DataAlicloudVpcDhcpOptionsSets(self, "ids",
            ids=["example_value"]
        )
        data_alicloud_vpc_dhcp_options_sets_name_regex =
        alicloud.data_alicloud_vpc_dhcp_options_sets.DataAlicloudVpcDhcpOptionsSets(self, "nameRegex",
            name_regex="^my-DhcpOptionsSet"
        )
        data_alicloud_vpc_dhcp_options_sets_status =
        alicloud.data_alicloud_vpc_dhcp_options_sets.DataAlicloudVpcDhcpOptionsSets(self, "status",
            ids=["example_value"],
            status="Available"
        )
        cdktf.TerraformOutput(self, "vpc_dhcp_options_set_id_1",
            value=cdktf.property_access(data_alicloud_vpc_dhcp_options_sets_ids.sets, ["0", "id"
            ])
        )
        cdktf.TerraformOutput(self, "vpc_dhcp_options_set_id_2",
            value=cdktf.property_access(data_alicloud_vpc_dhcp_options_sets_name_regex.sets, ["0", "id"])
        )
        cdktf.TerraformOutput(self, "vpc_dhcp_options_set_id_3",
            value=cdktf.property_access(data_alicloud_vpc_dhcp_options_sets_dhcp_options_set_name.sets, ["0", "id"])
        )
        cdktf.TerraformOutput(self, "vpc_dhcp_options_set_id_4",
            value=cdktf.property_access(data_alicloud_vpc_dhcp_options_sets_domain_name.sets, ["0", "id"])
        )
        cdktf.TerraformOutput(self, "vpc_dhcp_options_set_id_5",
            value=cdktf.property_access(data_alicloud_vpc_dhcp_options_sets_status.sets, ["0", "id"
            ])
        )
```

## Argument Reference

The following arguments are supported:

* `dhcp_options_set_name` - (Optional, ForceNew) The name of the DHCP options set.The name must be 2 to 128 characters in length and can contain letters, Chinese characters, digits, underscores (_), and hyphens (-). It must start with a letter or a Chinese character.
* `domain_name` - (Optional, ForceNew) The root domain, for example, example.com. After a DHCP options set is associated with a Virtual Private Cloud (VPC) network, the root domain in the DHCP options set is automatically synchronized to the ECS instances in the VPC network.
* `ids` - (Optional, ForceNew, Computed)  A list of Dhcp Options Set IDs.
* `name_regex` - (Optional, ForceNew) A regex string to filter results by Dhcp Options Set name.
* `status` - (Optional, ForceNew) The status of the DHCP options set. Valid values: `Available`, `InUse` or `Pending`. `Available`: The DHCP options set is available for use. `InUse`: The DHCP options set is in use. `Pending`: The DHCP options set is being configured.
* `output_file` - (Optional) File name where to save data source results (after running `terraform plan`).

## Argument Reference

The following attributes are exported in addition to the arguments listed above:

* `names` - A list of Dhcp Options Set names.
* `sets` - A list of Vpc Dhcp Options Sets. Each element contains the following attributes:
    * `dhcp_options_set_description` - The description of the DHCP options set. The description must be 2 to 256
      characters in length and cannot start with `http://` or `https://`.
    * `dhcp_options_set_id` - The resource ID in terraform of Dhcp Options Set.
    * `dhcp_options_set_name` - The root domain, for example, example.com. After a DHCP options set is associated with a
      Virtual Private Cloud (VPC) network, the root domain in the DHCP options set is automatically synchronized to the
      ECS instances in the VPC network.
    * `domain_name` - The root domain, for example, example.com. After a DHCP options set is associated with a Virtual
      Private Cloud (VPC) network, the root domain in the DHCP options set is automatically synchronized to the ECS
      instances in the VPC network.
    * `domain_name_servers` - The DNS server IP addresses. Up to four DNS server IP addresses can be specified. IP
      addresses must be separated with commas (,).
    * `id` - The resource ID in terraform of Dhcp Options Set.
    * `owner_id` - The ID of the account to which the DHCP options set belongs.
    * `status` - The status of the DHCP options set. Valid values: `Available`, `InUse` or `Pending`. `Available`: The DHCP options set is available for use. `InUse`: The DHCP options set is in use. `Pending`: The DHCP options set is being configured.
    * `associate_vpc_count` - The Number of VPCs bound by the DHCP option set.

<!-- cache-key: cdktf-0.17.0-pre.15 input-b9c6b7ceb7517bd66b8b20c1329bd97fd0de6c81facb3af892fca713eed6cbae -->