---
subcategory: "VPC"
layout: "alicloud"
page_title: "Alicloud: alicloud_route_entries"
sidebar_current: "docs-alicloud-datasource-route-entries"
description: |-
    Provides a list of Route Entries owned by an Alibaba Cloud account.
---


<!-- Please do not edit this file, it is generated. -->
# alicloud\_route\_entries

This data source provides a list of Route Entries owned by an Alibaba Cloud account.

-> **NOTE:** Available in 1.37.0+.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.alicloud as alicloud
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        # Terraform Variables are not always the best fit for getting inputs in the context of Terraform CDK.
        #     You can read more about this at https://cdk.tf/variables
        name = cdktf.TerraformVariable(self, "name",
            default="tf-testAccRouteEntryConfig"
        )
        alicloud_vpc_foo = alicloud.vpc.Vpc(self, "foo",
            cidr_block="10.1.0.0/21",
            name=name.string_value
        )
        data_alicloud_images_default =
        alicloud.data_alicloud_images.DataAlicloudImages(self, "default",
            most_recent=True,
            name_regex="^ubuntu_18.*64",
            owners="system"
        )
        data_alicloud_zones_default =
        alicloud.data_alicloud_zones.DataAlicloudZones(self, "default_3",
            available_resource_creation="VSwitch"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_alicloud_zones_default.override_logical_id("default")
        alicloud_security_group_tf_test_foo =
        alicloud.security_group.SecurityGroup(self, "tf_test_foo",
            description="foo",
            name=name.string_value,
            vpc_id=cdktf.Token.as_string(alicloud_vpc_foo.id)
        )
        alicloud.security_group_rule.SecurityGroupRule(self, "ingress",
            cidr_ip="0.0.0.0/0",
            ip_protocol="tcp",
            nic_type="intranet",
            policy="accept",
            port_range="22/22",
            priority=1,
            security_group_id=cdktf.Token.as_string(alicloud_security_group_tf_test_foo.id),
            type="ingress"
        )
        alicloud_vswitch_foo = alicloud.vswitch.Vswitch(self, "foo_6",
            availability_zone=cdktf.Token.as_string(
                cdktf.property_access(data_alicloud_zones_default.zones, ["0", "id"])),
            cidr_block="10.1.1.0/24",
            vpc_id=cdktf.Token.as_string(alicloud_vpc_foo.id),
            vswitch_name=name.string_value
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_vswitch_foo.override_logical_id("foo")
        data_alicloud_instance_types_default =
        alicloud.data_alicloud_instance_types.DataAlicloudInstanceTypes(self, "default_7",
            availability_zone=cdktf.Token.as_string(
                cdktf.property_access(data_alicloud_zones_default.zones, ["0", "id"])),
            cpu_core_count=1,
            memory_size=2
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_alicloud_instance_types_default.override_logical_id("default")
        alicloud_instance_foo = alicloud.instance.Instance(self, "foo_8",
            allocate_public_ip=True,
            image_id=cdktf.Token.as_string(
                cdktf.property_access(data_alicloud_images_default.images, ["0", "id"])),
            instance_charge_type="PostPaid",
            instance_name=name.string_value,
            instance_type=cdktf.Token.as_string(
                cdktf.property_access(data_alicloud_instance_types_default.instance_types, ["0", "id"
                ])),
            internet_charge_type="PayByTraffic",
            internet_max_bandwidth_out=5,
            security_groups=[cdktf.Token.as_string(alicloud_security_group_tf_test_foo.id)],
            system_disk_category="cloud_efficiency",
            vswitch_id=cdktf.Token.as_string(alicloud_vswitch_foo.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_instance_foo.override_logical_id("foo")
        alicloud_route_entry_foo = alicloud.route_entry.RouteEntry(self, "foo_9",
            destination_cidrblock="172.11.1.1/32",
            nexthop_id=cdktf.Token.as_string(alicloud_instance_foo.id),
            nexthop_type="Instance",
            route_table_id=cdktf.Token.as_string(alicloud_vpc_foo.route_table_id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        alicloud_route_entry_foo.override_logical_id("foo")
        data_alicloud_route_entries_foo =
        alicloud.data_alicloud_route_entries.DataAlicloudRouteEntries(self, "foo_10",
            route_table_id=cdktf.Token.as_string(alicloud_route_entry_foo.route_table_id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_alicloud_route_entries_foo.override_logical_id("foo")
```

## Argument Reference

The following arguments are supported:

* `route_table_id` - (Required, ForceNew) The ID of the router table to which the route entry belongs.
* `instance_id` - (Optional) The instance ID of the next hop.
* `type` - (Optional) The type of the route entry.
* `cidr_block` - (Optional) The destination CIDR block of the route entry.
* `output_file` - (Optional) File name where to save data source results (after running `terraform plan`).

## Attributes Reference

The following attributes are exported in addition to the arguments listed above:

* `entries` - A list of Route Entries. Each element contains the following attributes:
  * `type` - The type of the route entry.
  * `next_hop_type` - The type of the next hop.
  * `status` - The status of the route entry.
  * `instance_id` - The instance ID of the next hop.
  * `route_table_id` - The ID of the router table to which the route entry belongs.
  * `cidr_block` - The destination CIDR block of the route entry.


<!-- cache-key: cdktf-0.17.0-pre.15 input-9cff6fa32bee00314daf743bc248cd1573a6a3fe65b2fdd1db9f7b9337764704 -->